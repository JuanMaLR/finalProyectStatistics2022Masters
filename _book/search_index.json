[["index.html", " 1 Abstract", " Instituto Tecnológico y de Estudios Superiores de Monterrey Campus Monterrey Ing. Karen Joselyne Avilez Cuahquentzi - A00835413 Ing. Juan Manuel Ledesma Rangel - A01206568 Ing. Luis Alberto Otero Herrera - A00835185 Ing. Luis Antonio Pulido Victoria - A00835394 Ing. Bryan Daniel Sandoval Gaytán - A00835418 2022-06-08 1 Abstract Statistical analysis has been a very useful method to analyze any type of quantitative or qualitative process in order to provide verdicts according to what is required to be assessed. One of the widely applied applications of statistical analysis is the validation of the quality of a company’s production process through the “process capacity” and “acceptance sampling” tools. In this project, the analysis of the weight of 35 candies was carried out to validate the capacity of the production process by calculating the \\(C_p\\) coefficient. Also, a sample of car bodies inspected for impurities was analyzed to reject or accept the process lot through the acceptance sampling tool applying three different planes as evaluation scenarios. The last two processes analyzed applied hypothesis testing to test myths known by the team members. First, the support that establishes that in Mexico women read more books per year on average than men was validated; and second, the myth that the fourth floor of the Tecnológico de Monterrey library, Monterrey campus, is quieter than the second floor was put to the test. The first analysis concludes that the production process has a poor capacity with a \\(C_p=0.365\\). For the case of acceptance sampling, only one of the three scenarios will be considered adequate to accept the car body production lot. In the evaluation of the first myth, not enough evidence was found to ensure that women read more books than men in Mexico. Finally, with the second myth, enough evidence was found to affirm that the fourth floor of the library is quieter than the second. "],["process-capability.html", "2 Process Capability 2.1 Concept definition 2.2 Data collected 2.3 Graphical Summaries and Summary Statistics 2.4 Probability plots 2.5 Capability measurement 2.6 Error measurement estimation", " 2 Process Capability Read about the concept of process capability. Select a real process and a corresponding quality characteristic you can measure quantitatively. Take a random sample of the quality characteristic and measure the process capability. Describe the concept of process capability and its measurements. Collect data. Plot the data using graphical summaries. Describe the data using summary statistics. Evaluate the distribution of the data using probability plots. Measure the capability. Estimate the measurement error of your capability measure using simulation. 2.1 Concept definition Process capability analysis is concerned with evaluating the ability of a process to produce products or services that meet specifications (Yum and Kim 2011). Others authors agree with defining process capability as “a statistical measure of the inherent process variability of a given characteristic” [https://asq.org/quality-resources/process-capability]. This statistical technique to attribute a value to Process Capability is necessary for the whole cycle of production of a product/service, for a correct evaluation of customer/market requests (VOC, “Voice of Customer”) and process performance (VOP, “Voice of Process”) (Arcidiacono and Nuzzi 2017). Capability analysis can rely either on historical data, or on data specifically collected for the purpose of the analysis itself. Data collected from such analysis are useful to: Predict how the process will comply with the tolerances. Assist the research and development of the process changes. Establish the sampling frequency for the evaluation procedures. Establish the performance requirements of new equipment. Select suppliers. Plan production even in presence of interaction of the process on the tolerances. Reduce process variability. In short, a process is described as capable if it is able to produce products within the specification limits (SLs). Thus, PCIs are indicators of the goodness of the process related to the position and the variability of the measures within the SLs and are extensively accepted and used in the industry (de-Felipe and Benedito 2017). Like any analysis, the process capability applies some tools to evaluate such ability, these tools are known as “Process capability indices (PCIs)” (Yum and Kim 2011). When dealing with Continuous Improvement of quality, and for Lean Six Sigma Programs, Process Capability Indices (PCI) are considered some of the fundamentals quality measurement tools needed. This is because they evaluate related process performance, and compare one material or supplier with others, when applied properly to improve process control performance. By using Capability Indices, Process Capability Analysis compares the output of a stable process to the specification limits, and it is a measurement with respect to inherent precision of a manufacturing process (Arcidiacono and Nuzzi 2017). In capability analysis, it is possible to distinguish between univariate and multivariate PCIs. On the one hand, univariate PCIs can be used, independently, to calculate the capability related to one single-product characteristic. On the other hand, multivariate PCIs describe the capability of a multivariate process by taking into account all product characteristics in a global way (de-Felipe and Benedito 2017). In this project, univariate PCIs will be used, hence, they just will be described as follows. 2.1.1 Univariate process capability indices Univariate PCIs are statistical indicators used to quantify the goodness of a process by relating the variability of the measures of a single-product characteristic with the admissible one. Sullivan (1981) introduced in the literature the univariate PCIs \\(C_p\\), and \\(C_{pk}\\). Henceforth, two concepts are introduced: the process region (PR) and the specification region (SR). The PR is defined as the interval that includes \\(99.73\\%\\) of values drawn from a normal distribution and which is centered on the mean value of the measured product characteristic. Thus, in the univariate case, the lowest point of the PR is placed at \\(\\mu − 3\\sigma\\); and the highest point at \\(\\mu + 3\\sigma\\). The SR is defined as the interval limited by the lower specification limit (LSL) and the upper specification limit (USL) (de-Felipe and Benedito 2017). 2.1.2 The \\(C_p\\) index The process capability index is an approach for establishing the relationships between the actual process performance and the manufacturing specifications. The \\(C_p\\) index is designed to provide an indirect measure of the potential ability to meet those requirements (Tsai and Chen 2006). With this index, the width of SR (USL − LSL) and the width of the PR (\\(6\\sigma\\)) are compared. Figure 2.1 shows both regions. The \\(C_p\\) index can be calculated with this formula: \\[ C_p = \\frac{USL - LSL}{6\\sigma} \\] knitr::include_graphics(&quot;images/process_specification.png&quot;) Figure 2.1: Process and specification regions. Source: de-Felipe and Benedito (2017) Unfortunately, obtaining measures of the whole population is usually difficult, if not impossible. Thus, many times, it is not possible to describe the PR with its real variance (\\(\\sigma\\)). For this reason, many times, the variance is estimated with the standard deviation (s) of a data sample (de-Felipe and Benedito 2017), so in this case, the following equivalence will be used: \\[ C_p = \\frac{USL - LSL}{6s} \\] The value of \\(C_p\\) helps to better understand process performance. For example, if it is greater than \\(1.33\\), which corresponds to the percentage of non-conforming items of \\(63\\) parts per million (ppm), process performance is satisfactory for a centered process. According to Tsai and Chen (2006) the quality condition of the process assessed is determined by the table 2.1. cp &lt;- c(&#39;$C_p \\\\geq 2.00$&#39;, &#39;$1.67 \\\\leq 2.00$&#39;, &#39;$1.33 \\\\leq 1.67$&#39;, &#39;$1.00 \\\\leq 1.33$&#39;, &#39;$0.67 \\\\leq 1.33$&#39;, &#39;$\\\\lt 0.67$&#39;) qualCond &lt;- c(&quot;Super excellent&quot;, &quot;Excellent&quot;, &quot;Satisfactory&quot;, &quot;Capable&quot;, &quot;Inadequate&quot;, &quot;Poor&quot;) tabla_quality_conditions &lt;- data.frame(cp, qualCond) colnames(tabla_quality_conditions) &lt;- c(&quot;$C_p$&quot;, &quot;Quality condition&quot;) knitr::kable(tabla_quality_conditions, align = &quot;c&quot;, caption = &quot;Quality Conditions and $C_p$ values for centered process&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 2.1: Quality Conditions and \\(C_p\\) values for centered process \\(C_p\\) Quality condition \\(C_p \\geq 2.00\\) Super excellent \\(1.67 \\leq 2.00\\) Excellent \\(1.33 \\leq 1.67\\) Satisfactory \\(1.00 \\leq 1.33\\) Capable \\(0.67 \\leq 1.33\\) Inadequate \\(\\lt 0.67\\) Poor The \\(C_p\\) index only takes into account the width of the PR, but it does not consider its position within the SR. If the PR is not centered on the SR, it would be possible to have a substantial percentage of products with characteristics outside the SL although the \\(C_p\\) value is high. In order to solve this problem, the \\(C_{pk}\\) indices was also introduced (de-Felipe and Benedito 2017). \\(C_{pk}\\) index is used to relate process variability, by showing how a process conforms to its specifications. \\(C_{pk}\\) is generally used to relate the “Natural Tolerances (\\(\\pm3\\sigma\\))” to the specification limits. \\(C_{pk}\\) describes how well the process is comprised within the specification limits, with reference to the the process mean (Arcidiacono and Nuzzi 2017). \\[C_{pk} = min(C_{pku},C_{pkl})\\] where: \\[C_{pku} = \\frac{USL - \\mu}{3s}\\] \\[C_{pkl} = \\frac{\\mu - LSL}{3s}\\] 2.2 Data collected The population for this project is tangible, and it consists of a mexican candy named “Go mango Enchilado”, see Figure 2.2. The following experiment is a One-Sample Experiment, where a random sample was obtained by buying the candy from a convenience store. The data studied here is numerical type, as the object of study is the weight of the candy, in grams. This study is observational, as the sample parameters of the population cannot be modified by the authors of this paper. The size of the sample is \\(n = 35\\). knitr::include_graphics(&quot;images/mango_enchilado.jpeg&quot;) Figure 2.2: Wrapper of Go mango Enchilado candy The measurements of the sample were taken using a weighing machine “Ohaus Explorer Analytical EX224”, which has a resolution of 1 milligram, see Figure 2.3. The measurements were taken by placing the candy inside the cabin of the weighing machine, closing the dare, and recording the values from the machine, as seen in Figure 2.4. knitr::include_graphics(&quot;images/ohaus_explorer.jpeg&quot;) Figure 2.3: Example of a measurement using Ohaus Weighing Machine knitr::include_graphics(&quot;images/weight_measurements_1.png&quot;) knitr::include_graphics(&quot;images/weight_measurements_2.png&quot;) Figure 2.4: Weight measurements taken and recorded The weight results can be seen in the following table: peso &lt;- c(9.285,9.748,7.676,9.425,9.707,8.005,9.531,7.818,9.956,9.264,9.370,10.422,9.400,9.293,9.233,9.704,9.773,9.562,10.032,9.772,9.984,9.699,8.677,9.160,9.762,9.674,8.949,8.808,9.336,10.271,10.234,10.445,8.978,9.331,8.810) tabla_peso &lt;- data.frame(1:35, peso) colnames(tabla_peso) &lt;- c(&quot;Number of elements&quot;, &quot;Weight of candy (g)&quot;) kbl(tabla_peso, align = &quot;c&quot;, caption = &quot;Weight of 35 candies&quot;)%&gt;% kable_styling(position = &quot;center&quot;, full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;800px&quot;, fixed_thead = T, extra_css = &quot;margin-left: auto; margin-right: auto;&quot;) Table 2.2: Weight of 35 candies Number of elements Weight of candy (g) 1 9.285 2 9.748 3 7.676 4 9.425 5 9.707 6 8.005 7 9.531 8 7.818 9 9.956 10 9.264 11 9.370 12 10.422 13 9.400 14 9.293 15 9.233 16 9.704 17 9.773 18 9.562 19 10.032 20 9.772 21 9.984 22 9.699 23 8.677 24 9.160 25 9.762 26 9.674 27 8.949 28 8.808 29 9.336 30 10.271 31 10.234 32 10.445 33 8.978 34 9.331 35 8.810 2.3 Graphical Summaries and Summary Statistics The results from the measurements are presented in Table 2.3. statistic &lt;- c(&quot;Sample size ($n$)&quot;, &quot;Sample mean ($\\\\bar{X}$)&quot;, &quot;Median&quot;, &quot;Sample standard deviation ($s$)&quot;) sample_size &lt;- length(peso) sample_mean &lt;- mean(peso) sample_median &lt;- median(peso) sample_std_dev &lt;- sd(peso) values &lt;- c(paste(sample_size, &quot; units&quot;), paste(specify_decimal(sample_mean, 4), &quot;g&quot;), paste(specify_decimal(sample_median, 4), &quot;g&quot;), paste(specify_decimal(sample_std_dev, 4), &quot;g&quot;)) summary_statistics &lt;- data.frame( &quot;Statistic&quot; = statistic, &quot;Value&quot; = values ) knitr::kable(summary_statistics, col.names = names(summary_statistics), align = &quot;c&quot;, caption = &quot;Summary Statistics from the candy weights&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 2.3: Summary Statistics from the candy weights Statistic Value Sample size (\\(n\\)) 35 units Sample mean (\\(\\bar{X}\\)) 9.4027 g Median 9.4250 g Sample standard deviation (\\(s\\)) 0.6581 g Figure 2.5 shows the distribution of the weights of the candy, presented in a histogram. The data shows Negative Skewness, as it is left skewed and the Mean 9.4027 g, is smaller than the Median 9.4250 g. However, it approximates a normal distribution. As it can be seen, even though the candy´s weight is supposed to be 8 grams, most of the candies in the sample show a considerably higher weight. h &lt;- hist(x = peso, main = &quot;Weight histogram&quot;, xlab = &quot;Weight (g)&quot;, ylab = &quot;Frequency&quot;, col = &quot;green&quot;) xfit &lt;- seq(min(peso), max(peso), length = 40) yfit &lt;- dnorm(xfit, mean = sample_mean, sd = sample_std_dev) yfit &lt;- yfit * diff(h$mids[1:2]) * sample_size lines(xfit, yfit, col = &quot;red&quot;, lwd = 2) Figure 2.5: Distribution of measurements for “Go mango Enchilado Candy” boxplot_data &lt;- boxplot(x = peso, main = &quot;Weight boxplot&quot;, col = &#39;green&#39;, ylab = &quot;Weight (g)&quot;, outpch = 8) Figure 2.6: Box plot and whiskers graph of the measurements for “Go mango Enchilado Candy” lower_whisker &lt;- min(boxplot_data$stats) upper_whisker &lt;- max(boxplot_data$stats) On the other hand, Table 2.4 shows the statistics for box plot and whiskers, while Figure 2.6, shows the graph itself for the weight measurements. As it can be seen, the product´s weight does not fit within the box plot and whiskers graph, as it goes from 8.677 to 10.445 grams. The measurement that is the closest to said value, 8.005 grams, is actually an outlier in the graph. This could lead to pondering questions, is the population of candy actually weighting more than the value said by the manufacturer? #Type 6 to match excel and minitab boxplot_quantiles &lt;- quantile(peso, type = 6) boxplot_iqr &lt;- IQR(peso, type = 6) boxplot_table_data &lt;- c(boxplot_quantiles[2], boxplot_quantiles[4], specify_decimal(boxplot_iqr, 4), paste(lower_whisker, upper_whisker, sep=&quot;, &quot;), toString(boxplot_data$out)) boxplot_table_titles &lt;- c(&quot;Q1&quot;, &quot;Q3&quot;, &quot;IQR&quot;, &quot;Whiskers&quot;, &quot;Outliers&quot;) boxplot_table &lt;- data.frame( &quot;Statistic&quot; = boxplot_table_titles, &quot;Value&quot; = boxplot_table_data ) knitr::kable(boxplot_table, col.names = names(boxplot_table), align = &quot;c&quot;, caption = &quot;Box plot statistics&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 2.4: Box plot statistics Statistic Value Q1 9.16 Q3 9.772 IQR 0.6120 Whiskers 8.677, 10.445 Outliers 7.676, 8.005, 7.818 stem(peso) ## ## The decimal point is at the | ## ## 7 | 78 ## 8 | 0 ## 8 | 7889 ## 9 | 02233333444 ## 9 | 5677777888 ## 10 | 0002344 2.4 Probability plots The steps for the elaboration of probability plots are as follows: Order the sample date from the minor to the major value as shown in the third column of the table 2.5. Create equidistant gaps with the equation \\(P = \\frac{i-0.5}{n}\\), where “i” goes from 1 to 35 according to the sample order established in the previous step. The P value is shown in the second column in the table 2.5. Calculate the expected values from a normal distribution \\(Q_i\\) using the standard deviation and mean from the sample. The \\(Q_i\\) values are shown in the fourth column of the table 2.5. #To get the P=(i-0.5)/n values probPpoints &lt;- ppoints(peso); #Order values for Xi column in probability plot xi &lt;- sort(peso) #To get the inverse of the normal distribution (get value from probability) i &lt;- 1 qi &lt;- vector(mode = &quot;numeric&quot;, length = sample_size) for (element in probPpoints) { qi[i] &lt;- qnorm(element, sample_mean, sample_std_dev) i = i + 1 } prob_plot_table &lt;- data.frame(1:35, probPpoints, xi, qi) colnames(prob_plot_table) &lt;- c(&quot;i&quot;, &quot;$P = \\\\frac{i - 0.5}{n}$&quot;, &quot;$X_i$&quot;, &quot;$Q_i$&quot;) kbl(prob_plot_table, align = &quot;c&quot;, caption = &quot;Weight probability plots&quot;, escape = FALSE)%&gt;% kable_styling(position = &quot;center&quot;, full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;800px&quot;, fixed_thead = T, extra_css = &quot;margin-left: auto; margin-right: auto; margin-bottom: 25px;&quot;) Table 2.5: Weight probability plots i \\(P = \\frac{i - 0.5}{n}\\) \\(X_i\\) \\(Q_i\\) 1 0.0142857 7.676 7.961788 2 0.0428571 7.818 8.271705 3 0.0714286 8.005 8.438357 4 0.1000000 8.677 8.559246 5 0.1285714 8.808 8.656902 6 0.1571429 8.810 8.740420 7 0.1857143 8.949 8.814440 8 0.2142857 8.978 8.881677 9 0.2428571 9.160 8.943869 10 0.2714286 9.233 9.002209 11 0.3000000 9.264 9.057557 12 0.3285714 9.285 9.110563 13 0.3571429 9.293 9.161737 14 0.3857143 9.331 9.211492 15 0.4142857 9.336 9.260176 16 0.4428571 9.370 9.308092 17 0.4714286 9.400 9.355511 18 0.5000000 9.425 9.402686 19 0.5285714 9.531 9.449861 20 0.5571429 9.562 9.497280 21 0.5857143 9.674 9.545195 22 0.6142857 9.699 9.593880 23 0.6428571 9.704 9.643635 24 0.6714286 9.707 9.694808 25 0.7000000 9.748 9.747814 26 0.7285714 9.762 9.803162 27 0.7571429 9.772 9.861502 28 0.7857143 9.773 9.923694 29 0.8142857 9.956 9.990931 30 0.8428571 9.984 10.064952 31 0.8714286 10.032 10.148470 32 0.9000000 10.234 10.246125 33 0.9285714 10.271 10.367014 34 0.9571429 10.422 10.533667 35 0.9857143 10.445 10.843583 Since the goal is to determine whether the sample might have come from a normal population and it is known that the most plausible normal distribution is the one whose mean and standard deviation are the same as the sample mean and standar deviation, thus we will construct a cumulative distribution function (cdf) \\(F(x)\\) of the \\(N(35, 0.658^2)\\) distribution. To achieve this curve, a \\(X_i\\) vs \\(P\\) graphics is elaborated. #We don&#39;t know if our sample follows a normal distribution. To check out, we first check the CDF. To check the CDF we generate values that come from a normal distribution with the mean and std dev from out sample. This is Qi. From Qi we generate the CDF and we plot the point from out sample on top of the curve #To get a function of the CDF x &lt;- ecdf(qi) #To get max and min values in qi range_values &lt;- range(qi) #Give margin min_val_cdf &lt;- floor(range_values[1]) max_val_cdf &lt;- ceiling(range_values[2]) #To plot a CDF curve(x, min_val_cdf, max_val_cdf, col = &quot;red&quot;, lwd = 5, xlab = &quot;Weight&quot;, ylab = &quot;Probability&quot;, main = &quot;Cumulative distribution function&quot;) #Plot point from sample on top of CDF points(xi, probPpoints, col = &quot;green&quot;, pch = 19) #To add a legend legend(&quot;topleft&quot;, legend=c(paste(&quot;CDF with N(&quot;, specify_decimal(sample_mean, 4), &quot;,&quot;, specify_decimal(sample_std_dev^2, 4), &quot;)&quot;, collapse = &quot;&quot;), &quot;Sample points&quot;), col=c(&quot;red&quot;, &quot;green&quot;), lty=c(1,3), lwd = 5, cex=0.8, text.font = 4, bg = &#39;lightblue&#39;) Figure 2.7: Weight CDF With figure 2.7, we can have evidence each \\(Q_i\\) is close to its corresponding \\(X_i\\), therefore, a probability plot will be created. If our sample would come from a normally distributed population, the points should lie close to straight line in a \\((X_i, Q_i)\\) plot. #To create quantile-quantile (probability plot) qqnorm(peso, main = &quot;Probability plot for weight data&quot;, col = &quot;green&quot;, pch = 19) #The data from our measurements is plotted against theoretical normally distributed quantiles #To create straight line for QQ plot qqline(peso, col = &quot;red&quot;, lwd = 3, qtype = 6, distribution = qnorm) Figure 2.8: Weight probability plot Since in the figure 2.8 the sample points are close to the line, but there are some outliers in the bottom left section we can’t conclude that the sample came from a normal distribution. Since data is not normal non-parametric approaches should be implemented in order to calculate \\(C_p\\) and \\(C_{pk}\\). But since those methods were not reviewed in this course a normal approach will be implemented for the corresponding calculations and then, in section 2.6.1 the differences between normal and non-normal approaches will be clarified. 2.5 Capability measurement To calculate the process capacity, we must take into account the following considerations: As mentioned above, the measured product declares a mean value of the population’s weight of \\(8 g\\), that is, \\(\\mu=8g\\). Since the population standard deviation is not known, the standard deviation of the sample(s) is adjusted. This is valid, based on what was declared in point a). The specification limits will be calculated according to the Official Mexican Standard NOM-002-SCFI-2011, which states that for products weighing less than or equal to \\(50 g\\), the tolerance allowed is \\(9\\%\\), as shown in the table 2.6. population_mean &lt;- 8 tolerance &lt;- 0.09 nom_tolerance_data &lt;- c(&quot;$9.00\\\\%$&quot;, &quot;$4.5g$ or $ml$&quot;, &quot;$4.50\\\\%$&quot;) nom_declared_content &lt;- c(&quot;$0 g - 50 g$&quot;, &quot;$50 g - 100 g$&quot;, &quot;$100 g - 200 g$&quot;) nom_table &lt;- data.frame( &quot;Declared net content in g or ml&quot; = nom_declared_content, &quot;Tolerance&quot; = nom_tolerance_data ) knitr::kable(nom_table, col.names = gsub(&quot;.&quot;, &quot; &quot;, names(nom_table)), align = &quot;c&quot;, caption = &quot;NOM-002-SCFI-2011 specification Limit&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 2.6: NOM-002-SCFI-2011 specification Limit \\(0 g - 50 g\\) \\(9.00\\%\\) \\(50 g - 100 g\\) \\(4.5g\\) or \\(ml\\) \\(100 g - 200 g\\) \\(4.50\\%\\) For our case the upper and lower specification limits are obtained as follows: \\[USL = \\mu+(\\mu*tolerance)\\] \\[LSL = \\mu-(\\mu*tolerance)\\] USL &lt;- population_mean + (population_mean * tolerance) LSL &lt;- population_mean - (population_mean * tolerance) Thus, the values for USL and LSL are \\(USL =\\) 8.72, \\(LSL =\\) 7.28. By applying the equation: \\[C_p = \\frac{USL - LSL}{6s}\\] The obtained result are shown in the next table: Cp &lt;- (USL - LSL)/(6 * sample_std_dev) variable_of_interest &lt;- c(&quot;$\\\\mu$&quot;, &quot;Tolerance&quot;, &quot;$s$&quot;, &quot;$USL$&quot;, &quot;$LSL$&quot;, &quot;$C_p$&quot;) quantity_obtained &lt;- c(population_mean, tolerance*100, specify_decimal(sample_std_dev, 4), USL, LSL, specify_decimal(Cp, 4)) corresponding_units &lt;- c(&quot;$g$&quot;, &quot;$\\\\%$&quot;, &quot;$g$&quot;, &quot;$g$&quot;, &quot;$g$&quot;, &quot;&quot;) process_capability_table &lt;- data.frame( &quot;Variable&quot; = variable_of_interest, &quot;Quantity&quot; = quantity_obtained, &quot;Unit&quot; = corresponding_units ) knitr::kable(process_capability_table, col.names = names(process_capability_table), align = &quot;c&quot;, caption = &quot;Process capability table&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 2.7: Process capability table Variable Quantity Unit \\(\\mu\\) 8 \\(g\\) Tolerance 9 \\(\\%\\) \\(s\\) 0.6581 \\(g\\) \\(USL\\) 8.72 \\(g\\) \\(LSL\\) 7.28 \\(g\\) \\(C_p\\) 0.3647 According to the quality condition table, \\(C_p &lt; 0.67\\), therefore, it is determined that the process has a poor quality. Following the formula, it was found that the \\(C_{pk}\\) of this product is: \\[C_{pk} = min(\\frac{\\bar{X}-LSL}{3s}, \\frac{USL-\\bar{X}}{3s})\\] CpL &lt;- (sample_mean - LSL)/(3 * sample_std_dev) CpU &lt;- (USL - sample_mean)/(3 * sample_std_dev) CpK &lt;- pmin(CpU, CpL) variable_of_interest_complete &lt;- c(&quot;$\\\\mu$&quot;, &quot;Tolerance&quot;, &quot;$s$&quot;, &quot;$USL$&quot;, &quot;$LSL$&quot;, &quot;$C_p$&quot;, &quot;$C_{pLower}$&quot;, &quot;$C_{pUpper}$&quot;, &quot;$C_{pk}$&quot;) quantity_obtained_complete &lt;- c(population_mean, tolerance*100, specify_decimal(sample_std_dev, 4), USL, LSL, specify_decimal(Cp, 4), specify_decimal(CpU, 4), specify_decimal(CpL, 4), specify_decimal(CpK, 4)) corresponding_units_complete &lt;- c(&quot;$g$&quot;, &quot;$\\\\%$&quot;, &quot;$g$&quot;, &quot;$g$&quot;, &quot;$g$&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;) process_capability_table_complete &lt;- data.frame( &quot;Variable&quot; = variable_of_interest_complete, &quot;Quantity&quot; = quantity_obtained_complete, &quot;Unit&quot; = corresponding_units_complete ) knitr::kable(process_capability_table_complete, col.names = names(process_capability_table_complete), align = &quot;c&quot;, caption = &quot;Complete process capability table&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 2.8: Complete process capability table Variable Quantity Unit \\(\\mu\\) 8 \\(g\\) Tolerance 9 \\(\\%\\) \\(s\\) 0.6581 \\(g\\) \\(USL\\) 8.72 \\(g\\) \\(LSL\\) 7.28 \\(g\\) \\(C_p\\) 0.3647 \\(C_{pLower}\\) -0.3458 \\(C_{pUpper}\\) 1.0751 \\(C_{pk}\\) -0.3458 This \\(C_{pk}\\) value is negative, which indicates poor capability of the process, as it is yielding results out of the specified tolerances, therefore not meeting the process requirements. A more thorough analysis is conducted beneath using SixSigma library. # Import SixSigma package library(SixSigma) # Get the Z (sigma score) of the process ss.ca.z(peso, LSL, USL) ## [1] -1.037296 # Get the Cp indices of the process ss.ca.cp(peso, LSL, USL) ## [1] 0.3646643 # Get the Cp indices confidence intervals ss.ca.cp(peso, LSL, USL, ci = TRUE) ## [1] 0.2783267 0.4508306 # Get the Cpk indices of the process ss.ca.cpk(peso, LSL, USL) ## [1] -0.3457654 # Get the Cpk indices confidence intervals ss.ca.cpk(peso, LSL, USL, ci = TRUE) ## [1] -0.2081103 -0.4834206 # Perform process capability analysis ss.study.ca(peso, LSL = LSL, USL = USL, Target = population_mean, alpha = 0.05, f.main = &quot;Candy Weight Analysis&quot;, f.colours = c(&quot;green&quot;,&quot;red&quot;,&quot;red&quot;,&quot;black&quot;,&quot;blue&quot;)) ## Warning in ss.study.ca(peso, LSL = LSL, USL = USL, Target = population_mean, : ## Normality test/s failed Unfortunately, the packages does not allow to edit the plot output, so some data is superimposed. The value that can’t be seen is DPMO and has a value of \\(DPMO = 994414.4\\). As it can be seen the normality test failed. Most likely because of the outliers on the lower left corner of the QQ plot. This confirms our initial claim in section Probability plots that data don’t follow a normal distribution. 2.6 Error measurement estimation The goal is finding a tolerance value \\((\\pm S_{cp})\\) for our \\(C_p\\) value: \\[C_p \\pm S_{cp}\\] For achieving that target, a boopstraping is developed between the sample values, simulating 1000 standard deviation values. Thereupon, 1000 \\(C_p\\) values were calculated by applying the equation: \\[C_p = \\frac{USL - LSL}{6s}\\] Where \\(s\\) corresponds to the standard deviation calculated from the simulated data. #Generate normally distributed data that follows the sample mean and standard deviation # We will create 1000 simulated samples of size 6 in order to have enough data n &lt;- 1000 col &lt;- 6 simulated_data &lt;- matrix(nrow = n, ncol = col) simulated_mean &lt;- vector(&quot;numeric&quot;, n) simulated_std_dev &lt;- vector(&quot;numeric&quot;, n) simulated_cp &lt;- vector(&quot;numeric&quot;, n) simulated_cpk_min &lt;- vector(&quot;numeric&quot;, n) for (i in 1:1000) { simulated_data[i,] = rnorm(col, sample_mean, sample_std_dev) simulated_mean[i] = mean(simulated_data[i,]) simulated_std_dev[i] = sd(simulated_data[i,]) simulated_cp[i] = ((USL - LSL) / (6*simulated_std_dev[i])) simulated_cpk_min[i] = pmin((simulated_mean[i] - LSL)/(3 * simulated_std_dev[i]), (USL - simulated_mean[i])/(3 * simulated_std_dev[i])) } elements_numbers &lt;- 1:1000 simulated_data_1 &lt;- simulated_data[,1] simulated_data_2 &lt;- simulated_data[,2] simulated_data_3 &lt;- simulated_data[,3] simulated_data_4 &lt;- simulated_data[,4] simulated_data_5 &lt;- simulated_data[,5] simulated_data_6 &lt;- simulated_data[,6] table_titles &lt;- c(&quot;i&quot;, &quot;$X_1^*$&quot;, &quot;$X_2^*$&quot;, &quot;$X_3^*$&quot;, &quot;$X_4^*$&quot;, &quot;$X_5^*$&quot;, &quot;$X_6^*$&quot;, &quot;$s^*$&quot;, &quot;$C_p^*$&quot;, &quot;$C_{pkMin}^*$&quot;) simulated_data_table &lt;- data.frame(elements_numbers, specify_decimal( simulated_data_1, 4), specify_decimal(simulated_data_2, 4), specify_decimal(simulated_data_3, 4), specify_decimal(simulated_data_4, 4), specify_decimal(simulated_data_5, 4), specify_decimal(simulated_data_6, 4), specify_decimal(simulated_std_dev, 4), specify_decimal(simulated_cp, 4), specify_decimal(simulated_cpk_min, 4)) colnames(simulated_data_table) &lt;- table_titles knitr::kable(simulated_data_table, align = &quot;c&quot;, caption = &quot;Simulated data table&quot;)%&gt;% kable_styling(position = &quot;center&quot;, full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;800px&quot;, fixed_thead = T, extra_css = &quot;margin-left: auto; margin-right: auto;&quot;) Table 2.9: Simulated data table i \\(X_1^*\\) \\(X_2^*\\) \\(X_3^*\\) \\(X_4^*\\) \\(X_5^*\\) \\(X_6^*\\) \\(s^*\\) \\(C_p^*\\) \\(C_{pkMin}^*\\) 1 8.9999 9.7790 8.2840 8.6400 8.8769 9.0709 0.4998 0.4802 -0.1479 2 11.1770 9.3457 9.0329 10.8036 8.9853 9.4354 0.9481 0.2531 -0.3785 3 9.2992 8.5130 8.9843 9.3057 8.7807 10.4369 0.6698 0.3583 -0.2488 4 9.7162 9.6487 10.7375 10.0111 8.6328 8.4143 0.8704 0.2757 -0.3090 5 9.5572 9.8824 9.0484 9.2613 8.9149 9.8833 0.4161 0.5768 -0.5645 6 10.3212 9.3515 10.0660 10.7041 9.4149 9.3746 0.5760 0.4167 -0.6667 7 8.9737 9.3062 9.8574 10.8731 9.3734 10.5634 0.7540 0.3183 -0.4883 8 9.7735 8.8149 10.5056 9.2269 8.8964 7.8336 0.9097 0.2638 -0.1668 9 9.0588 9.7393 10.1876 10.6981 8.8259 9.7680 0.6949 0.3454 -0.4763 10 9.0566 9.6521 8.9226 9.4181 8.8399 9.0649 0.3122 0.7688 -0.4688 11 9.8944 9.4459 8.1763 10.3839 10.4197 9.6593 0.8250 0.2909 -0.3811 12 8.3059 9.4948 10.0201 9.0220 9.5587 10.5707 0.7842 0.3061 -0.3296 13 8.8792 9.2367 10.2295 9.1901 9.4497 9.9609 0.5094 0.4712 -0.5045 14 8.6515 10.1382 9.5375 8.2767 9.9019 7.8391 0.9349 0.2567 -0.1203 15 8.6073 9.2436 8.3431 9.1077 9.0392 9.6704 0.4707 0.5099 -0.1996 16 10.0666 9.8436 9.8098 8.0591 8.1728 10.0065 0.9432 0.2544 -0.2143 17 10.4300 10.1827 8.2259 8.3905 9.7330 9.7977 0.9294 0.2582 -0.2654 18 9.1080 9.5829 9.0127 9.0139 9.5197 10.0423 0.4104 0.5848 -0.5360 19 7.8615 9.5324 10.0070 10.2513 9.8256 8.7874 0.8979 0.2673 -0.2441 20 10.1058 9.1208 8.9534 8.5494 9.1204 9.0633 0.5142 0.4667 -0.2801 21 10.3657 9.2802 9.2537 9.4134 10.2926 8.7046 0.6497 0.3694 -0.4267 22 10.3796 9.3771 8.7920 9.4710 10.6421 9.5459 0.6862 0.3498 -0.4767 23 8.4123 9.6555 9.2788 9.5044 8.9707 9.2584 0.4428 0.5420 -0.3463 24 9.8730 9.6972 9.6686 9.8839 8.9076 9.1364 0.4080 0.5883 -0.6600 25 10.2364 8.0897 9.6562 9.2717 9.0269 10.6085 0.9009 0.2664 -0.2818 26 9.3216 9.0210 8.4708 9.1710 10.1931 9.9446 0.6290 0.3816 -0.3358 27 8.9145 9.6746 9.1559 8.1842 10.2014 9.3469 0.6859 0.3499 -0.2558 28 8.9613 9.0145 10.1674 8.5363 8.7069 9.6768 0.6221 0.3858 -0.2450 29 8.9467 9.1357 9.7432 9.6908 8.7213 8.9803 0.4199 0.5715 -0.3834 30 9.8287 10.8005 10.2261 8.5365 10.6205 9.4850 0.8332 0.2880 -0.4786 31 10.1546 10.6878 8.3984 9.5857 8.7913 9.2666 0.8503 0.2823 -0.2982 32 9.1856 10.0309 8.5975 9.6149 9.9728 9.8603 0.5568 0.4310 -0.4931 33 10.0750 9.9240 9.3739 9.3777 9.3514 8.6788 0.4959 0.4840 -0.4997 34 9.5902 8.1677 9.1648 10.0259 9.4871 9.0165 0.6335 0.3788 -0.2747 35 10.1533 10.3781 10.6897 8.2297 9.6135 9.8139 0.8661 0.2771 -0.4207 36 9.0513 8.8288 9.0062 8.5417 9.2543 9.7112 0.3967 0.6050 -0.2904 37 9.6675 9.1741 9.2516 9.6262 9.4009 8.6514 0.3716 0.6459 -0.5161 38 9.3952 9.6123 10.4102 9.0803 9.3724 9.0092 0.5066 0.4738 -0.5001 39 10.2485 8.6374 8.6863 9.2367 10.5142 9.0757 0.7980 0.3007 -0.2840 40 8.8143 9.6383 10.4532 8.9340 9.5442 9.1952 0.5973 0.4018 -0.3962 41 10.2376 9.1392 9.1092 9.5254 9.3362 8.3677 0.6102 0.3933 -0.3091 42 8.9712 10.1513 9.8623 8.6706 9.1181 10.1724 0.6512 0.3685 -0.3946 43 9.0026 8.5017 9.2802 10.7986 9.0864 8.5386 0.8413 0.2853 -0.1907 44 9.4970 8.6291 9.5430 8.0685 9.4986 9.9474 0.7014 0.3422 -0.2268 45 9.5298 8.2296 9.6980 9.7953 8.6134 8.5100 0.6870 0.3493 -0.1663 46 8.9855 9.5198 9.1631 9.4761 9.9504 10.5533 0.5695 0.4215 -0.5198 47 9.7496 9.3292 10.2306 8.4399 9.7997 9.7722 0.6158 0.3898 -0.4512 48 9.4442 9.4134 9.8035 10.8679 8.5131 9.1987 0.7783 0.3084 -0.3512 49 9.0492 9.7760 8.4008 9.7927 9.9914 8.5259 0.6938 0.3459 -0.2575 50 8.8497 8.6676 9.4798 10.2339 10.4376 8.9624 0.7484 0.3207 -0.3200 51 9.4174 10.1954 8.6206 8.6467 10.3031 9.0476 0.7407 0.3240 -0.2933 52 10.0621 8.3222 8.7676 9.9504 8.1757 10.0722 0.9022 0.2660 -0.1866 53 8.8039 9.0045 10.2097 8.8814 9.1342 9.2528 0.5142 0.4668 -0.3205 54 7.4255 8.6257 9.3521 9.4735 9.2864 9.7974 0.8585 0.2796 -0.1062 55 10.0464 10.3001 8.9399 8.9520 8.5394 10.0247 0.7409 0.3239 -0.3361 56 8.3383 10.0394 9.6418 8.8896 9.9825 9.9617 0.7036 0.3411 -0.3579 57 10.2156 9.4064 9.3544 10.2182 8.4357 9.6299 0.6628 0.3621 -0.4141 58 9.8906 9.8145 8.7436 10.2400 7.8630 9.6607 0.8915 0.2692 -0.2426 59 10.2418 10.8566 9.2330 8.8130 8.5009 9.5293 0.8863 0.2708 -0.3043 60 9.9237 9.8989 10.8604 9.9579 8.5724 10.5841 0.7913 0.3033 -0.5250 61 9.9745 8.9863 9.8772 10.0569 9.9029 7.9107 0.8503 0.2822 -0.2867 62 9.5044 7.6262 10.2928 9.7833 9.1801 9.8098 0.9285 0.2585 -0.2320 63 9.6430 10.6448 8.7756 8.0869 10.3629 10.3148 1.0146 0.2366 -0.3016 64 9.6282 9.1223 9.0326 9.4092 10.6853 8.2925 0.7917 0.3031 -0.2702 65 10.1129 10.0575 8.7911 10.3119 9.6907 9.4310 0.5594 0.4290 -0.6033 66 8.8212 8.7021 9.2072 9.8780 9.3352 8.4714 0.5094 0.4711 -0.2285 67 9.1194 9.8923 9.4038 9.0766 8.8755 9.3713 0.3546 0.6767 -0.5356 68 9.5934 8.5340 10.6183 10.5115 9.2875 8.6535 0.8911 0.2693 -0.3041 69 10.5882 9.6627 9.7197 9.5336 9.8506 10.5020 0.4532 0.5296 -0.9240 70 9.3129 10.5780 8.5406 9.3413 8.7199 9.8279 0.7459 0.3218 -0.2980 71 9.1623 9.6459 9.4393 8.6709 10.4305 8.0889 0.8095 0.2965 -0.2140 72 10.7485 9.5617 9.8175 8.8209 9.5802 9.3097 0.6403 0.3748 -0.4788 73 9.7626 8.5917 8.8140 8.8616 9.9958 9.9691 0.6434 0.3730 -0.3173 74 10.8849 10.1998 10.3989 9.1518 10.0889 8.1428 0.9944 0.2413 -0.3658 75 9.4116 8.5919 10.5082 9.9075 9.1141 9.6752 0.6614 0.3629 -0.4106 76 9.7030 10.0333 9.4536 8.1072 8.6801 9.5975 0.7226 0.3321 -0.2502 77 10.2751 9.7295 10.3901 9.1243 9.0465 8.0652 0.8750 0.2743 -0.2737 78 9.7196 9.8416 9.5053 9.3999 9.2647 9.5196 0.2099 1.1435 -1.3051 79 9.1163 9.7224 9.8669 8.9247 9.1820 9.7985 0.4068 0.5900 -0.5860 80 8.9027 9.6124 8.7095 9.9768 8.3488 9.9497 0.6891 0.3483 -0.2564 81 9.9277 9.3423 9.3485 9.2820 9.1992 9.9524 0.3385 0.7090 -0.7766 82 10.7323 8.8177 9.5556 9.8941 9.0703 10.0697 0.6979 0.3439 -0.4633 83 9.9871 9.5483 9.4690 8.3707 9.3303 8.1121 0.7317 0.3280 -0.1896 84 8.3213 8.6809 8.7542 9.8787 8.8214 8.1298 0.6085 0.3944 -0.0243 85 9.8145 9.5862 10.1440 10.2422 8.5626 9.5447 0.6032 0.3979 -0.5134 86 10.8656 9.2294 9.0048 9.1199 8.1173 8.6637 0.9244 0.2596 -0.1611 87 8.4709 10.3819 8.7093 9.1023 9.5915 8.5630 0.7367 0.3258 -0.1884 88 9.8190 8.9163 8.6906 9.6404 8.8696 9.9373 0.5467 0.4390 -0.3611 89 9.3447 10.1302 9.0090 10.0040 9.2637 10.3357 0.5429 0.4421 -0.5902 90 9.7334 11.3878 8.8739 10.3268 8.5743 9.1960 1.0435 0.2300 -0.3073 91 10.6959 8.2243 9.2547 8.2435 9.9250 9.2586 0.9602 0.2500 -0.1899 92 9.6422 9.6762 8.7287 10.0857 8.9870 9.6035 0.5001 0.4799 -0.4892 93 10.0607 9.6780 9.8208 10.2204 8.7230 8.1754 0.8135 0.2950 -0.2976 94 9.9545 8.4346 9.7484 8.9355 10.7251 9.6652 0.8018 0.2993 -0.3564 95 9.6019 10.5030 10.4062 8.9727 9.2012 8.8835 0.7115 0.3373 -0.4098 96 8.6510 9.5454 9.9464 9.0980 9.1234 9.3796 0.4420 0.5429 -0.4303 97 10.7370 9.2044 10.7897 9.7861 9.7964 9.1574 0.7142 0.3360 -0.5562 98 9.3133 9.4787 9.3469 9.4695 8.8025 10.4898 0.5521 0.4347 -0.4609 99 8.7377 10.0508 9.5430 9.3297 9.1572 9.6114 0.4452 0.5391 -0.5128 100 9.8708 9.9961 9.9107 9.9831 9.0166 11.2890 0.7284 0.3295 -0.5908 101 10.8917 8.9828 8.9678 9.2809 7.8190 9.0433 0.9893 0.2426 -0.1497 102 8.6975 10.0306 8.3673 8.8141 8.6924 9.8277 0.6837 0.3510 -0.1714 103 9.3980 9.7746 8.8485 8.0620 9.6128 9.0273 0.6245 0.3843 -0.2138 104 8.7020 8.9788 8.7071 9.1360 8.8962 9.3259 0.2449 0.9801 -0.3235 105 9.2272 10.9361 10.2016 10.0731 9.0899 9.1593 0.7439 0.3226 -0.4755 106 8.8211 9.9994 8.7237 9.6045 9.3532 9.2308 0.4796 0.5004 -0.3953 107 9.7630 10.4783 9.7695 9.9426 8.9463 9.6195 0.4962 0.4837 -0.6941 108 9.7608 9.8330 9.2904 9.0816 9.1548 9.3618 0.3135 0.7655 -0.7376 109 9.9480 9.2318 8.5461 8.5665 9.7912 9.9480 0.6608 0.3632 -0.3120 110 9.4055 9.5211 8.5649 9.9744 9.2135 10.4257 0.6397 0.3752 -0.4156 111 9.7364 8.6843 9.9094 9.0901 9.6714 9.1717 0.4698 0.5109 -0.4663 112 9.0506 9.8307 9.9542 9.7380 9.0980 8.6244 0.5329 0.4504 -0.4145 113 9.3009 8.9917 8.8913 8.8788 11.2624 9.1921 0.9183 0.2614 -0.2539 114 10.9613 8.8984 9.7438 9.5178 9.4394 9.4750 0.6903 0.3477 -0.4600 115 9.0079 9.9643 9.7983 9.5485 8.9177 9.4954 0.4186 0.5733 -0.5855 116 9.3721 8.7342 9.6403 9.0726 9.3313 9.0687 0.3134 0.7658 -0.5139 117 9.3364 8.5084 9.0315 8.7660 8.6697 9.9907 0.5451 0.4403 -0.2021 118 8.9453 10.1728 9.2219 9.6935 10.2820 9.6475 0.5204 0.4612 -0.6025 119 9.3802 10.4787 9.5205 9.6450 10.6545 8.8576 0.6849 0.3504 -0.5042 120 10.1599 9.4616 8.7452 10.2581 9.1385 8.3067 0.7735 0.3103 -0.2693 121 9.0962 9.0566 9.3312 8.9025 7.7563 9.1859 0.5723 0.4193 -0.0979 122 8.0243 10.0461 8.1072 8.7927 8.7326 8.5458 0.7284 0.3295 0.0054 123 9.9849 8.7260 7.8614 9.5950 10.0749 9.5586 0.8512 0.2820 -0.2272 124 9.8528 9.6384 9.0725 9.3309 9.5568 9.1958 0.2932 0.8184 -0.8198 125 8.9943 10.5019 9.3821 7.8903 9.8033 8.5703 0.9215 0.2605 -0.1701 126 9.2399 10.4286 10.2658 9.9581 8.2899 9.5270 0.7884 0.3044 -0.3798 127 9.1854 9.6246 9.0840 8.6597 8.1512 10.8684 0.9323 0.2574 -0.1939 128 8.7792 9.2174 9.8077 10.5662 10.5765 9.6716 0.7187 0.3340 -0.4869 129 9.3121 9.4186 9.6390 8.1673 10.2398 10.2462 0.7670 0.3129 -0.3407 130 8.5271 9.1181 9.2181 9.3917 9.5576 9.9363 0.4725 0.5079 -0.4031 131 9.5500 10.0528 10.3952 10.2913 8.8172 8.4412 0.8091 0.2966 -0.3590 132 9.4966 8.8491 9.9407 10.1190 10.4103 8.2666 0.8185 0.2932 -0.3232 133 10.2441 10.2436 9.3711 9.7053 8.3305 8.3871 0.8586 0.2795 -0.2563 134 9.7347 8.5460 9.1980 10.4390 8.9677 9.0818 0.6661 0.3603 -0.3042 135 9.6378 9.2004 9.4998 8.4214 11.0391 8.9780 0.8838 0.2716 -0.2801 136 10.1264 9.1148 9.6731 9.7380 8.6403 8.8337 0.5802 0.4137 -0.3645 137 9.6606 9.1119 9.8375 9.1223 9.1721 9.9945 0.3958 0.6063 -0.6426 138 9.7118 9.2696 8.8000 9.4933 10.8698 10.3117 0.7443 0.3225 -0.4580 139 8.4840 8.2463 9.5988 8.6494 10.2227 9.8378 0.8165 0.2940 -0.1850 140 9.5113 9.1271 9.1292 9.2064 9.5954 8.3707 0.4336 0.5535 -0.3357 141 8.5791 10.5926 9.2091 9.4682 10.4094 8.6564 0.8561 0.2803 -0.2982 142 9.6375 8.9986 8.8579 8.8201 8.9217 10.7868 0.7715 0.3111 -0.2666 143 9.0222 9.2191 8.6194 9.3399 8.2610 9.4261 0.4549 0.5276 -0.1915 144 8.1847 10.0356 11.0279 9.7951 9.9170 10.5028 0.9599 0.2500 -0.4134 145 9.0608 8.8386 9.4903 9.3056 9.4498 10.4298 0.5486 0.4374 -0.4309 146 8.0429 9.4072 7.8936 10.2205 8.7523 8.4500 0.8838 0.2715 -0.0281 147 8.7915 8.6204 9.2574 8.9859 9.4662 10.2439 0.5844 0.4106 -0.2895 148 10.5516 8.1126 8.8449 8.5614 8.8529 9.1056 0.8299 0.2892 -0.1144 149 9.4568 9.3883 8.7735 8.5280 9.2043 10.6413 0.7359 0.3261 -0.2772 150 8.7147 9.0484 9.1184 9.6801 8.8628 9.6618 0.4051 0.5925 -0.3794 151 10.2698 9.3881 9.8685 9.4550 10.6548 9.8174 0.4846 0.4953 -0.8179 152 9.3747 9.1292 9.4284 10.5920 9.0214 9.7082 0.5679 0.4226 -0.4827 153 10.7095 9.3706 9.7971 9.9897 9.8714 8.6866 0.6736 0.3563 -0.5035 154 9.6834 9.0898 9.5257 9.8975 8.3283 8.6088 0.6240 0.3846 -0.2505 155 9.2224 10.1115 9.8037 10.0762 7.5624 10.1395 1.0037 0.2391 -0.2544 156 9.0191 8.8267 10.1142 9.0370 9.3541 10.2739 0.6120 0.3921 -0.3908 157 8.9083 9.6732 8.8640 9.0815 8.4664 10.6984 0.7974 0.3010 -0.2349 158 9.1157 10.3668 10.0966 9.3963 8.5772 9.4535 0.6511 0.3686 -0.3998 159 10.2588 9.1839 8.9412 9.7592 10.0134 9.1929 0.5278 0.4547 -0.5294 160 9.4579 9.2028 10.0020 8.4195 9.0168 8.9960 0.5277 0.4548 -0.2922 161 9.0798 8.1809 9.4962 9.0177 9.9987 8.7440 0.6232 0.3851 -0.1959 162 9.1780 8.8613 11.0006 9.2804 9.0890 9.7891 0.7820 0.3069 -0.3466 163 10.0085 9.5809 9.3316 9.3593 9.9357 8.7225 0.4705 0.5101 -0.5453 164 8.7486 10.2558 9.1347 8.3908 9.3299 10.5801 0.8536 0.2812 -0.2682 165 10.0903 8.7818 8.3939 9.2255 9.5164 9.2669 0.5868 0.4090 -0.2797 166 8.4170 8.3321 8.3158 10.2218 9.9228 9.6863 0.8872 0.2705 -0.1613 167 9.4076 8.9837 8.1148 8.5632 9.4828 8.5755 0.5343 0.4492 -0.0840 168 9.7086 8.9314 9.1760 9.3376 9.1241 9.1275 0.2662 0.9015 -0.6439 169 9.6653 10.1012 7.6390 10.0435 9.6631 8.2640 1.0259 0.2339 -0.1655 170 9.8413 9.7530 9.4962 6.9863 8.7090 9.5440 1.0898 0.2202 -0.1025 171 9.4763 8.9492 8.4407 9.1288 8.5134 9.1286 0.3975 0.6037 -0.1841 172 7.9788 9.3252 9.9951 9.9592 7.9711 8.9946 0.9065 0.2647 -0.1167 173 10.1118 9.5129 8.5998 9.2495 10.2781 9.8892 0.6222 0.3857 -0.4751 174 8.8240 10.0678 9.4680 9.7093 9.9756 9.6229 0.4452 0.5391 -0.6673 175 8.8096 9.7169 10.5974 9.1697 9.1787 9.3132 0.6273 0.3826 -0.3955 176 9.9154 8.5999 8.8251 9.5694 9.5144 9.8650 0.5463 0.4393 -0.4036 177 9.9411 8.9041 8.5115 10.1272 10.9289 9.2734 0.8871 0.2705 -0.3361 178 9.0929 9.5736 9.5586 9.0095 9.6073 9.6458 0.2843 0.8441 -0.8143 179 9.5509 8.7531 9.1794 9.4296 9.3858 9.6648 0.3254 0.7376 -0.6221 180 9.6338 8.0939 9.6953 9.8498 8.9454 9.5332 0.6640 0.3615 -0.2871 181 8.8793 10.6189 9.6669 9.6209 9.5359 9.2189 0.5850 0.4102 -0.4958 182 9.4310 8.9232 9.9854 9.6160 9.1940 8.6312 0.4873 0.4925 -0.3946 183 10.0933 8.1463 9.7643 9.3533 10.6363 8.5879 0.9348 0.2567 -0.2533 184 9.9770 9.3161 9.1839 9.5090 8.5100 10.2160 0.6067 0.3956 -0.4022 185 9.3582 8.7342 9.9845 8.8704 9.1556 8.3198 0.5731 0.4188 -0.2038 186 9.9148 8.8700 8.7639 9.3637 9.3481 9.7469 0.4581 0.5239 -0.4472 187 9.6233 10.1434 9.6776 8.6237 8.9164 8.6139 0.6367 0.3769 -0.2860 188 9.3784 10.5636 9.1433 8.7248 10.3731 9.8570 0.7188 0.3339 -0.4421 189 9.4679 8.9424 9.4330 9.1827 8.7880 8.9351 0.2824 0.8499 -0.4779 190 9.5061 8.1046 9.2114 9.4228 8.8277 9.4438 0.5410 0.4436 -0.2255 191 9.8891 8.4298 9.3153 9.3149 8.3185 9.6056 0.6354 0.3777 -0.2233 192 9.6080 9.5634 8.6171 9.3889 9.0907 9.2604 0.3665 0.6549 -0.4864 193 9.3247 9.9777 10.2248 10.5499 9.7525 9.4298 0.4700 0.5107 -0.8203 194 9.8990 9.8918 10.7666 8.6704 9.8596 10.5699 0.7352 0.3265 -0.5545 195 9.1968 9.0188 9.1709 9.1068 9.7100 8.3684 0.4309 0.5570 -0.2903 196 9.2485 10.6418 9.8827 8.9462 10.1798 10.8165 0.7465 0.3215 -0.5504 197 9.4841 9.0756 11.0926 9.3971 9.1292 9.6300 0.7447 0.3223 -0.4095 198 9.7005 8.6063 9.6654 8.9439 9.5154 8.7602 0.4854 0.4944 -0.3287 199 9.9854 9.7139 10.7734 9.3137 9.6836 9.7653 0.4917 0.4881 -0.7813 200 8.5939 9.3178 9.9799 8.8500 8.7684 8.9664 0.5031 0.4770 -0.2381 201 9.8198 8.8193 9.9311 9.8657 10.3090 9.3942 0.5167 0.4645 -0.6257 202 8.9810 9.3584 9.6868 9.5919 9.9435 9.8646 0.3556 0.6750 -0.7978 203 8.6967 8.5323 8.0514 10.4357 8.1010 9.3213 0.9010 0.2664 -0.0505 204 10.0948 9.8430 8.8328 9.0935 9.4333 10.2886 0.5746 0.4177 -0.5091 205 10.4150 9.1668 9.2314 9.0247 9.5218 9.3579 0.5007 0.4793 -0.4879 206 9.8537 9.8743 10.2644 9.4909 8.7565 9.1154 0.5530 0.4340 -0.5058 207 9.5014 8.3085 10.3407 8.7147 9.5557 9.1777 0.7103 0.3379 -0.2564 208 9.1747 8.8037 9.1064 9.5234 9.6788 9.1331 0.3152 0.7614 -0.5464 209 9.0646 8.3803 7.9914 10.3830 9.5761 9.1477 0.8512 0.2820 -0.1451 210 10.2789 9.9482 8.2638 8.7528 10.2676 9.3061 0.8385 0.2862 -0.2980 211 10.1080 9.6550 9.9410 9.8664 8.4578 10.0759 0.6224 0.3856 -0.5163 212 10.0627 9.2746 9.6018 9.8477 8.4685 9.1599 0.5694 0.4215 -0.3995 213 9.3079 10.2327 9.3849 9.0345 9.0533 8.3865 0.6027 0.3982 -0.2839 214 9.1000 9.3171 9.6039 9.1655 10.3039 9.4806 0.4388 0.5470 -0.5889 215 10.2651 9.6190 9.9040 8.7603 8.3755 8.7589 0.7529 0.3188 -0.2481 216 9.8603 9.5298 9.5395 9.6253 9.4512 10.0388 0.2275 1.0551 -1.3982 217 10.3064 8.9512 9.6748 9.1536 8.8024 8.9200 0.5811 0.4130 -0.3335 218 10.0404 8.5865 9.4704 8.2954 9.6568 9.0979 0.6622 0.3624 -0.2372 219 9.9498 10.1928 8.8298 8.5489 9.4762 10.2343 0.7165 0.3350 -0.3809 220 9.6679 9.9883 9.8787 9.2764 9.2778 8.3294 0.6039 0.3974 -0.3770 221 9.9328 9.3534 10.0604 8.8868 9.7988 9.0245 0.4927 0.4871 -0.5341 222 9.3670 9.5433 9.7533 9.9585 9.4257 8.6102 0.4630 0.5184 -0.5205 223 9.2297 10.0673 9.4598 10.0960 9.9223 9.0046 0.4635 0.5178 -0.6544 224 9.1808 9.3594 9.7526 9.6243 9.5908 8.2552 0.5484 0.4376 -0.3488 225 10.0082 8.6002 9.2964 9.6849 9.2314 10.2834 0.6046 0.3970 -0.4397 226 8.9371 10.6904 8.8545 8.8518 9.5185 8.8051 0.7421 0.3234 -0.2498 227 8.5006 9.7655 10.1186 9.1991 10.4289 10.3724 0.7545 0.3181 -0.4466 228 10.4635 9.2023 9.9352 9.0928 10.4888 9.5835 0.6061 0.3960 -0.5908 229 8.6489 9.0344 8.7816 9.7733 10.1073 9.1043 0.5756 0.4169 -0.3021 230 8.8902 9.1680 8.8275 9.5006 9.2586 8.5386 0.3449 0.6958 -0.3002 231 8.4529 9.0134 9.8075 9.8503 9.8315 10.3124 0.6795 0.3532 -0.4046 232 9.9201 9.7380 8.9615 8.5408 9.3915 10.4586 0.6890 0.3483 -0.3782 233 9.1656 8.7369 9.1821 9.6785 8.4966 9.8326 0.5173 0.4640 -0.2977 234 9.8490 11.0391 8.4098 9.0461 10.2837 10.5343 0.9788 0.2452 -0.3883 235 9.2618 10.0688 10.2810 9.8760 9.1068 9.7675 0.4580 0.5241 -0.7330 236 10.1256 10.3593 9.7497 10.2965 9.4222 8.4169 0.7339 0.3270 -0.4580 237 9.0015 9.7221 9.5525 8.6306 9.7150 8.8416 0.4780 0.5020 -0.3653 238 8.7028 9.7383 9.0782 8.7241 10.1311 9.2041 0.5694 0.4215 -0.3179 239 9.2364 9.4063 8.6885 10.4568 9.7211 9.1089 0.6049 0.3967 -0.3947 240 10.0870 9.4597 8.9656 9.3588 9.0477 8.5934 0.5117 0.4690 -0.3466 241 9.2335 8.8010 9.3869 10.1336 9.2540 9.9915 0.5038 0.4763 -0.4940 242 8.3993 9.6811 9.2911 9.7904 9.5742 8.7787 0.5532 0.4338 -0.3208 243 9.7581 10.2978 10.1364 9.6015 10.1289 10.5977 0.3615 0.6639 -1.2603 244 9.3981 8.9323 10.1906 8.8880 9.6867 10.3524 0.6184 0.3881 -0.4607 245 10.2046 8.2384 9.1573 9.1691 9.3620 8.2366 0.7451 0.3221 -0.1527 246 9.9724 10.8414 8.4506 8.2760 8.5269 9.9831 1.0632 0.2257 -0.1949 247 8.8019 9.0227 9.9072 10.4933 8.5310 8.9812 0.7497 0.3201 -0.2532 248 8.9747 9.2413 9.2891 10.4562 8.5572 10.1950 0.7294 0.3291 -0.3346 249 9.5294 8.1844 9.4105 9.6266 10.1261 9.1884 0.6480 0.3704 -0.3211 250 9.3527 9.5182 9.6704 9.7774 10.6059 8.8765 0.5714 0.4200 -0.5329 251 9.0962 9.2585 8.9222 9.4809 9.2641 10.2414 0.4627 0.5187 -0.4735 252 10.0958 10.4977 10.6520 10.1397 10.6947 9.2727 0.5307 0.4522 -0.9456 253 9.7133 8.4072 10.0413 10.3332 8.6501 9.8519 0.7839 0.3061 -0.3314 254 8.4105 8.8718 9.0030 8.9973 9.1361 9.0355 0.2585 0.9285 -0.2438 255 9.0445 8.8857 8.9247 9.7931 8.6998 9.3536 0.3957 0.6065 -0.3343 256 8.4906 8.6494 9.7471 9.5814 9.4174 10.1772 0.6526 0.3678 -0.3187 257 9.9614 10.5612 9.1837 10.4592 9.3284 8.7005 0.7470 0.3213 -0.4369 258 7.9526 10.1056 9.2550 9.3458 9.5191 10.4161 0.8552 0.2806 -0.2776 259 10.2808 10.3240 9.6514 9.9605 8.9029 8.5499 0.7360 0.3261 -0.4038 260 9.6385 9.2323 11.0483 10.2912 9.5284 9.3302 0.6972 0.3442 -0.5378 261 8.8331 8.4021 8.9921 8.1927 9.0255 9.7356 0.5417 0.4431 -0.0883 262 8.9349 8.1858 9.3362 9.5001 9.6551 9.4181 0.5399 0.4445 -0.2789 263 8.8558 9.0471 10.3656 9.2585 11.7980 8.6627 1.2039 0.1994 -0.2615 264 8.9421 8.9419 10.4900 9.8206 10.2040 8.6739 0.7593 0.3161 -0.3477 265 11.2672 9.4785 9.0197 9.1098 9.0000 8.8808 0.9089 0.2641 -0.2712 266 10.0493 10.3729 9.0854 8.3221 10.5314 9.9457 0.8486 0.2828 -0.3919 267 10.1172 8.7103 9.3008 8.4454 8.7493 8.6455 0.6194 0.3875 -0.1479 268 9.3169 9.2319 9.2766 9.6755 9.3202 9.4048 0.1598 1.5022 -1.3582 269 9.0292 9.3896 10.1844 9.8281 8.4330 8.3143 0.7485 0.3206 -0.2122 270 8.4868 9.9554 9.5184 8.8072 10.1545 9.8305 0.6696 0.3584 -0.3678 271 8.5439 10.2018 9.2458 9.0184 8.9467 8.5640 0.6101 0.3934 -0.2004 272 9.2903 8.2005 8.6550 8.8577 8.2306 9.9073 0.6565 0.3656 -0.0695 273 10.3495 9.4742 9.2172 10.4935 10.5287 8.5680 0.8090 0.2966 -0.4334 274 9.3991 9.1798 9.4236 9.4131 10.0915 9.9792 0.3650 0.6575 -0.7863 275 9.7854 9.3661 9.5640 10.3960 10.2463 9.7684 0.3954 0.6069 -0.9562 276 8.1952 9.2529 7.9397 9.3826 8.5862 9.9612 0.7746 0.3098 -0.0716 277 10.9042 8.8851 9.2181 8.4209 9.8291 9.8570 0.8749 0.2743 -0.3044 278 9.8175 10.6438 10.0372 10.0261 10.4344 10.3542 0.3087 0.7773 -1.6183 279 8.5595 8.6009 9.9544 9.3326 9.4015 9.3034 0.5304 0.4525 -0.2966 280 8.7067 9.4036 9.3034 9.4029 8.9115 9.3371 0.2952 0.8130 -0.5166 281 9.2444 9.2117 9.1996 10.4139 8.6297 10.0043 0.6436 0.3729 -0.3784 282 10.2744 10.2976 10.3496 9.5860 8.1649 9.7321 0.8334 0.2880 -0.4056 283 8.8883 9.6959 9.4949 9.8298 10.5663 10.3506 0.6043 0.3971 -0.5981 284 9.5607 9.0716 9.2532 10.4507 9.5031 9.4347 0.4783 0.5018 -0.5754 285 10.0028 9.4806 9.1159 8.9326 8.1513 9.2477 0.6151 0.3902 -0.2358 286 9.3648 9.0458 8.8622 8.6465 8.3227 9.0355 0.3611 0.6646 -0.1473 287 10.7156 9.5271 9.4800 8.9291 9.7982 8.4199 0.7820 0.3069 -0.3232 288 9.1700 8.7425 9.2481 9.2197 8.6545 9.3328 0.2873 0.8354 -0.3960 289 9.2082 9.0198 11.0878 8.9353 8.8792 9.5196 0.8391 0.2860 -0.2867 290 9.0662 9.8666 8.3909 10.1117 9.5305 9.6216 0.6187 0.3879 -0.3832 291 10.7500 9.3282 10.9119 10.8514 8.6127 9.3515 0.9909 0.2422 -0.4197 292 9.3719 10.3003 10.0481 9.3474 8.6263 9.9748 0.6156 0.3899 -0.4827 293 9.9594 10.8618 10.3786 9.6256 8.7357 10.5468 0.7646 0.3139 -0.5658 294 10.4288 8.9401 9.2755 10.4387 8.4827 9.2972 0.7976 0.3009 -0.3165 295 9.9392 8.5123 9.2418 9.4007 8.6753 9.2581 0.5167 0.4644 -0.2911 296 9.1021 10.2727 8.9696 9.6182 9.1016 8.8132 0.5424 0.4425 -0.3643 297 10.6515 10.4319 8.4002 9.4489 9.4472 9.3178 0.8199 0.2927 -0.3644 298 9.6861 9.4704 9.4981 9.2376 9.3426 9.7163 0.1874 1.2809 -1.3732 299 10.4078 8.8042 9.0993 9.4631 9.1534 9.0720 0.5669 0.4234 -0.3606 300 8.9192 8.9954 10.2517 8.9868 9.6738 9.7270 0.5420 0.4428 -0.4340 301 10.1091 9.4527 9.8521 8.2959 9.0077 10.0601 0.7064 0.3398 -0.3506 302 9.7157 9.5007 9.3217 10.6709 9.5804 9.2246 0.5216 0.4601 -0.6065 303 8.4619 9.6200 9.4991 9.4536 9.4714 8.9392 0.4487 0.5349 -0.3869 304 9.1884 9.8148 9.0761 9.8860 9.6218 9.8249 0.3513 0.6832 -0.8054 305 8.8765 9.7043 9.4075 10.7175 10.3024 9.6905 0.6512 0.3685 -0.5442 306 9.4468 8.5911 8.7216 10.0500 8.5922 8.8629 0.5865 0.4092 -0.1842 307 7.6807 8.7208 8.6872 9.7017 10.1097 9.3980 0.8699 0.2759 -0.1263 308 9.2670 8.0730 11.0634 9.7393 9.4542 9.6860 0.9608 0.2498 -0.2870 309 8.8412 10.1691 9.8440 8.8944 9.1663 9.6523 0.5423 0.4426 -0.4351 310 9.8346 10.5725 8.7538 9.0443 8.6854 10.6132 0.8817 0.2722 -0.3266 311 9.9242 8.8162 10.1765 9.7451 10.0490 9.0614 0.5585 0.4297 -0.5424 312 10.5232 9.1389 9.5780 9.2493 10.1501 9.3975 0.5478 0.4382 -0.5798 313 9.1601 9.0900 9.5590 8.7993 9.5174 10.1012 0.4561 0.5262 -0.4759 314 10.0246 8.9793 9.8075 10.6946 7.9609 10.1072 0.9747 0.2462 -0.2995 315 9.0651 9.4096 9.4327 9.0066 8.7453 8.8240 0.2885 0.8319 -0.4166 316 9.5644 9.2273 10.0480 9.3309 10.1737 8.9807 0.4719 0.5086 -0.5892 317 8.9145 10.2169 9.3212 10.3280 7.9041 10.2970 0.9753 0.2461 -0.2655 318 8.6813 9.8799 10.1470 8.6461 10.3661 8.8758 0.7842 0.3061 -0.3030 319 9.6146 10.3153 9.5787 9.1328 9.3122 9.2749 0.4233 0.5669 -0.6441 320 8.9089 9.1503 9.2600 9.7625 10.1541 9.4695 0.4500 0.5333 -0.5414 321 9.4548 10.7385 8.2006 11.0154 8.6943 9.8900 1.1097 0.2163 -0.2840 322 9.7348 9.3849 9.8350 9.5002 8.7129 9.5287 0.3964 0.6055 -0.6134 323 8.3877 10.1351 9.2927 9.7395 9.6547 7.8202 0.8877 0.2704 -0.1696 324 9.6564 9.8933 10.3175 8.9790 9.5636 9.4447 0.4482 0.5355 -0.6861 325 9.6129 9.3753 10.6254 9.0214 10.1771 9.5124 0.5814 0.4128 -0.5737 326 9.5767 9.6274 9.0837 10.0924 9.9627 10.8984 0.6130 0.3915 -0.6273 327 9.0374 9.4501 8.5526 9.0166 9.9830 10.0752 0.5969 0.4021 -0.3532 328 10.0627 9.4840 9.3103 11.0306 9.0237 9.9215 0.7128 0.3367 -0.5076 329 9.6471 8.5372 9.1051 9.4919 10.0885 9.2698 0.5255 0.4567 -0.4038 330 9.8192 9.5782 9.1658 8.9409 9.7725 9.3841 0.3466 0.6924 -0.6957 331 8.4642 8.9681 8.7704 9.8054 8.5845 10.1195 0.6828 0.3515 -0.1946 332 9.9680 9.8420 10.7563 8.1201 10.0249 9.4629 0.8793 0.2730 -0.3699 333 10.2477 9.1923 9.0218 9.8667 8.5037 7.6925 0.9225 0.2602 -0.1328 334 10.1021 9.9650 9.3015 10.5367 9.1952 9.9365 0.5069 0.4734 -0.7361 335 9.6380 9.2450 9.3188 9.4804 9.0440 9.2088 0.2102 1.1417 -0.9553 336 9.3402 8.9697 9.8117 10.0225 10.0300 9.7890 0.4211 0.5699 -0.7445 337 9.9406 9.8957 9.7537 9.3471 8.7139 8.4503 0.6362 0.3772 -0.3302 338 8.9493 8.3339 8.7051 9.0364 10.1015 9.7681 0.6640 0.3614 -0.2154 339 8.5589 9.3722 9.7950 9.6621 10.8535 9.0489 0.7793 0.3080 -0.3543 340 9.2752 9.1842 9.1971 9.5661 10.4001 9.8897 0.4826 0.4973 -0.5977 341 8.6555 7.9295 10.2248 9.1276 10.2252 9.7085 0.9166 0.2618 -0.2152 342 10.3836 10.0933 9.7471 9.3042 9.3498 9.2998 0.4612 0.5204 -0.7056 343 9.1374 9.4960 10.2006 9.4558 8.0814 9.0100 0.6986 0.3436 -0.2434 344 9.1682 9.2789 8.9400 8.7921 9.4000 9.5086 0.2736 0.8771 -0.5619 345 9.8368 10.2176 10.5676 9.9489 9.1479 9.6846 0.4827 0.4972 -0.8153 346 10.1979 9.4375 9.7084 9.6755 9.9568 9.0162 0.4108 0.5842 -0.7671 347 9.5653 10.0673 9.8348 9.4376 9.5490 7.3077 0.9995 0.2401 -0.1913 348 9.3018 8.6887 9.5353 9.2316 9.3582 8.7230 0.3510 0.6838 -0.3986 349 9.1758 9.6721 9.5396 9.0425 9.6616 9.7456 0.2924 0.8208 -0.8582 350 9.4923 10.2946 10.0022 8.7841 9.7810 8.5229 0.6968 0.3445 -0.3634 351 8.6990 9.2936 9.4666 9.3901 7.4055 9.0178 0.7748 0.3098 -0.0683 352 8.5401 7.8104 9.0764 8.9917 9.9740 8.7207 0.7111 0.3375 -0.0620 353 9.5430 9.6768 9.0343 9.1411 9.6461 8.7834 0.3697 0.6492 -0.5267 354 9.0835 8.7950 10.8234 9.2645 9.7420 9.1220 0.7313 0.3282 -0.3426 355 9.9767 10.2012 9.8552 9.3987 9.7850 9.0795 0.4082 0.5879 -0.8133 356 10.0837 10.1895 8.7249 8.8367 9.2267 9.1411 0.6252 0.3839 -0.3450 357 9.0853 9.8829 9.0914 9.6155 9.0059 10.3844 0.5522 0.4347 -0.4774 358 9.3766 9.5298 10.1349 8.6154 8.8473 9.7151 0.5608 0.4280 -0.3863 359 9.4544 9.6916 9.9470 9.1593 8.8757 10.1875 0.4900 0.4898 -0.5664 360 9.5241 8.6918 8.6923 9.9141 9.5016 9.0606 0.4972 0.4827 -0.3425 361 8.5747 9.4628 9.1842 9.3805 8.0770 9.1145 0.5351 0.4485 -0.1530 362 9.0782 7.4263 8.4650 8.8164 9.1419 8.6313 0.6270 0.3828 0.0674 363 8.5707 10.3801 8.7597 9.6048 9.5165 8.6324 0.7151 0.3356 -0.2443 364 10.2009 8.1235 9.3734 9.0403 8.8519 10.1212 0.7928 0.3027 -0.2376 365 8.7900 9.6155 7.3545 9.7245 8.7900 9.4412 0.8810 0.2724 -0.0880 366 10.3668 9.9684 8.9270 9.2352 8.7724 9.5374 0.6154 0.3900 -0.4051 367 8.5868 8.8056 8.7109 9.5524 8.7369 10.6303 0.7937 0.3024 -0.1892 368 9.9836 10.2914 8.7518 9.7841 8.6219 9.6158 0.6760 0.3550 -0.3886 369 9.5074 10.2350 9.8296 9.6521 8.5079 9.5504 0.5737 0.4184 -0.4806 370 9.6286 10.4530 10.2781 7.8962 8.9054 10.0038 0.9701 0.2474 -0.2775 371 8.3708 9.3043 8.7464 9.6684 9.5009 9.6962 0.5402 0.4443 -0.3051 372 8.9764 9.7133 10.4191 9.1611 9.0688 10.5202 0.6904 0.3476 -0.4457 373 8.9756 10.2788 9.4879 9.3704 10.6674 9.8514 0.6231 0.3852 -0.5627 374 9.9598 9.6088 10.1197 9.7231 9.3679 10.4000 0.3723 0.6447 -1.0236 375 10.4473 10.0610 9.8351 9.2291 8.5649 9.4533 0.6658 0.3605 -0.4398 376 9.3455 9.6148 9.1605 9.4000 9.1044 9.8594 0.2841 0.8447 -0.8143 377 10.0332 9.2749 9.7135 9.4217 9.7157 9.0646 0.3506 0.6846 -0.7771 378 10.2949 9.0677 8.9106 9.7872 9.2676 9.5296 0.5099 0.4706 -0.4944 379 9.4606 9.6643 9.6877 10.0184 8.2384 11.0367 0.9035 0.2656 -0.3558 380 10.0603 9.2501 9.1564 10.4017 10.2862 9.4592 0.5465 0.4392 -0.6399 381 9.0383 8.9951 9.9827 10.1289 9.1271 9.7333 0.5080 0.4725 -0.5124 382 11.4108 9.0736 9.5706 9.3112 9.7991 9.0435 0.8863 0.2708 -0.3691 383 9.8520 9.9488 8.8649 8.5105 9.2791 9.1639 0.5571 0.4308 -0.3290 384 10.4317 8.7767 9.6016 9.6541 10.6996 9.4976 0.6935 0.3461 -0.5080 385 8.8723 10.1937 8.4155 10.5527 9.4506 9.6783 0.7987 0.3005 -0.3369 386 9.4964 8.3193 8.4506 9.3319 9.6750 9.0096 0.5593 0.4291 -0.1950 387 9.0337 10.0926 9.0680 8.0359 8.7465 9.1473 0.6652 0.3608 -0.1507 388 8.6861 7.9229 9.1896 8.5721 10.3876 8.6874 0.8306 0.2889 -0.0753 389 8.7398 8.6351 9.0199 10.5374 10.4946 10.1558 0.8939 0.2685 -0.3271 390 9.1166 9.6861 9.4689 9.3675 8.2813 9.5574 0.5104 0.4702 -0.3437 391 9.3417 8.6543 10.8378 10.2902 8.7294 9.6464 0.8635 0.2779 -0.3333 392 8.0103 8.7110 8.2170 8.0627 9.6881 9.7314 0.7934 0.3025 -0.0070 393 8.9209 9.5034 8.9998 9.8030 9.9160 10.4588 0.5847 0.4105 -0.5019 394 9.2985 8.8358 9.7000 9.0316 9.6948 9.7014 0.3818 0.6286 -0.5736 395 9.7840 10.0336 9.8271 9.7434 10.4228 9.5798 0.2956 0.8118 -1.3287 396 8.6490 9.6151 8.9244 8.9940 8.8064 9.1071 0.3331 0.7205 -0.2962 397 8.5231 9.5101 10.5654 9.0575 9.9635 8.7204 0.7792 0.3080 -0.2867 398 9.7187 10.0095 8.8887 9.4933 9.4257 9.1574 0.3971 0.6044 -0.6118 399 8.2966 9.1112 8.5895 8.8882 9.6957 9.9377 0.6335 0.3789 -0.1928 400 9.6330 9.3193 8.4082 10.6270 9.4836 9.7766 0.7182 0.3342 -0.3812 401 10.3762 8.1419 9.0488 10.0119 7.9503 8.2033 1.0374 0.2313 -0.0756 402 8.0249 9.4069 8.5195 8.2832 9.3179 10.2009 0.8239 0.2913 -0.0966 403 8.4870 8.2768 10.6123 9.4844 9.2397 9.3289 0.8301 0.2891 -0.2081 404 7.8269 10.4780 8.2455 9.6296 9.1426 7.9089 1.0620 0.2260 -0.0477 405 9.0207 8.2745 8.7223 9.1294 9.2099 9.7146 0.4847 0.4952 -0.2008 406 9.2664 8.9482 9.1438 10.1642 10.2623 9.5531 0.5463 0.4393 -0.5103 407 8.9708 8.9363 10.0957 7.9025 9.1751 10.1032 0.8276 0.2900 -0.1922 408 9.0965 9.6781 7.9309 10.0982 10.7632 10.3325 1.0167 0.2361 -0.3049 409 9.6233 9.9555 9.2602 10.8034 9.0068 10.2311 0.6584 0.3645 -0.5536 410 10.5369 9.7007 10.3266 10.2156 10.4614 9.7956 0.3483 0.6891 -1.3904 411 10.2889 11.0256 8.9688 9.2130 8.3242 9.2225 0.9771 0.2456 -0.2685 412 9.1127 8.4115 9.0258 9.3182 9.8588 9.1329 0.4676 0.5133 -0.3018 413 8.7491 10.4928 9.5581 10.0914 10.4061 8.3196 0.9004 0.2666 -0.3268 414 10.2177 8.6717 8.6510 9.6067 9.6096 9.1891 0.6094 0.3938 -0.3306 415 8.9917 8.3827 9.5787 8.4643 10.3953 10.0243 0.8290 0.2895 -0.2357 416 9.1079 9.2320 9.3910 9.9425 9.4375 8.6510 0.4249 0.5649 -0.4501 417 10.4230 8.4464 9.9281 9.1551 9.5197 10.4027 0.7684 0.3124 -0.4016 418 9.6619 9.8234 9.5796 8.4485 11.0662 9.1119 0.8679 0.2765 -0.3438 419 8.8180 9.7568 9.3487 9.5912 9.9379 10.4092 0.5398 0.4446 -0.5704 420 9.2206 9.6507 9.6226 10.3547 8.4950 8.8068 0.6658 0.3605 -0.3196 421 9.7323 9.3172 9.2466 9.0604 9.8929 9.6148 0.3192 0.7519 -0.7910 422 10.5992 9.9798 10.5369 10.0878 9.7275 9.2466 0.5083 0.4721 -0.8588 423 9.7800 9.0342 9.0143 9.5905 8.9532 9.5216 0.3564 0.6735 -0.5572 424 8.7063 8.7232 9.4628 9.3042 9.8638 9.1515 0.4459 0.5383 -0.3603 425 9.0036 9.5493 10.5270 9.2523 10.1058 8.4387 0.7558 0.3176 -0.3350 426 9.6119 8.7053 10.3526 8.7757 9.5322 9.6473 0.6156 0.3898 -0.3885 427 8.5802 10.8862 9.4805 9.9243 8.8569 9.2294 0.8288 0.2896 -0.3109 428 10.1168 7.6890 9.8102 9.1859 9.1535 8.8479 0.8481 0.2830 -0.1627 429 9.0006 7.9030 9.3511 9.0160 8.4103 9.5010 0.6023 0.3985 -0.0795 430 9.3462 9.1510 8.6336 9.2818 9.2852 8.9725 0.2696 0.8901 -0.4842 431 9.6435 9.0662 8.5401 9.3576 9.7399 9.1426 0.4372 0.5490 -0.4028 432 10.0439 9.5068 9.5788 9.1423 9.9572 9.8342 0.3354 0.7157 -0.9514 433 9.8363 9.4173 10.4730 10.2456 10.4815 9.5461 0.4665 0.5144 -0.9146 434 9.0688 9.7256 9.5964 9.7620 8.1793 8.9507 0.6114 0.3925 -0.2692 435 9.9585 9.8163 9.1568 8.6091 9.8912 9.8324 0.5429 0.4421 -0.5060 436 9.8401 9.0539 9.3502 8.9144 8.2009 8.3214 0.6198 0.3872 -0.1220 437 9.4114 9.5910 10.5771 7.9895 9.3326 9.4408 0.8267 0.2903 -0.2703 438 10.3903 9.4535 9.3304 9.0439 9.4359 8.5766 0.5983 0.4011 -0.3631 439 8.7441 9.5519 10.1819 9.3692 10.1581 9.1788 0.5633 0.4260 -0.4797 440 9.2964 9.2983 8.6039 10.2111 8.6607 9.7814 0.6252 0.3838 -0.3138 441 10.4831 8.9480 9.0991 9.4939 9.4796 9.1969 0.5494 0.4368 -0.4429 442 8.6763 9.3045 9.8351 9.2905 9.4597 8.7400 0.4413 0.5438 -0.3759 443 9.8929 9.4540 8.9375 7.9341 9.4821 9.3418 0.6799 0.3530 -0.2224 444 9.7225 10.0017 9.9068 8.8176 8.7067 9.8183 0.5767 0.4162 -0.4483 445 8.3441 9.5050 9.2573 10.2271 10.0279 10.1124 0.7127 0.3367 -0.4017 446 9.3112 8.2236 10.0972 8.4261 9.4240 9.8103 0.7471 0.3212 -0.2210 447 7.5382 9.7220 9.3597 8.5172 8.6801 8.6355 0.7559 0.3175 -0.0098 448 9.2775 9.4422 8.7001 9.5080 10.5115 9.8795 0.6071 0.3953 -0.4574 449 9.4688 9.4070 9.6473 10.3622 9.6984 8.0614 0.7567 0.3172 -0.3175 450 9.3424 8.4527 9.8667 9.6947 10.0439 10.4556 0.6900 0.3478 -0.4457 451 9.5493 9.2002 9.7196 8.6160 10.6492 10.1804 0.7164 0.3350 -0.4339 452 9.1908 8.5277 9.1605 9.6704 9.6520 9.5523 0.4364 0.5500 -0.4371 453 8.3237 10.0197 9.2854 8.8685 9.3801 8.6287 0.6059 0.3961 -0.2005 454 9.9949 10.4423 9.3928 9.4233 8.3399 9.3499 0.7097 0.3382 -0.3619 455 9.7363 8.5917 9.1425 10.5709 8.8972 8.7621 0.7459 0.3217 -0.2518 456 9.3816 10.5935 8.9990 8.8761 10.3807 9.6413 0.7098 0.3381 -0.4346 457 9.6308 9.1039 10.2190 9.7423 9.3332 8.7645 0.5121 0.4686 -0.4853 458 9.2202 9.0097 10.1905 7.3680 9.1318 9.0962 0.9117 0.2633 -0.1034 459 8.7338 8.8324 10.3326 9.8464 9.4722 8.8612 0.6501 0.3692 -0.3212 460 9.1844 9.0330 8.7697 7.8501 10.2561 9.0443 0.7729 0.3105 -0.1306 461 8.9853 9.1012 10.6662 9.2795 9.6330 9.1630 0.6259 0.3834 -0.4001 462 8.6391 9.5690 9.6945 9.9892 8.4180 10.1016 0.7068 0.3396 -0.3216 463 10.5314 8.6778 9.1553 9.7637 9.7219 7.9091 0.9221 0.2603 -0.2072 464 9.4404 9.0853 9.2694 9.4248 9.0837 9.4195 0.1688 1.4220 -1.1202 465 9.7146 10.2764 10.1768 9.4354 9.1083 10.0620 0.4596 0.5222 -0.7801 466 9.3182 8.6155 8.4673 9.4890 9.8888 9.4369 0.5489 0.4372 -0.2931 467 8.6514 9.2191 9.4809 9.2692 9.5728 9.0797 0.3279 0.7319 -0.5004 468 9.1564 9.6426 9.6244 9.3586 9.5569 8.0352 0.6135 0.3912 -0.2766 469 9.3330 10.0112 8.5872 11.1708 9.4252 8.7712 0.9419 0.2548 -0.2937 470 10.1265 8.8655 9.8581 10.1134 8.9493 9.9515 0.5800 0.4138 -0.5310 471 8.5232 9.9893 9.8287 9.3894 9.2760 8.4449 0.6446 0.3723 -0.2699 472 9.4867 9.4962 8.5896 9.5090 9.4432 9.6250 0.3814 0.6292 -0.5578 473 9.4260 9.5692 9.6367 8.9214 9.9166 9.5056 0.3278 0.7322 -0.7890 474 9.8517 10.8709 9.6325 9.5886 9.0091 9.6825 0.6094 0.3938 -0.5757 475 9.0963 9.5995 8.1190 9.7877 8.4560 11.0655 1.0560 0.2273 -0.2001 476 10.1981 9.3378 9.6530 9.5295 9.1483 9.8650 0.3757 0.6389 -0.8003 477 8.2957 8.8595 8.8630 9.6431 9.1980 10.2664 0.6899 0.3479 -0.2259 478 9.2408 8.6624 9.7790 9.2989 9.0185 8.7549 0.4083 0.5877 -0.3312 479 10.1148 9.7696 9.0942 8.0641 10.1090 9.5017 0.7782 0.3084 -0.3094 480 9.3084 10.1940 8.8135 9.6631 9.5700 10.3450 0.5660 0.4240 -0.5471 481 9.2570 8.9958 10.3241 9.3857 9.0702 9.5091 0.4807 0.4993 -0.4880 482 9.9551 9.8030 9.8790 11.0451 9.4334 9.5966 0.5688 0.4219 -0.7220 483 9.8272 10.1689 9.2447 8.7488 8.4364 10.1239 0.7308 0.3284 -0.3215 484 8.9491 9.9882 9.3394 8.2841 9.9081 9.3403 0.6327 0.3793 -0.3064 485 9.2011 9.3775 8.4553 10.2417 10.1915 9.1886 0.6784 0.3537 -0.3550 486 8.8259 9.2288 9.9741 8.9526 9.1427 10.3120 0.5977 0.4015 -0.3826 487 9.8904 9.8274 10.2248 10.2969 10.1328 9.1417 0.4232 0.5672 -0.9445 488 9.2748 9.1922 7.7203 9.4544 9.9449 8.7026 0.7647 0.3138 -0.1430 489 8.6746 9.3768 8.4485 9.6876 9.5277 10.0658 0.6182 0.3882 -0.3110 490 8.4872 9.7972 9.4487 9.4308 9.5220 10.2476 0.5797 0.4140 -0.4421 491 10.3677 9.6773 10.3375 9.2895 9.0933 9.9275 0.5292 0.4535 -0.6690 492 9.5505 9.2506 9.1617 9.7434 9.4579 10.1402 0.3563 0.6736 -0.7772 493 9.9835 9.2465 10.1832 8.5238 9.8138 9.8966 0.6170 0.3890 -0.4797 494 8.9002 9.0079 8.9483 10.4493 8.4103 8.8544 0.6968 0.3444 -0.1794 495 9.3893 8.7477 9.7291 9.7486 9.3020 9.9109 0.4232 0.5671 -0.5917 496 9.3911 10.2953 9.6160 9.6928 10.1142 9.3871 0.3773 0.6361 -0.9095 497 10.7167 8.6584 9.3869 8.3722 10.1571 9.8188 0.8950 0.2682 -0.2973 498 9.3831 8.6662 9.7163 10.0789 9.6039 8.6629 0.5780 0.4152 -0.3644 499 10.4314 8.4028 9.6696 10.1799 9.0586 8.6669 0.8238 0.2913 -0.2758 500 9.0006 9.3338 9.0914 9.7782 9.7949 9.0970 0.3562 0.6737 -0.5889 501 9.8682 8.6140 9.2432 9.5758 9.3605 10.7137 0.7016 0.3421 -0.4003 502 9.1408 8.7364 8.4099 9.7752 9.3500 8.8181 0.4869 0.4929 -0.2180 503 9.6683 9.2999 9.5058 9.3998 8.9027 9.7816 0.3105 0.7730 -0.7584 504 9.8653 9.2044 9.3616 10.5433 8.9186 8.6194 0.6932 0.3462 -0.3360 505 9.3148 9.1941 10.2189 9.3889 9.6632 9.6834 0.3692 0.6501 -0.7739 506 9.3928 9.1836 9.8812 10.1100 10.0877 8.7762 0.5417 0.4430 -0.5242 507 9.4018 8.9179 8.9244 10.1425 9.3581 10.0357 0.5276 0.4549 -0.4697 508 10.5647 10.2209 9.2828 8.5927 8.9046 9.8545 0.7713 0.3112 -0.3674 509 10.1633 9.1760 11.1085 9.9351 8.6383 10.8249 0.9454 0.2539 -0.4422 510 9.6111 9.2428 10.1285 9.5675 9.1122 9.3843 0.3582 0.6700 -0.7331 511 9.5734 9.6441 7.6274 9.6175 9.6950 9.2612 0.8031 0.2988 -0.2144 512 9.2739 8.8558 9.7186 9.1167 10.2304 9.6692 0.4939 0.4859 -0.5112 513 8.7371 8.6057 9.9324 9.8514 9.4839 9.1098 0.5607 0.4281 -0.3369 514 9.7080 9.7850 10.2414 8.9217 8.9738 8.9559 0.5573 0.4306 -0.4252 515 8.9553 8.6067 8.8654 10.0431 10.0229 9.7542 0.6381 0.3761 -0.3419 516 9.7091 9.3781 8.7173 9.9430 10.1546 9.5686 0.5027 0.4774 -0.5692 517 9.0439 9.3739 9.2348 8.8642 9.1574 8.9015 0.1972 1.2168 -0.6353 518 10.0630 9.6173 8.8240 8.9870 9.1787 9.5309 0.4580 0.5240 -0.4708 519 9.6063 9.7456 8.7770 8.3868 10.1372 9.6773 0.6628 0.3621 -0.3361 520 9.6206 8.7009 9.5354 10.2651 11.5556 9.8100 0.9518 0.2521 -0.4184 521 10.7177 9.9520 8.4753 10.0958 10.3718 9.9580 0.7695 0.3119 -0.5235 522 8.9685 9.3402 9.7509 10.1551 9.9670 9.6406 0.4302 0.5579 -0.7106 523 10.5462 8.9938 9.7860 9.0517 8.2870 9.2931 0.7703 0.3116 -0.2624 524 8.6658 9.5879 9.4867 9.1514 9.8159 10.4828 0.6140 0.3909 -0.4407 525 10.2451 9.3649 9.4993 8.6575 10.1680 11.5606 0.9938 0.2415 -0.4011 526 8.9627 10.5781 11.0273 10.3645 8.2842 8.5332 1.1705 0.2050 -0.2577 527 9.4479 8.6347 8.2901 9.4860 8.9499 8.9112 0.4630 0.5184 -0.1680 528 9.3072 8.4170 10.1709 9.1171 9.5384 8.9445 0.5898 0.4069 -0.2991 529 10.1559 9.3338 9.7775 9.2616 9.1098 9.4907 0.3850 0.6233 -0.6939 530 10.0316 10.6559 9.7485 9.5854 8.5043 9.3665 0.7161 0.3351 -0.4323 531 9.2702 8.7101 10.4718 10.1805 9.5241 9.1035 0.6679 0.3593 -0.4109 532 8.7016 9.5799 8.3375 9.2559 9.3037 9.2477 0.4589 0.5230 -0.2550 533 8.7951 9.3361 7.9627 10.5437 9.9829 9.4418 0.9018 0.2661 -0.2305 534 9.3757 9.6681 9.7636 10.1847 9.5660 8.7290 0.4831 0.4968 -0.5712 535 8.8565 8.8883 9.7523 9.6204 8.5975 9.0512 0.4584 0.5235 -0.2965 536 9.1047 9.3891 10.3911 9.8026 8.8154 10.2437 0.6298 0.3811 -0.4787 537 8.9993 9.0469 9.4047 9.0148 9.3371 9.3648 0.1927 1.2454 -0.8209 538 9.6484 10.2670 9.7073 9.9224 8.5036 9.7124 0.5955 0.4030 -0.5076 539 9.4680 9.3885 9.4258 8.2504 9.4389 8.7652 0.5041 0.4761 -0.2664 540 9.4843 8.8390 10.8921 9.8053 9.8811 9.5470 0.6732 0.3565 -0.5058 541 10.2153 9.3040 9.6412 9.6625 9.7668 9.9461 0.3077 0.7800 -1.1223 542 10.8486 9.0551 10.2707 10.0328 9.3532 9.2266 0.7012 0.3423 -0.5124 543 9.5351 9.1594 9.1777 8.9978 9.3973 10.0167 0.3648 0.6579 -0.6037 544 8.8097 8.6889 7.7795 10.2564 8.7902 9.3813 0.8217 0.2921 -0.0937 545 8.0173 10.3098 8.3028 9.5044 7.6837 8.9097 0.9892 0.2426 -0.0229 546 10.3879 9.4074 10.0355 9.4432 9.6314 10.1596 0.4071 0.5895 -0.9205 547 10.5036 10.2044 8.6141 11.1103 9.2780 9.8085 0.8909 0.2694 -0.4489 548 9.2759 9.3568 9.8085 9.0187 9.4777 9.0682 0.2897 0.8284 -0.7068 549 9.1799 10.0802 9.5749 10.0618 9.3350 9.5802 0.3699 0.6489 -0.8249 550 8.7837 8.9988 8.3916 9.7893 8.3072 8.7066 0.5351 0.4485 -0.0682 551 9.3471 9.9431 10.5888 9.4579 9.0893 8.5796 0.6961 0.3448 -0.3740 552 9.4837 10.0976 9.5553 9.0290 8.4931 9.0608 0.5506 0.4359 -0.3430 553 8.1346 9.8931 9.5107 8.9098 9.7709 10.1322 0.7443 0.3224 -0.3009 554 9.6618 8.4302 9.8206 9.1406 8.6253 9.7224 0.5985 0.4010 -0.2860 555 9.6391 10.2648 9.8891 9.4261 10.1216 9.4307 0.3548 0.6765 -1.0102 556 9.4957 8.9841 9.5796 10.4903 9.1851 8.5038 0.6705 0.3579 -0.3247 557 9.6073 9.5713 9.9337 8.7433 8.9261 8.2900 0.6247 0.3842 -0.2447 558 10.1051 8.9236 9.6813 8.5060 10.2669 9.3220 0.6831 0.3514 -0.3648 559 9.6932 9.4492 10.0950 10.9815 9.3420 10.3993 0.6264 0.3831 -0.6776 560 9.4271 9.5917 9.6200 8.1810 8.3832 9.5318 0.6574 0.3651 -0.2041 561 9.4280 9.7264 8.8379 9.2972 10.0773 9.8249 0.4402 0.5453 -0.6149 562 9.2995 9.0169 8.9405 8.7160 9.2986 9.7272 0.3538 0.6783 -0.4206 563 9.9188 9.1297 9.1119 10.3596 9.9057 10.1465 0.5240 0.4580 -0.6629 564 8.7804 9.1809 10.5130 8.8713 8.0861 10.3669 0.9540 0.2516 -0.2026 565 11.0145 9.8550 9.6247 9.0310 9.3628 9.3787 0.6959 0.3449 -0.4747 566 9.9689 9.5966 8.3847 9.5825 9.3343 9.8660 0.5708 0.4204 -0.4295 567 8.6703 8.6476 9.7756 9.4754 10.4155 8.8258 0.7139 0.3362 -0.2716 568 10.9515 8.5412 10.4835 9.1225 9.4289 8.7721 0.9650 0.2487 -0.2867 569 8.4145 8.8454 9.6459 9.4265 10.0161 9.9721 0.6396 0.3752 -0.3475 570 10.0594 8.8998 9.8740 9.8449 9.0507 9.0055 0.5228 0.4591 -0.4691 571 9.5845 9.7456 8.6877 9.5374 7.9212 9.4710 0.7099 0.3381 -0.2056 572 11.6765 9.4278 8.7521 10.4518 8.9394 10.5730 1.1267 0.2130 -0.3698 573 8.9260 9.4214 9.1549 10.7557 9.8804 9.5012 0.6493 0.3696 -0.4551 574 8.1887 10.0004 9.7143 10.3059 8.9817 8.9737 0.7867 0.3051 -0.2715 575 9.4575 9.3561 9.2900 8.9906 8.1678 9.3686 0.4863 0.4935 -0.2640 576 9.4149 9.4299 9.9805 9.5202 10.0424 10.2872 0.3714 0.6462 -0.9506 577 9.6292 9.2342 8.8705 9.6214 8.6706 9.2757 0.3888 0.6173 -0.4260 578 8.9312 7.7384 9.2773 8.9924 9.1552 9.1745 0.5725 0.4192 -0.0921 579 9.8112 9.8199 9.4322 9.1191 8.8111 9.2653 0.3967 0.6049 -0.5516 580 9.7111 9.0975 9.4259 9.8105 10.1724 9.8796 0.3753 0.6395 -0.8552 581 9.2466 9.1215 8.7971 9.4327 9.0958 10.6082 0.6350 0.3779 -0.3484 582 8.8755 9.9840 9.2594 9.7904 8.6503 10.2247 0.6334 0.3789 -0.3916 583 9.5258 9.0057 9.0122 10.2612 9.9019 9.5095 0.4932 0.4866 -0.5515 584 9.5795 9.4078 10.4801 9.8413 9.2848 9.0845 0.4969 0.4830 -0.5991 585 9.1999 9.6247 9.7593 8.7183 8.6263 8.8634 0.4775 0.5026 -0.2876 586 10.2429 10.2339 9.9326 9.1525 10.2570 10.0071 0.4237 0.5665 -0.9842 587 9.2387 10.4634 9.0085 8.2506 10.6360 9.3743 0.9061 0.2649 -0.2852 588 9.6055 9.8848 10.0300 9.5496 9.8042 9.4926 0.2116 1.1343 -1.5877 589 10.1622 9.1898 9.3196 9.7675 8.9260 10.4484 0.5929 0.4048 -0.5148 590 8.8773 9.3531 10.3060 9.7352 8.2209 10.2739 0.8173 0.2936 -0.3022 591 9.2425 8.5888 9.8043 9.4061 8.9555 9.3187 0.4135 0.5805 -0.4025 592 9.8120 9.0682 8.6233 10.3594 9.8061 7.9758 0.8834 0.2717 -0.2091 593 8.9874 8.8992 8.4840 10.3721 9.1071 8.9876 0.6410 0.3744 -0.2182 594 8.8560 9.0408 10.4422 8.6807 9.3755 8.6002 0.6841 0.3508 -0.2173 595 9.8937 9.6935 9.7040 9.5315 10.2531 9.6789 0.2534 0.9471 -1.4108 596 8.8555 8.5498 9.9678 8.9226 10.4015 9.5657 0.7207 0.3330 -0.3040 597 9.9965 9.7660 9.2518 9.1981 9.6079 10.0927 0.3726 0.6442 -0.8340 598 10.0951 8.6535 9.4773 8.2704 8.8602 9.0572 0.6440 0.3727 -0.1806 599 8.7492 10.7498 9.7192 9.4632 9.6587 9.4837 0.6461 0.3714 -0.4732 600 9.7331 7.8571 10.1365 8.5784 7.3238 9.0517 1.0803 0.2222 -0.0185 601 9.4644 9.2910 9.6608 9.4551 8.8668 9.8547 0.3382 0.7096 -0.7019 602 10.0010 9.2550 9.9929 8.4535 9.9970 9.2885 0.6231 0.3852 -0.4162 603 8.9170 9.4592 10.7842 9.0996 9.8019 9.5123 0.6614 0.3629 -0.4413 604 9.8715 7.2477 10.1863 9.9372 9.7603 8.7903 1.1137 0.2155 -0.1733 605 9.2819 9.2914 9.9192 8.9397 8.5572 8.7420 0.4871 0.4927 -0.2750 606 9.4696 9.0632 9.0213 9.0809 10.0876 8.3778 0.5656 0.4243 -0.2731 607 10.1057 7.6849 9.8184 9.4674 9.2927 8.7117 0.8734 0.2748 -0.1756 608 9.9187 9.3678 9.5065 9.6750 8.4740 10.6279 0.7063 0.3398 -0.4130 609 8.9835 8.8629 10.0007 9.3220 10.0980 10.2888 0.6137 0.3910 -0.4740 610 9.7952 9.2686 8.9712 10.2754 9.9860 9.2934 0.4985 0.4814 -0.5873 611 7.7923 8.7457 8.9253 9.3693 8.7455 8.2248 0.5525 0.4344 0.0520 612 9.0732 9.4928 9.1696 9.2333 8.9026 9.2692 0.1982 1.2108 -0.7906 613 8.4817 10.6221 9.3244 9.5531 9.4333 9.6564 0.6867 0.3495 -0.3844 614 9.4663 9.4727 9.2287 9.8546 9.3175 9.4584 0.2143 1.1201 -1.1611 615 8.7995 10.0070 9.7308 8.5764 8.1454 8.5771 0.7311 0.3283 -0.1152 616 10.2357 9.7062 8.6682 8.4822 9.8946 9.8569 0.7198 0.3334 -0.3492 617 9.2046 8.4483 8.6695 9.8285 9.1364 8.9840 0.4793 0.5008 -0.2262 618 8.7751 9.4189 10.0022 9.0284 9.6109 9.9176 0.4865 0.4934 -0.5063 619 9.0512 9.1071 9.3220 9.9826 10.0435 10.2799 0.5331 0.4502 -0.5697 620 8.7031 9.3256 8.2930 10.0957 8.9536 10.1110 0.7436 0.3227 -0.2362 621 9.7262 9.7687 9.9473 9.1019 8.7062 9.2153 0.4786 0.5014 -0.4812 622 9.1520 10.0636 9.4482 10.6180 8.6467 7.7877 1.0076 0.2382 -0.1872 623 9.2666 9.9225 9.7173 8.8043 9.3803 8.3661 0.5775 0.4156 -0.3018 624 10.0131 9.2961 8.8446 8.8084 8.6474 9.1623 0.4952 0.4846 -0.2751 625 9.1053 9.5695 9.2226 9.0637 9.2792 8.2981 0.4269 0.5622 -0.2887 626 9.2138 9.3429 9.3761 8.4689 8.8194 8.9372 0.3519 0.6820 -0.2902 627 8.5416 10.1238 9.7227 10.3728 8.9794 8.9402 0.7330 0.3274 -0.3305 628 10.4074 10.1399 10.6886 9.4644 10.2744 9.2953 0.5488 0.4373 -0.8047 629 10.5338 10.7830 8.5349 9.6316 9.0987 9.0602 0.8887 0.2700 -0.3327 630 9.7880 9.0749 9.4834 8.7936 8.9923 9.2567 0.3598 0.6671 -0.4739 631 9.4273 8.0810 9.6494 9.0580 8.6295 9.7354 0.6441 0.3726 -0.1950 632 8.3221 8.9026 9.1773 9.2618 8.8676 8.9791 0.3308 0.7256 -0.1999 633 10.1772 9.3044 9.1635 8.1992 8.2174 9.5025 0.7692 0.3120 -0.1621 634 10.6833 10.1185 9.1852 9.9673 9.0307 9.0971 0.6764 0.3548 -0.4733 635 9.8247 10.3507 8.5730 9.8620 10.2841 8.8532 0.7429 0.3231 -0.4059 636 9.1773 10.8589 8.0172 10.3966 9.9364 8.3865 1.1292 0.2125 -0.2191 637 10.1634 9.3941 9.6933 9.4087 7.9214 8.3478 0.8487 0.2828 -0.1708 638 9.7404 10.2861 9.0234 9.6549 9.8084 9.1582 0.4612 0.5203 -0.6446 639 9.8425 9.7004 9.2453 8.7486 8.9316 9.5544 0.4368 0.5494 -0.4710 640 8.9370 8.6141 9.6434 8.5338 9.3209 9.1318 0.4241 0.5659 -0.2438 641 9.5780 9.1191 9.4968 10.1212 9.3601 9.4290 0.3346 0.7172 -0.7943 642 8.8278 8.8831 8.8669 8.9337 9.2104 7.9879 0.4139 0.5798 -0.0523 643 7.9630 9.7386 9.3586 8.7829 9.0870 10.1392 0.7630 0.3145 -0.2002 644 9.5696 10.2194 10.0430 9.6184 10.0328 9.9631 0.2577 0.9312 -1.5361 645 8.2972 9.4542 9.0561 10.1664 9.1280 9.5290 0.6191 0.3876 -0.2971 646 10.4287 9.1228 9.4438 10.2169 8.9171 9.7987 0.6012 0.3992 -0.5182 647 9.3466 10.2678 9.6036 8.2684 9.6956 9.2502 0.6614 0.3629 -0.3454 648 10.2270 9.7784 9.9228 9.7424 9.5323 9.9272 0.2327 1.0312 -1.6255 649 8.6236 8.9626 8.6660 9.1037 8.1485 9.3607 0.4256 0.5639 -0.0712 650 9.2282 8.8194 8.7190 8.6476 9.7910 9.2269 0.4322 0.5553 -0.2715 651 9.1039 9.3712 9.5790 10.5066 9.7010 9.6474 0.4727 0.5077 -0.6568 652 9.3616 9.6497 8.6267 9.0655 9.0528 8.8489 0.3636 0.6600 -0.3491 653 9.9773 8.8346 9.3437 10.1479 8.2790 8.9148 0.7172 0.3346 -0.2461 654 8.4068 10.6855 10.3961 9.2660 8.4372 8.8075 0.9900 0.2424 -0.2065 655 9.7929 8.7577 9.5385 9.8274 9.6983 9.7120 0.4030 0.5956 -0.6903 656 9.9447 9.6654 9.4989 9.9475 9.5187 9.6202 0.2010 1.1940 -1.6238 657 8.7546 8.3624 9.2765 9.0337 9.4713 9.7477 0.5012 0.4789 -0.2579 658 9.3618 8.8965 9.1808 8.8507 9.6589 10.0927 0.4754 0.5048 -0.4348 659 8.5239 7.8074 9.6956 8.2176 10.5233 8.8255 1.0068 0.2384 -0.0703 660 9.2085 9.0487 9.2093 8.6381 9.0150 10.2749 0.5517 0.4350 -0.3096 661 9.8834 8.9745 8.9827 9.8593 8.4551 8.3578 0.6611 0.3630 -0.1843 662 8.0857 10.2670 10.4651 8.9557 9.2233 9.9405 0.9040 0.2655 -0.2838 663 10.5295 8.6196 9.8670 8.8880 8.6804 9.4080 0.7557 0.3176 -0.2700 664 8.6333 9.1134 8.8178 8.9803 9.6643 10.9673 0.8606 0.2789 -0.2489 665 10.0225 9.8314 9.7942 9.3510 9.9362 8.9216 0.4228 0.5676 -0.7275 666 9.8004 9.0553 9.5006 10.0148 9.2267 9.1853 0.3792 0.6330 -0.6539 667 9.8814 8.9823 9.0296 9.9681 10.2509 10.0084 0.5416 0.4431 -0.5950 668 10.3126 8.9842 10.1276 8.1858 10.3447 10.3300 0.9137 0.2627 -0.3627 669 8.4888 9.3427 8.7405 9.2198 9.3151 9.1770 0.3497 0.6862 -0.3120 670 8.7034 8.9443 8.4438 10.1385 9.6306 9.5963 0.6475 0.3707 -0.2692 671 9.0530 8.5921 9.3087 9.1894 9.4969 10.4545 0.6216 0.3861 -0.3374 672 9.1689 8.4173 9.7856 8.8216 8.8785 9.0463 0.4542 0.5284 -0.2199 673 9.3988 9.3165 8.9321 9.7599 8.7880 9.9881 0.4622 0.5193 -0.4644 674 9.3106 8.6519 10.4920 9.7949 9.8466 9.4579 0.6159 0.3896 -0.4721 675 9.7575 10.4744 9.8897 8.5747 9.0682 10.1002 0.6994 0.3432 -0.4404 676 8.7182 8.9209 9.8779 8.7074 9.3927 9.4003 0.4656 0.5155 -0.3218 677 8.8794 8.9959 8.9718 8.3105 8.2554 9.8098 0.5658 0.4242 -0.0886 678 9.7836 9.0446 9.1735 10.2523 9.3433 10.4916 0.5951 0.4033 -0.5386 679 10.9605 8.6556 9.7555 10.1386 8.9802 9.9658 0.8310 0.2888 -0.4102 680 9.1584 8.8085 8.4117 8.5155 8.9121 9.9151 0.5431 0.4419 -0.1433 681 9.7643 10.5066 8.5654 9.5180 9.4933 9.7716 0.6272 0.3827 -0.4694 682 10.3181 9.4929 10.4115 9.5462 10.3561 9.6760 0.4379 0.5481 -0.9491 683 8.8945 10.1319 9.9490 9.3106 9.5917 9.7119 0.4469 0.5370 -0.6550 684 8.9293 9.9695 8.9680 9.6157 8.8480 9.6852 0.4776 0.5025 -0.4299 685 9.7850 9.2878 9.3888 9.4158 10.8108 9.2000 0.6037 0.3975 -0.5124 686 9.0892 10.1809 9.7622 9.4173 8.7563 8.5400 0.6198 0.3872 -0.3071 687 8.4735 10.7578 8.9486 9.5904 9.5327 9.2272 0.7729 0.3105 -0.3027 688 9.5079 9.0758 8.8704 9.4752 9.6177 8.9438 0.3227 0.7438 -0.5459 689 9.9402 9.8272 9.1369 9.4976 8.6060 9.7920 0.5120 0.4688 -0.4861 690 10.1854 10.6402 10.1998 8.9233 9.7544 8.9256 0.7134 0.3364 -0.4913 691 8.8104 8.9047 9.3437 9.1874 8.9513 9.2203 0.2098 1.1440 -0.5555 692 9.7840 8.7124 9.4027 8.8690 8.9889 9.0065 0.3949 0.6078 -0.3438 693 8.7343 9.6345 8.6828 8.2844 9.8045 10.3543 0.7994 0.3002 -0.2207 694 10.3331 9.6802 9.1715 9.9147 9.4601 9.0819 0.4721 0.5084 -0.6262 695 9.5492 9.5920 9.7893 8.5826 9.6886 9.3783 0.4375 0.5485 -0.5409 696 8.0161 8.6393 9.5263 9.9037 9.6600 9.1910 0.7096 0.3382 -0.2048 697 9.7523 9.3114 9.2309 9.8986 8.4689 7.7372 0.8215 0.2922 -0.1406 698 10.8199 9.1608 9.3726 8.7733 9.7315 10.3827 0.7717 0.3110 -0.4263 699 10.2339 9.1926 8.9290 10.3159 9.3450 9.9295 0.5804 0.4135 -0.5385 700 8.7691 10.2767 9.5700 8.8662 9.0906 9.8624 0.5983 0.4011 -0.3821 701 10.0328 9.7452 8.9362 9.3794 8.9497 8.6637 0.5292 0.4535 -0.3556 702 9.7926 9.2027 8.8798 9.6898 10.8399 9.1908 0.6966 0.3445 -0.4207 703 9.5731 10.0703 8.8293 8.7989 8.7625 9.2587 0.5269 0.4555 -0.3134 704 8.7190 8.0869 9.0430 8.8843 8.6852 10.1494 0.6808 0.3526 -0.1018 705 9.8078 9.8408 10.1961 10.7399 8.7177 9.6419 0.6686 0.3590 -0.5504 706 9.4734 9.3465 8.4184 9.9544 9.6856 10.8793 0.8052 0.2981 -0.3752 707 9.5831 9.5674 8.8396 8.7563 9.0489 10.2491 0.5680 0.4225 -0.3643 708 9.3425 10.1333 9.9670 8.8533 10.4006 10.2734 0.6041 0.3973 -0.6116 709 10.0493 9.2240 9.6574 9.9477 9.8121 9.4539 0.3112 0.7711 -1.0397 710 9.2407 9.6881 7.5545 9.5868 9.6060 10.0911 0.8947 0.2682 -0.2140 711 8.5773 10.0962 9.1598 10.5851 9.6986 10.1146 0.7300 0.3288 -0.4499 712 10.3881 10.3758 9.1684 9.6170 9.4315 9.7326 0.4998 0.4802 -0.7107 713 11.0685 9.0304 9.8466 8.8599 9.0010 9.8107 0.8358 0.2872 -0.3521 714 9.0814 8.9320 9.6944 10.2610 9.8550 9.4059 0.4982 0.4818 -0.5475 715 9.8410 9.8660 8.6214 10.4571 10.6935 8.9548 0.8145 0.2946 -0.4170 716 9.9448 8.8693 9.7924 10.2118 9.2824 9.6591 0.4825 0.4974 -0.6263 717 8.7001 8.6928 10.5722 8.9338 9.4181 9.5391 0.7144 0.3359 -0.2750 718 9.4120 10.2905 9.7839 9.4604 8.5415 10.1106 0.6239 0.3847 -0.4700 719 8.7753 9.0911 8.4995 7.7894 9.1013 8.7001 0.4856 0.4942 0.0416 720 8.7823 9.8339 9.2170 10.0812 9.1976 9.3395 0.4715 0.5090 -0.4868 721 9.4971 9.0674 9.5931 9.2973 10.2803 9.0778 0.4513 0.5318 -0.5531 722 9.4425 9.5628 9.1573 9.3446 9.2098 9.7481 0.2222 1.0800 -1.0363 723 8.7074 9.1573 8.8966 8.8300 10.3151 10.1637 0.7098 0.3381 -0.2935 724 9.7859 8.9089 10.3934 9.6710 10.3633 10.0310 0.5501 0.4363 -0.6902 725 10.1464 9.9621 9.8055 10.5659 9.9366 9.8521 0.2810 0.8541 -1.5716 726 8.7412 8.2363 9.1768 10.1120 10.8291 9.3498 0.9370 0.2561 -0.2446 727 9.2376 8.9937 8.8576 8.8082 8.7550 9.5777 0.3157 0.7601 -0.3360 728 8.9778 8.7626 9.1899 8.2054 8.2896 9.2541 0.4478 0.5359 -0.0446 729 8.7423 8.2151 7.8080 9.6627 8.9557 8.8851 0.6416 0.3741 0.0044 730 10.5978 9.8637 9.7088 9.9015 9.9971 8.8393 0.5690 0.4218 -0.6432 731 9.5707 9.5310 10.1977 8.8296 9.3757 9.8005 0.4544 0.5281 -0.6095 732 8.6810 10.1913 10.7257 10.1920 9.4590 10.6478 0.7811 0.3073 -0.5389 733 9.8638 9.1089 9.4828 9.8206 9.2914 9.0046 0.3597 0.6673 -0.6568 734 8.6373 9.7148 8.4983 9.5246 9.8440 9.3150 0.5637 0.4258 -0.3168 735 9.1293 9.6798 9.5483 11.4562 8.9862 9.5005 0.8923 0.2690 -0.3723 736 10.8362 10.1651 9.8263 9.9649 8.9015 8.2551 0.9282 0.2586 -0.3369 737 8.8340 8.4953 9.3930 9.6785 9.4170 9.6868 0.4828 0.4971 -0.3665 738 9.0313 8.6425 10.1360 8.1096 10.1174 8.8013 0.8226 0.2918 -0.1701 739 9.1801 9.1013 9.7050 8.4341 8.7676 9.6967 0.5038 0.4764 -0.2828 740 9.2061 8.5279 9.5770 9.6342 9.2486 9.8777 0.4727 0.5077 -0.4408 741 8.8664 9.0736 9.7652 10.2072 8.3765 10.3903 0.7989 0.3004 -0.3031 742 9.5373 10.9236 9.4397 9.2929 8.3997 9.3492 0.8133 0.2951 -0.3158 743 10.3163 9.5868 9.0784 9.1701 9.1678 8.9570 0.5056 0.4746 -0.4347 744 9.9535 9.9962 8.6338 8.4671 8.9749 10.0938 0.7441 0.3226 -0.2837 745 8.8626 10.0938 9.1732 9.4455 8.8317 8.8904 0.4907 0.4891 -0.3371 746 9.1753 8.5757 10.1839 9.0819 10.9013 8.6389 0.9246 0.2596 -0.2546 747 8.9522 9.2529 9.2081 10.4023 8.9466 8.7848 0.5876 0.4084 -0.3051 748 9.4227 8.1443 8.9459 8.0804 9.3675 8.6475 0.5824 0.4121 -0.0275 749 9.6173 9.7543 10.8169 10.1048 8.4211 9.2043 0.8111 0.2959 -0.3835 750 9.7806 9.7165 9.9248 9.3008 9.5109 9.6539 0.2183 1.0994 -1.4169 751 10.6991 9.8421 10.3051 9.0404 9.5570 8.7244 0.7472 0.3212 -0.4348 752 8.7175 9.7007 8.9373 9.8884 8.8594 7.9903 0.6931 0.3463 -0.1422 753 9.3393 11.1604 9.6253 8.1630 7.8939 9.4044 1.1697 0.2052 -0.1551 754 9.6281 9.8408 9.1235 9.2208 8.8595 10.2166 0.5048 0.4755 -0.5029 755 8.9220 10.5389 10.3148 10.1033 9.9498 9.1932 0.6413 0.3742 -0.5806 756 11.3420 9.0835 9.3942 10.3086 10.7605 10.5028 0.8499 0.2824 -0.5930 757 9.6781 8.9112 9.6413 8.9927 9.5936 8.4539 0.5021 0.4780 -0.3265 758 7.7644 8.6460 9.5120 10.2212 9.8754 10.4273 1.0210 0.2351 -0.2245 759 9.5812 8.2004 8.6103 10.1919 9.7702 9.5660 0.7548 0.3180 -0.2650 760 10.8985 9.8833 10.4730 8.9735 9.1125 8.2710 0.9925 0.2418 -0.2962 761 9.6584 8.8616 9.1092 9.8865 9.2770 9.0691 0.3884 0.6179 -0.5066 762 8.1322 9.8303 9.0112 9.1993 10.1549 9.6118 0.7160 0.3352 -0.2809 763 10.1180 8.7350 9.3567 10.2421 9.1669 9.3027 0.5809 0.4132 -0.4401 764 9.6985 9.6273 10.0165 9.0517 9.3697 9.7513 0.3344 0.7176 -0.8630 765 9.6803 10.6700 8.9767 9.6399 9.9559 9.7782 0.5473 0.4385 -0.6477 766 9.6214 9.8010 9.3159 10.7244 9.4437 9.1102 0.5694 0.4215 -0.5558 767 9.9755 9.5738 9.1046 9.3288 8.6209 9.4917 0.4590 0.5228 -0.4569 768 9.4325 9.6628 9.5897 9.3384 9.2741 8.6004 0.3803 0.6311 -0.5227 769 9.4732 9.9439 9.6328 9.1957 8.9194 9.7896 0.3817 0.6287 -0.6745 770 9.1120 10.3135 9.5177 10.5804 9.2707 7.7344 1.0112 0.2373 -0.2312 771 8.7550 8.2209 9.2921 9.6147 10.0224 9.4830 0.6462 0.3714 -0.2638 772 9.3217 9.7623 8.9316 9.3312 8.4554 8.4170 0.5343 0.4492 -0.1975 773 9.1859 10.0282 9.8694 10.0094 9.1420 9.5579 0.4001 0.5999 -0.7599 774 9.4072 8.6114 10.0313 8.5321 9.3388 10.1522 0.6820 0.3519 -0.3057 775 9.4823 8.7347 8.4921 8.4649 9.2284 8.7127 0.4127 0.5816 -0.1070 776 9.5619 9.6903 9.0420 9.2037 9.5476 10.0116 0.3467 0.6922 -0.7591 777 9.2561 8.7498 8.2702 9.9384 9.4820 9.0283 0.5808 0.4132 -0.2300 778 8.4606 9.0070 9.6841 8.4278 9.1570 9.1068 0.4729 0.5075 -0.1789 779 9.4571 9.1071 9.4285 8.2576 9.4179 10.6015 0.7531 0.3187 -0.2914 780 9.3998 8.7048 9.8869 9.9129 9.3222 9.2962 0.4467 0.5373 -0.5227 781 10.2915 9.4298 8.9252 10.3873 10.1545 7.8838 0.9786 0.2452 -0.2698 782 9.3001 9.4345 8.8608 8.3106 9.9929 9.3183 0.5681 0.4225 -0.2833 783 10.0438 8.6086 8.4786 9.5101 9.5116 10.4895 0.7863 0.3052 -0.3054 784 9.2469 8.9339 9.1964 9.7370 9.9466 10.6849 0.6393 0.3754 -0.4715 785 8.8761 9.6852 9.0704 9.4588 10.8163 9.1637 0.7007 0.3425 -0.3767 786 8.6979 9.6150 9.3113 9.0743 9.9314 9.8786 0.4822 0.4977 -0.4826 787 8.2877 10.0063 8.1649 9.7205 8.4716 9.7329 0.8400 0.2857 -0.1365 788 9.1263 8.4329 9.5108 8.9095 8.5030 9.7406 0.5280 0.4546 -0.2003 789 9.8639 9.0750 9.5811 10.1678 8.6734 9.4442 0.5377 0.4463 -0.4634 790 8.4483 9.3782 9.6785 9.1411 7.9927 8.5702 0.6361 0.3773 -0.0776 791 9.1738 9.4676 9.3268 9.8849 9.7646 8.9957 0.3421 0.7016 -0.6973 792 9.3512 9.1855 8.7060 9.2284 9.5261 10.0355 0.4374 0.5486 -0.4715 793 10.3837 9.3121 9.1953 10.2270 9.6164 10.5729 0.5856 0.4098 -0.6628 794 9.5252 10.2819 8.8295 7.5828 8.5329 9.7207 0.9651 0.2487 -0.1239 795 10.0807 9.9175 10.2007 9.8896 8.9759 9.2929 0.4827 0.4972 -0.6949 796 9.1779 9.3978 10.0053 8.9555 9.2231 9.0787 0.3729 0.6436 -0.5241 797 9.2843 9.0385 9.2377 6.7392 9.3030 10.1098 1.1454 0.2095 -0.0675 798 8.6953 9.2198 9.4057 8.9201 9.2956 9.5690 0.3224 0.7445 -0.4801 799 10.6622 9.0658 8.7938 8.9122 9.0621 9.1183 0.6929 0.3463 -0.2641 800 9.0046 8.6617 9.8452 9.1140 9.0908 10.9047 0.8164 0.2940 -0.2927 801 10.3051 9.8926 9.7791 8.6679 7.8286 8.7757 0.9359 0.2564 -0.1739 802 10.0478 10.0944 10.2627 11.4185 9.9566 9.3119 0.6883 0.3487 -0.7080 803 11.7435 10.1017 9.2954 9.3499 9.1679 9.4036 0.9870 0.2432 -0.3795 804 10.6952 9.0835 8.4676 9.2257 8.7538 10.0184 0.8335 0.2879 -0.2616 805 10.0076 8.8234 8.4215 9.2080 9.8568 8.8380 0.6265 0.3831 -0.2514 806 9.5977 10.7162 10.2365 9.8838 9.5982 8.8950 0.6221 0.3858 -0.5901 807 9.2870 9.2513 9.9015 8.9343 9.4825 8.6507 0.4333 0.5539 -0.4087 808 9.2669 9.6579 10.0634 8.9276 8.0742 9.1520 0.6787 0.3536 -0.2310 809 9.7519 9.7811 9.5779 9.2838 9.5267 9.8533 0.2101 1.1421 -1.4421 810 10.3024 8.6980 8.7445 10.0302 9.7563 8.9532 0.7013 0.3422 -0.3299 811 9.9859 9.0833 10.2158 10.2025 8.6923 9.3463 0.6396 0.3752 -0.4522 812 8.6836 9.3438 9.5983 9.5419 9.1056 9.4537 0.3435 0.6987 -0.5510 813 10.4688 9.4828 10.4099 8.6158 8.9743 10.0705 0.7715 0.3111 -0.4106 814 9.0386 8.3682 10.0394 8.4997 9.8932 9.1332 0.6913 0.3472 -0.2132 815 9.5863 9.7909 8.9901 10.1243 8.5957 10.3380 0.6681 0.3592 -0.4245 816 9.5278 9.8195 9.8461 9.0697 9.6667 10.1699 0.3695 0.6495 -0.8689 817 10.5674 10.2474 9.4500 8.7605 8.6822 8.9375 0.8015 0.2995 -0.2998 818 8.8100 9.5404 11.1591 8.9772 10.0838 9.0730 0.8897 0.2697 -0.3324 819 8.0359 10.0357 9.0270 8.2292 9.2980 8.8674 0.7295 0.3290 -0.0893 820 10.3525 9.1318 9.6372 9.1476 9.3452 9.5997 0.4542 0.5284 -0.5986 821 9.5954 9.7171 8.0716 9.2946 10.0191 9.4357 0.6764 0.3548 -0.3132 822 9.4107 9.5622 10.0679 9.7820 10.4388 9.5726 0.3846 0.6240 -0.9409 823 8.3258 9.0941 8.8333 10.9790 8.2250 8.8942 0.9999 0.2400 -0.1129 824 10.2861 8.4010 8.1245 9.3759 10.7300 8.5396 1.0744 0.2234 -0.1622 825 8.9743 9.9617 9.6670 9.3464 9.1215 9.4291 0.3599 0.6669 -0.6453 826 7.8370 9.3014 8.9115 10.0114 9.0798 9.3115 0.7132 0.3365 -0.1661 827 9.4049 8.4865 8.8230 8.8751 8.9669 7.7243 0.5675 0.4229 0.0039 828 9.4007 8.7725 9.6595 9.8621 8.9085 8.9879 0.4420 0.5430 -0.4111 829 9.7778 8.5780 9.2222 8.5195 8.8654 10.8627 0.8940 0.2685 -0.2179 830 10.0448 9.4525 8.5624 9.1156 9.0280 8.8890 0.5129 0.4679 -0.3003 831 9.3119 8.8310 9.9154 9.6831 8.2632 10.1351 0.7069 0.3395 -0.3002 832 9.7152 9.3855 9.2500 9.8298 9.2798 8.2116 0.5736 0.4184 -0.3246 833 9.1257 9.4206 9.3450 9.2023 10.1485 8.7538 0.4622 0.5192 -0.4418 834 9.1124 8.3709 10.1013 9.9437 9.6502 9.2770 0.6335 0.3789 -0.3627 835 10.1275 9.2358 8.3640 8.8719 9.1272 9.0630 0.5769 0.4160 -0.2378 836 10.0888 9.4713 9.5133 9.5612 8.8393 9.8537 0.4231 0.5672 -0.6575 837 10.3027 8.3229 9.1993 8.9278 10.6629 10.9875 1.0663 0.2251 -0.3169 838 9.8585 9.2009 9.6457 9.1499 10.6855 9.6332 0.5577 0.4303 -0.5831 839 11.6270 9.0674 9.6047 9.9628 9.6328 8.6964 1.0177 0.2358 -0.3424 840 9.8447 9.3925 8.4115 8.1282 9.7705 8.9944 0.7098 0.3381 -0.1739 841 8.0173 8.0182 9.4826 9.6221 8.4122 10.0607 0.8939 0.2685 -0.0804 842 9.6430 7.8564 9.6129 9.9312 9.6781 9.9499 0.7920 0.3030 -0.3052 843 9.7210 9.2462 9.2299 8.7632 8.7283 8.7851 0.3930 0.6107 -0.3045 844 9.3391 9.3362 9.6896 9.1827 9.7886 9.8305 0.2747 0.8737 -0.9803 845 9.3551 9.2392 9.9009 8.5101 9.4299 9.4489 0.4538 0.5289 -0.4363 846 9.2871 7.8132 9.2180 9.2897 10.0860 9.5888 0.7582 0.3165 -0.2171 847 9.3296 9.9308 9.9351 8.2070 9.5303 9.1631 0.6409 0.3745 -0.3273 848 8.6939 10.1421 9.8283 9.4642 9.4232 8.5962 0.6120 0.3921 -0.3475 849 9.2511 8.7416 10.0768 10.0459 9.0462 10.5162 0.6971 0.3443 -0.4270 850 7.2554 9.2067 8.8051 9.8629 9.0634 10.4525 1.0875 0.2207 -0.1188 851 9.9210 8.4877 9.2403 8.7150 9.2812 9.2615 0.5020 0.4781 -0.2863 852 9.2337 10.5376 9.0716 10.0696 8.1447 10.2131 0.8931 0.2687 -0.3079 853 9.7365 8.7091 9.4632 9.9997 8.8418 9.8308 0.5377 0.4463 -0.4402 854 10.0344 9.5391 9.1650 9.3327 8.9558 9.5411 0.3726 0.6441 -0.6334 855 9.5442 9.2933 9.2707 9.8603 9.7114 9.0936 0.2927 0.8199 -0.8453 856 9.3239 10.2634 8.1855 9.4548 10.2759 9.9606 0.7902 0.3037 -0.3617 857 9.1372 8.9854 9.5755 9.7465 9.4175 9.8361 0.3369 0.7124 -0.7220 858 7.9875 10.4010 9.0959 9.1420 10.9509 9.9859 1.0658 0.2252 -0.2733 859 9.7865 10.5725 9.2469 8.9239 10.0062 9.5635 0.5809 0.4132 -0.5528 860 9.8835 8.7328 8.1917 10.0791 9.8985 10.2478 0.8367 0.2868 -0.3130 861 10.1576 9.7780 10.2178 9.4413 9.3681 9.9261 0.3557 0.6746 -1.0258 862 8.8341 9.5575 10.3782 9.8771 8.7509 9.4270 0.6199 0.3871 -0.4037 863 9.1475 10.0302 9.4276 9.3714 10.5606 9.8446 0.5201 0.4614 -0.6475 864 8.8879 9.1959 9.1731 9.9264 9.4342 8.9660 0.3770 0.6365 -0.4809 865 9.5995 9.5429 9.7507 9.8843 9.0682 9.8227 0.2961 0.8105 -1.0034 866 9.7000 9.2379 10.0054 8.9100 8.5367 8.2736 0.6685 0.3590 -0.1948 867 9.5301 9.0140 9.0309 9.6201 9.7898 9.5034 0.3200 0.7500 -0.7237 868 9.0965 10.2335 9.4019 8.4279 9.8692 9.1448 0.6338 0.3787 -0.3378 869 9.5681 9.9629 8.7986 8.9736 10.9947 8.7059 0.8778 0.2734 -0.2964 870 9.9913 9.6312 8.5719 9.3056 9.8407 9.7847 0.5201 0.4615 -0.5133 871 10.4604 9.2695 9.4151 10.5444 8.9256 9.1205 0.7010 0.3423 -0.4292 872 9.2422 9.7745 10.1113 8.9179 10.0684 10.0762 0.5046 0.4756 -0.6463 873 8.9884 8.9317 9.3818 8.4264 10.4904 10.3017 0.8169 0.2938 -0.2857 874 10.0936 9.9982 9.8690 9.1564 10.1983 10.3959 0.4289 0.5596 -0.9575 875 9.5504 8.5561 8.2123 9.7085 9.2118 8.6017 0.6036 0.3976 -0.1400 876 8.7448 9.5061 9.2592 8.9005 8.5927 10.6445 0.7505 0.3198 -0.2463 877 10.0342 9.5235 9.4045 10.8179 9.5671 9.2640 0.5761 0.4166 -0.6067 878 8.6655 9.3959 8.4477 8.7919 7.8888 9.8469 0.6949 0.3454 -0.0573 879 9.7552 9.2177 10.3141 9.6588 8.0475 11.2185 1.0631 0.2258 -0.3079 880 8.5938 9.5316 9.6844 9.0010 10.6866 9.0450 0.7328 0.3275 -0.3201 881 10.9233 8.8058 8.2472 9.5972 9.2162 8.9246 0.9190 0.2612 -0.2052 882 10.1298 8.5697 9.7059 8.8199 10.7335 9.8966 0.8153 0.2944 -0.3772 883 9.8285 9.7007 10.2332 8.9416 9.1963 9.9319 0.4818 0.4981 -0.6355 884 9.6524 9.7237 10.1707 9.6500 10.4121 9.5263 0.3517 0.6824 -1.0766 885 8.3180 9.1499 9.9586 9.5213 9.8659 9.7433 0.6149 0.3903 -0.3828 886 9.9802 9.3452 8.9405 8.7193 8.2939 8.8489 0.5798 0.4139 -0.1732 887 8.3458 8.4283 9.9727 8.2596 9.7112 9.5116 0.7756 0.3094 -0.1367 888 10.7750 9.1607 8.7832 8.5186 8.9287 9.6034 0.8127 0.2953 -0.2358 889 8.9883 9.6331 8.1064 7.7940 10.1360 8.2796 0.9247 0.2596 -0.0371 890 9.1880 9.4460 8.7247 9.6104 10.1009 9.0143 0.4839 0.4960 -0.4322 891 9.2282 9.5424 9.2301 9.0455 8.9057 8.3880 0.3913 0.6134 -0.2868 892 9.5853 9.2114 10.4300 10.6959 9.3969 9.6349 0.5963 0.4025 -0.6181 893 10.4181 8.3224 8.7490 9.1615 9.4340 10.2590 0.8267 0.2903 -0.2704 894 9.1683 9.2357 10.6881 9.0815 10.7592 9.5943 0.7710 0.3113 -0.4473 895 9.5616 9.3335 10.1484 8.6481 9.3717 8.8684 0.5297 0.4531 -0.3788 896 8.7611 9.8619 10.6836 8.7123 10.5934 8.6289 0.9637 0.2491 -0.2837 897 9.6087 8.9880 9.4606 9.2773 9.3652 9.3501 0.2075 1.1565 -0.9985 898 10.0056 9.2141 9.0025 9.8720 10.3187 10.5308 0.6044 0.3971 -0.6089 899 9.2749 10.1136 9.1807 9.6208 9.0543 9.3988 0.3825 0.6275 -0.6280 900 9.0323 9.9035 9.3139 8.7128 10.3119 8.8914 0.6244 0.3844 -0.3422 901 9.2758 10.4566 9.2274 10.4816 9.4385 8.9659 0.6592 0.3641 -0.4657 902 8.4469 9.1950 9.7201 10.6642 9.4687 9.3089 0.7262 0.3305 -0.3430 903 8.4077 10.4507 9.8726 9.0525 9.2971 9.1036 0.7104 0.3378 -0.3022 904 9.2556 10.5415 9.1662 10.0296 9.0132 9.3827 0.5936 0.4043 -0.4744 905 10.6620 9.2464 8.7826 10.5428 10.1063 9.1065 0.7988 0.3004 -0.4261 906 8.9891 9.9723 8.9286 9.2553 9.0748 9.0207 0.3912 0.6135 -0.4148 907 8.7419 9.2027 9.7687 8.2509 9.0778 10.3817 0.7533 0.3186 -0.2289 908 9.0542 9.0858 8.8551 9.9158 9.7921 10.2002 0.5538 0.4334 -0.4598 909 9.0959 8.8296 9.1236 8.4980 9.5730 9.0415 0.3553 0.6755 -0.2879 910 9.5381 9.5537 8.5689 10.7144 10.1198 9.8838 0.7156 0.3354 -0.4704 911 9.5181 10.3900 10.1609 9.1293 9.5780 8.1451 0.8009 0.2996 -0.3192 912 9.3093 9.6806 10.1205 9.9416 9.1605 9.4655 0.3712 0.6466 -0.8019 913 9.4360 10.2579 8.4849 8.3340 9.2108 10.1889 0.8160 0.2941 -0.2446 914 9.7517 10.7044 10.0645 8.8106 9.8155 8.6119 0.7874 0.3048 -0.3837 915 9.7466 9.7148 9.3135 8.2958 8.4388 9.9072 0.7023 0.3418 -0.2450 916 9.2807 8.9533 8.6613 9.3006 9.4383 9.1819 0.2829 0.8482 -0.4901 917 8.8938 8.3667 10.0791 9.3390 8.6483 8.2594 0.6834 0.3512 -0.1029 918 8.3917 9.8761 9.4577 9.3821 9.1993 9.1021 0.4924 0.4874 -0.3485 919 9.5835 9.1907 9.2798 9.5110 9.5591 10.4883 0.4624 0.5191 -0.6359 920 9.9542 9.2500 10.1820 9.1334 9.3514 8.8156 0.5182 0.4632 -0.4682 921 8.6624 7.6294 10.0892 9.8010 9.9612 9.4880 0.9528 0.2519 -0.1931 922 8.9753 9.8157 9.4918 9.2884 10.5530 10.1468 0.5793 0.4143 -0.5708 923 9.6803 10.0894 9.1134 8.4662 8.4119 10.0937 0.7637 0.3143 -0.2572 924 8.9823 9.6219 9.6868 8.5965 10.2567 8.5063 0.6914 0.3471 -0.2676 925 9.4789 9.8701 9.1501 8.1666 9.4559 8.9136 0.5900 0.4068 -0.2557 926 10.3123 10.0661 9.7154 9.6282 9.9679 9.6268 0.2770 0.8665 -1.4033 927 9.6643 8.9626 8.2260 8.4708 9.3565 9.0877 0.5381 0.4460 -0.1495 928 8.9406 9.2018 10.3851 10.4234 9.9189 9.1548 0.6569 0.3654 -0.4825 929 9.4630 9.4428 9.6991 9.1644 8.4533 9.4629 0.4395 0.5460 -0.4254 930 9.3695 10.7460 9.0664 8.5908 8.0985 9.5074 0.9067 0.2647 -0.1874 931 9.3900 9.0914 9.1330 10.0231 8.9351 9.0344 0.4000 0.6000 -0.4566 932 9.7883 10.1165 9.1908 8.4931 9.3588 9.4824 0.5547 0.4326 -0.4116 933 8.3983 9.8707 10.0981 9.2256 9.4223 9.6479 0.5988 0.4008 -0.4029 934 9.1520 9.4916 9.0200 10.2699 10.2997 8.6921 0.6687 0.3589 -0.3826 935 9.6676 9.0075 10.4129 8.6409 9.9015 8.3508 0.7938 0.3023 -0.2562 936 9.9419 9.2658 8.8295 9.3328 8.1548 8.6409 0.6223 0.3857 -0.1648 937 9.6463 10.2479 9.6742 9.1636 10.4233 9.1316 0.5360 0.4478 -0.6185 938 9.1254 9.0577 9.5915 9.2650 9.2470 10.9282 0.7065 0.3397 -0.3849 939 9.4651 8.5091 8.5356 9.1845 9.3288 8.6944 0.4231 0.5672 -0.1835 940 9.0006 9.1600 9.9531 9.3602 10.3173 9.0065 0.5467 0.4390 -0.4550 941 9.5879 10.1465 9.6984 9.8351 8.3835 10.7449 0.7809 0.3074 -0.4323 942 8.0931 9.5048 9.4000 9.9204 9.8820 9.6636 0.6769 0.3546 -0.3401 943 8.1306 8.7618 9.7120 9.7756 9.7462 8.5780 0.7174 0.3345 -0.1846 944 10.0054 8.8679 9.3352 9.4256 10.5563 9.0261 0.6356 0.3776 -0.4280 945 9.8599 8.3362 9.1968 8.9091 10.2246 9.4088 0.6737 0.3562 -0.2981 946 9.0578 8.9644 10.0139 10.1525 9.0094 8.5698 0.6364 0.3771 -0.3010 947 9.6712 9.5595 9.1409 9.1785 9.4709 10.9273 0.6563 0.3657 -0.4765 948 10.2161 9.4802 9.4175 8.4018 8.8847 9.1214 0.6138 0.3910 -0.2898 949 9.0911 10.3195 10.0529 9.8949 9.5601 9.2262 0.4818 0.4981 -0.6717 950 9.5176 8.7528 9.5903 9.3358 9.7364 9.8932 0.3998 0.6003 -0.6262 951 8.9295 9.0390 10.3691 8.5788 7.6835 8.8698 0.8674 0.2767 -0.0736 952 9.6614 9.8478 8.5866 9.8461 9.7331 10.9449 0.7491 0.3204 -0.4672 953 9.5359 10.1930 9.3487 10.0846 10.0812 8.8422 0.5330 0.4503 -0.6010 954 9.6445 8.6875 8.5130 9.4044 9.6647 9.1638 0.4876 0.4922 -0.3142 955 9.1788 8.7339 9.5414 8.3372 9.4888 9.2377 0.4660 0.5150 -0.2620 956 10.3809 8.8432 8.8365 9.4009 9.7469 9.2081 0.5911 0.4060 -0.3850 957 9.8432 7.9558 10.0328 8.6538 9.8194 9.6258 0.8282 0.2898 -0.2422 958 9.9508 8.6828 8.4196 8.9174 9.5992 8.5028 0.6251 0.3839 -0.1558 959 8.2772 8.7308 9.3911 9.8641 8.5554 8.9014 0.5812 0.4129 -0.1338 960 8.6577 8.1417 7.7639 9.2061 9.1363 9.0698 0.5941 0.4040 0.0322 961 9.3812 9.6167 9.2583 9.3750 8.9631 9.7192 0.2682 0.8950 -0.8274 962 9.8773 8.6838 9.0811 9.6347 9.1258 9.5516 0.4388 0.5470 -0.4602 963 9.2628 10.0655 8.8324 9.0591 9.4088 10.3664 0.5958 0.4028 -0.4359 964 9.0702 9.5746 8.7061 9.6101 9.0064 8.8829 0.3707 0.6475 -0.3792 965 8.2950 9.8494 9.4732 8.8974 8.4855 9.3992 0.6083 0.3945 -0.1899 966 9.3455 9.0625 8.3125 9.1837 9.4960 9.3817 0.4288 0.5597 -0.3190 967 9.9486 9.0337 9.7236 8.6000 9.2002 9.5655 0.4958 0.4840 -0.4203 968 8.7410 10.4031 10.5487 9.3338 7.5123 9.3402 1.1213 0.2140 -0.1763 969 9.7170 9.9014 10.4047 9.3456 9.9919 9.8573 0.3465 0.6926 -1.1059 970 10.5824 8.8165 8.6507 8.3715 9.6570 9.6104 0.8226 0.2917 -0.2275 971 10.0909 8.5372 9.3647 9.2553 8.9129 8.8046 0.5464 0.4392 -0.2690 972 9.0240 9.4120 8.5559 10.0076 8.6353 9.1495 0.5358 0.4479 -0.2555 973 9.7097 10.0217 9.2299 9.9616 9.0825 8.8220 0.4962 0.4836 -0.5046 974 8.6937 8.7796 9.2014 9.3683 9.6947 8.8634 0.3898 0.6157 -0.3251 975 10.6179 8.2861 8.3831 8.7824 10.2724 9.0571 0.9850 0.2437 -0.1737 976 9.4676 9.2396 8.9371 10.1175 8.9527 10.0715 0.5264 0.4559 -0.4713 977 10.0986 9.1251 8.3534 8.8806 9.9904 10.0917 0.7420 0.3235 -0.3160 978 10.3880 8.8351 9.0872 8.7108 8.4276 10.1810 0.8154 0.2943 -0.2255 979 8.8792 9.0556 8.8008 9.5060 9.3352 9.6492 0.3454 0.6947 -0.4673 980 9.5223 8.8535 9.5060 9.1134 9.7596 8.6076 0.4438 0.5408 -0.3809 981 9.2388 9.9748 9.5796 8.9725 9.6770 7.3946 0.9234 0.2599 -0.1515 982 8.7760 9.2957 9.4123 8.5371 9.4431 8.2728 0.4971 0.4828 -0.1584 983 9.7929 10.4620 9.0856 8.7092 8.9996 9.7923 0.6542 0.3669 -0.3840 984 7.7366 8.0812 8.8883 9.9555 9.8820 9.2554 0.9167 0.2618 -0.0896 985 10.3731 10.4592 10.1726 10.1183 11.6278 9.7485 0.6428 0.3734 -0.8799 986 9.3825 9.7415 9.4371 9.3073 9.2450 10.1738 0.3517 0.6824 -0.7846 987 10.5345 8.6575 8.3818 10.2962 10.0178 10.0596 0.9051 0.2652 -0.3454 988 9.5946 8.8782 8.9249 9.5109 8.6741 9.3690 0.3812 0.6297 -0.3836 989 9.6229 8.4854 7.9157 10.0767 9.2527 7.8711 0.9193 0.2611 -0.0547 990 8.9604 9.7734 9.9005 9.7012 9.5052 8.8666 0.4368 0.5495 -0.5581 991 8.7635 8.6777 9.6822 9.1782 9.5456 8.3933 0.5124 0.4683 -0.2082 992 8.0065 9.1394 9.2385 9.0562 9.4215 8.7059 0.5098 0.4707 -0.1360 993 9.2343 9.5846 10.2976 9.5451 9.6409 9.6841 0.3485 0.6886 -0.9032 994 9.3338 9.9934 8.9352 9.4410 9.5688 9.4362 0.3430 0.6998 -0.7109 995 9.4316 9.0348 9.6617 8.9397 9.6119 9.1150 0.3098 0.7747 -0.6231 996 8.3509 9.6222 8.8659 9.1517 10.1455 10.2552 0.7462 0.3216 -0.3031 997 9.0748 10.1475 9.0771 10.5584 9.8606 9.2542 0.6216 0.3861 -0.5052 998 9.3187 9.4602 9.8177 10.4923 9.5927 8.1222 0.7773 0.3088 -0.3205 999 9.6051 9.1641 9.4577 8.9179 9.4254 10.0237 0.3787 0.6338 -0.6270 1000 8.8734 9.9574 10.4896 8.4605 8.0833 9.1045 0.9097 0.2638 -0.1618 cp_std_dev &lt;- sd(simulated_cp) cpkMin_std_dev &lt;- sd(simulated_cpk_min) Finally, the standard deviation of those 1000 values correspond to the tolerance value, resulting: \\[0.3647 \\pm 0.1758\\] The same procedure was applied for the \\(C_{pk}\\), calculating the minimum \\(C_{pK}\\) for the same 1000 bootstrap samples, and then calculating the standard deviation for these values, resulting in: \\[C_{pk} = min(\\frac{\\bar{X}-LSL}{3s}, \\frac{USL-\\bar{X}}{3s})\\] \\[-0.3458 \\pm 0.2447\\] 2.6.1 Percentiles method When the population doesn’t follow a normal distribution, the calculation of \\(C_p\\) and \\(C_{pk}\\) can’t be performed using the method described above. This will require non-parametric methods like Clement’s, or Burr’s percentile method, or Box-Cox transformation. Each method is described briefly beneath: Clement’s percentile method: It uses a family of Pearson Curves to calculate the indices. It proposes two changes to the parametric method. Instead of using the mean as measure of central tendency it uses the median. Instead of using the values of the percentile points from normal distributions it takes them from non-normal ones. In this case, the PCIs are defined as: \\[C_p = \\frac{USL - LSL}{P_{0.99865} - P_{0.00135}}\\] \\[C_{pl} = \\frac{P_{0.5} - LSL}{P_{0.5} - P_{0.00135}}\\] \\[C_{pu} = \\frac{USL - P_{0.5}}{P_{0.99865} - P_{0.5}}\\] where \\(P_q\\) is the \\(q-th\\) percentile value of non-normal distribution. Burr’s percentile method: Same as Clement’s but with the slight modification that instead of a family of Pearson distribution curves an appropriated Burr XII distribution is used. Box-Cox Transformation method: Original data is transformed and then modified using conventional methods so that the output data can be considered as normal. Agudelo and Cogollo (2016) proposes an adaptation of Clement’s method that can be summarized in figure 2.9. knitr::include_graphics(&quot;images/non_parametric_cp.jpeg&quot;) Figure 2.9: Flowchart for process capability indices calculation References "],["acceptance-sampling.html", "3 Acceptance sampling 3.1 Concept definition 3.2 Process where acceptance sampling can be implemented 3.3 Three scenarios (design) evaluation 3.4 Sampling procedure, producer and consumer risk, relation to type 1 error and power of a test 3.5 Present a numerical example", " 3 Acceptance sampling Read about acceptance sampling. Select a process where an input can be evaluated using a sampling scheme. Propose an acceptance sampling procedure using binomial or hypergeometric models. Describe the concept of acceptance sampling. Select a process where acceptance sampling can be implemented. Evaluate at least three different scenarios (designs). Define a sampling procedure based on the binomial or hypergeometric distribution. Determine the producer and consumer risk and describe how they relate to the type 1 error probability and the power of a test. Present a numerical example. 3.1 Concept definition In quality control, it is sometimes necessary to inspect batches of raw materials as well as finished products to ensure that certain quality levels are met with a good degree of confidence. Acceptance sampling is the inspection process of a sample of units extracted from a lot that is carried out with the purpose of accepting or rejecting the entire lot (Gutierrez Pulido and Vara Salazar 2013). There are two possible options, that the batch is accepted, so it would go directly to be used; or the lot is rejected, then it would be returned to the supplier or may be subject to some other degree. Acceptance sampling is useful in a variety of situations, including the following: when the inspection is carried out with destructive tests (a destructive test is a test in which a sampled item is no longer salable after it has been sampled), when \\(100\\%\\) inspection is impossible in technical or economic terms, or when the lot is made up of a large number of items. 3.1.1 Types of sampling plans A first level of classification of acceptance sampling plans is based on the type of quality characteristic (or variable) under analysis, which can be an attribute or continuous variables. In plans by variables, a random sample is taken from the lot and each unit is measured for a quality characteristic of a continuous type (length, weight, volume, temperature, etc.). In attribute plans, one or more samples are randomly drawn from a lot and each item in the sample is classified according to certain attributes as acceptable or defective; the number of defective parts is used to decide if the lot is accepted or not. Since attribute acceptance sampling will be performed in this project, this concept is described in greater depth below. 3.1.2 Acceptance sampling by attributes The simplest form of an attribute sampling plan is a single attribute sampling, which is related to situations in which the results of the inspection can be classified into only two classes of outcomes: success and failure (a Bernoulli trial). It is used in inspection by counting the number of defects found in the sample (Poisson distribution) or evaluating the proportion of defectives in a large process or batch (binomial distribution) or individual batches (hypergeometric distribution). The implementation is very simple. It involves taking a random sample of size \\(n\\) from a lot of size \\(N\\). The number of defectives (or defects) \\(d\\) is compared to an acceptance number \\(c\\). If the number found is less than or equal to \\(c\\), the lot is accepted. If the number found is greater than \\(c\\), the lot is rejected (Schilling and Neubauer 2017). Attribute plans are classified according to the number of samples taken to reach a decision. In the simple sampling plan \\((n,c)\\) a sample of size \\(n\\) is taken, and if \\(c\\) or fewer defective units are found in it, the lot is accepted, or else it is rejected, as it was previously discussed. In the double sampling plan, up to two samples can be taken to make the decision to accept or not. The idea is to take a first sample size smaller than the simple plan to detect the lots that are very “good” or those that are very “bad”. In cases where the first sample is not enough to take a decision, then the second sample is taken to reach a definitive conclusion. The multiple sampling plan is an extension of the concept of double sampling, where an initial sample considerably smaller than the simple plan is taken, and if with it there is already enough evidence to sentence the lot, the appropriate decision is made accordingly, otherwise, a second sample is taken and an attempt is made to decide; but if this is still not possible, the process continues until the decision to accept or reject the lot is made, considering all the defectives found. 3.1.3 Batch characteristics and sample selection A very important aspect of acceptance sampling by attributes is the lot itself, as it influences the effectiveness of the acceptance sampling plan. The following is recommended for batches that will be submitted to an inspection plan. Batches must be homogeneous. The units that make up a particular batch must have been manufactured under similar conditions in terms of machines, operators, raw material, time (dates), etc. The lots must be formed in such a way that they do not complicate their handling during the inspection. Batches should be as large as possible. This is due to the fact that in large batches it is necessary to inspect proportionally less than in small batches. All acceptance sampling plans base their operation on the fact that the units selected for inspection are representative of the entire lot. Hence, the selection of the units that make up the sample must be done by applying a random sampling method. The above recommendations are made to ensure that a sample is as representative as possible of the entire lot. 3.1.4 Statistical aspects of acceptance sampling It has been stated that the items extracted in each sample depend on chance. Therefore, what is observed in a sample is not identical to what is in the population or lot. Hence, to make a certain decision about the population, but based on a sample, one must resort to statistical methods supported by a probability model. In acceptance sampling such a probabilistic model is the operating characteristic curve (OC curve). 3.1.5 Operating characteristic curve The operating characteristic (OC) curve is the fundamental tool for the analysis of a sampling plan. Two types of curves are recognized: Type A: it is used to calculate the probabilities of acceptance of an isolated and small lot size. This type of curve plots the probability that the lot is accepted against lot proportion defective. Type B: it is used to calculate probabilities of acceptance of a large lot or a lot that comes from a continuous flow of products. This type of curve plots the proportion of lots that will be accepted against process proportion defective. In general, the OC curve has a wide range of \\(p\\) values because in practice the proportion of defectives in a batch is not exactly known. Naturally, the probability distributions used in generating these types of curves are inherently different. They depend on the measure in which the quantity is expressed, this includes: Attributes: Classification of units as defective or non-defective. Counting: enumeration of the occurrences of a given characteristic by number of units counted. Variables: measurement of some characteristic using a continuous scale. data_type &lt;- c(&quot;$\\\\textbf{Attributes}$&quot;, &quot;$\\\\textbf{Counting}$&quot;, &quot;$\\\\textbf{Variables}$&quot;) type_a_curve &lt;- c(&quot;Hypergeometric&quot;, &quot;$f$-Binomial&quot;, &quot;Applicable continuous distribution&quot;) type_b_curve &lt;- c(&quot;Binomial&quot;, &quot;Poisson&quot;, &quot;Applicable continuous distribution&quot;) tabla_recommended_distributions &lt;- data.frame(data_type, type_a_curve, type_b_curve) colnames(tabla_recommended_distributions) &lt;- c(&quot;$\\\\textbf{Data type}$&quot;, &quot;$\\\\textbf{Type A curve}$&quot;, &quot;$\\\\textbf{Type B curve}$&quot;) knitr::kable(tabla_recommended_distributions, align = &quot;c&quot;, caption = &quot;Recommended distribution for each type of data measured in the sample and the type of OC curve to be constructed&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 3.1: Recommended distribution for each type of data measured in the sample and the type of OC curve to be constructed \\(\\textbf{Data type}\\) \\(\\textbf{Type A curve}\\) \\(\\textbf{Type B curve}\\) \\(\\textbf{Attributes}\\) Hypergeometric Binomial \\(\\textbf{Counting}\\) \\(f\\)-Binomial Poisson \\(\\textbf{Variables}\\) Applicable continuous distribution Applicable continuous distribution knitr::include_graphics(&quot;images/operating_cc.png&quot;) Figure 3.1: Example of an Operating Characteristic Curve for a sampling plan with \\(n=205\\) and \\(c=2\\). AQL and LQL values (described later) and their relationship with the producer’s and consumer’s risk are shown. Taken from Gutierrez Pulido and Vara Salazar (2013) Properties of OC curves: There is no sampling plan that has an ideal OC curve, capable of perfectly distinguishing good lots from bad ones. By increasing the sample size and the acceptance number, the obtained plans have greater power to distinguish good quality from poor. The criterion of sample size equal to a percentage of the lot size is a bad criterion. As the acceptance number decreases, the OC curve falls faster and with it the plans become more stringent. Plans with \\(c=0\\) (no defects) are not always the most appropriate. The influence of lot size on properly designing sampling plans is less than it is commonly believed (Gutierrez Pulido and Vara Salazar 2013). 3.1.6 Important concepts in acceptance sampling In all process there are always two interests: on the one hand, the supplier wants all batches that meet an acceptable quality level to be approved; and on the other, the customer wants all batches that do not have an acceptable quality level to be rejected. It is not possible to simultaneously satisfy both interests by means of an acceptance sampling plan, but one thing can be done, and it is is to design acceptance sampling plans that have a high probability of accepting “good” lots and a low probability of accepting “bad” lots. To achieve this, it is necessary to establish, for a specific situation, what will be considered as acceptable, intermediate, and unacceptable quality, with their corresponding probabilities of acceptance. For this reason the terms Acceptable Quality Level, Limit Quality Level, and Average Outgoing Quality are defined. Acceptable Quality Level, or AQL, is defined as the maximum percentage of units that do not meet the specified quality, which for sampling inspection purposes is considered satisfactory or acceptable as an average for the process (AQL is also known as producer quality level). According to the above, if a lot has a quality level equal to the AQL, then the probability of accepting it must be high \\((0.90, 0.95)\\), and this probability is designated as \\(1-\\alpha\\). Note that the probability of accepting lots with an AQL is not equal to 1 and therefore there is a risk of not accepting what is considered a satisfactory quality level. This risk that has a probability equal to \\(\\alpha\\), usually small \\((0.05, 0.10)\\), is known as the producer’s risk. Limit quality level, or LQL, is the level of quality that is considered unsatisfactory and lots that have this type of quality should almost always be rejected. The LQL in some specific plans is known as Lot Tolerance Proportion Defective, or LTPD. Due to the aforementioned, if a lot has a quality equal to the LQL, then the probability of accepting it must be very low (generally \\(0.05, 0.10\\)), and this probability is designated by the letter \\(\\beta\\). Note that the probability of accepting lots of unsatisfactory quality (LQL) is not zero and, therefore, there is a risk of not rejecting this type of lot. This risk, which has probability equal to \\(\\beta\\), is known as the consumer’s risk. Average Outgoing Quality, or AOQ, is the average quality that is reached after applying the inspection process. This concept is a way of measuring the effect of a sampling plan on the quality that it will have after applying it. This calculation is performed in a similar way to how the operating characteristic curve is obtained, since for each proportion of defectives that the batch contains at the entrance, an average proportion of defectives at the exit (AOQ) is expected. By plotting the input proportion, \\(p\\), against the average proportion defective after inspection, CPS, a curve for the average output quality (CPS curve) is obtained. The CPS curve, when a large lot size is available, is obtained with the formula: \\[CPS = (p)(P_a)\\] Where \\(p\\) is the proportion of defectives at the entry of the lot, and \\(P_a\\) is the probability of acceptance of such lot provided by the sampling plan. Average Outgoing Quality Limit, AOQL, it is defined as the maximum value of the CPS curve and represents the worst average quality that can be obtained from the inspection program. 3.1.7 Methods for designing sampling plans Procedures are available to determine the so-called simple two-point \\((n,c)\\) sampling plans for specified values of: Producer Quality Level (PQL) Consumer Quality Level (CQL) Producer risk \\(\\alpha\\) Consumer risk \\(\\beta\\) An example of a method for designing acceptance sampling plans is the one published by Cameron (Cameron 1952). It is a procedure for designing simple sampling plans that satisfy a given AQL and LQL. It is based on the Poisson distribution and gives a good approximation to the binomial distribution. There are some other methods of procedures for determining single sampling plans as using the Tables of Poisson Unity Values (such as Cameron Method), Binomial Nomograph, f-Binomial Nomograph, Thorndyke Chart, and Hypergeometric tables. Also, the Military Standard 105E can be mentioned. The original version was created in 1950 (Agency 1950). It is currently the most widely used attribute acceptance sampling system in the world. Alternatively, its civil counterpart ANSI/ASQ Z1.4 can be used. At this point it is necessary to distinguish between an acceptance sampling plan, an acceptance sampling scheme, and an acceptance sampling system. An acceptance sampling plan is a plan that establishes the sample sizes to be used and the associated criteria for lot acceptance. An acceptance sampling scheme is a combination of acceptance sampling plans with switching rules to change from one plan to another. An acceptance sampling system is a collection of acceptance sampling plans or schemes together with criteria by which the appropriate plans or schemes are chosen (ISO 2006). In this sense, MIL-STD-105E is not a sampling plan, it is a sampling system. As such, it combines various sampling plans into schemes constructed to employ economic, psychological, and operational means to motivate the producer to maintain quality at levels less than or equal to the AQL. 3.2 Process where acceptance sampling can be implemented The selected process is the measurement of impurities of car bodies after a painting process in a certain automotive process. It is divided into two phases: The first phase refers to the measurement of impurities in car bodies of a certain model. Second phase is related to the implementation of a process that will reduce impurities in the different stages of the painting process. Broadly speaking, in the painting process in the automotive industry, the car body is provided with different layers, each of which corresponds to one or more unit operations, which are shown below: knitr::include_graphics(&quot;images/layers_painted.png&quot;) Figure 3.2: Layers during the painting process in a car body knitr::include_graphics(&quot;images/painting_stages.png&quot;) Figure 3.3: Stages through which the car body passes during the painting process The quality department is responsible for carrying out audits at the end of certain stages of the process, in which they determine the number of impurities found in the different areas of the car body. These audits bear the name of the stage and are shown below as well as a brief description of what happens in the process. KTL Audit - Cathodic electrodeposition process (Kathodische Tauchlackierung KTL) Filler Audi - In this stage, the primer is applied to the entire car body, a primer and filler that guarantees the adherence of the final paint layer. Sandind Audit - Although it is not a layer, it is a very important process, since it serves as a containment, that is, the possible impurities that adhered to the car body in the previous layers, at this stage is when they can be sanded from the surface both on the outside as well as inside. Detailed Audit - When the car body leaves the paint booths, it goes through the Curing Oven and the Cooling Zone, to finally go to the Detailing area, in which a tactile and visual detection of the impurities that it may present will be carried out and so on, be able to remove them, here you can sand, clean and polish the surface. The objective of these Audits is to maintain a lower rate of impurities, as well as to supervise that those impurities are not found in the most important areas of a car body, which are: the hood and the awning, since they are considered the parts in which the client puts its attention. For this project we will focus on the best-selling model, “Model A” produced between 2019-2020 as well as on the impurity called “fiber”, in the detailing stage, in Figure 3.4 there are some examples of the impurity “fiber” observed in the car body. The purpose of this project is therefore to determine and evaluate three acceptance sampling plans for this process, in which the quality of an item, in this case the car body, is based on the number of observed impurities. As there is a corrective process for every car body after an impurity is detected, it is stated that a defective unit is that with more than 13 impurities. Thus, those car bodies which have 13 or less impurities are considered as non-defective. knitr::include_graphics(&quot;images/impurity_fiber.png&quot;) Figure 3.4: Examples of the impurity “fiber” seen in the car body 3.3 Three scenarios (design) evaluation We start by defining the type of sampling plan that will be implemented. As we have a dichotomous situation, that is, only two classes of outcomes, we will design a single sampling plan by attributes. The data we will work with was obtained from measurements over a period of 11 weeks. 318 car bodies were analyzed, and the number of fibers (impurities) observed were recorded. The sample was drawn randomly from the production line and units were considered to have been produced under similar conditions. Thus, it can be considered that the sample is representative of the entire lot. For the purposes of this project, we will not design a sampling scheme nor a sampling system, but a sampling plan, as we will determine the sample size that must be used and the acceptance criteria utilizing a specific method. The selected method is the one published by Cameron (1952) because we want the values of AQL and LQL to be met as best as possible and because it is known that this method provides a good approximation to the binomial distribution. For designing the plans, we first need to specify the percentage values of AQL an LQL with its corresponding probability of acceptance, \\(1-\\alpha\\) and \\(\\beta\\), respectively. We have a sample of size \\(n\\) with two possible values: defective or non-defective, therefore, we know that the number of defective car bodies follow a binomial distribution. In statistical notation, let \\(X\\) represent the number of defective car bodies in the lot, then \\(X\\sim Bin(n,p)\\), were \\(p\\) (the proportion of defectives) is unknown. According to Navidi (2019), the proportion of defectives can be estimated using the sample proportion \\(\\hat{p}\\): \\[\\hat{p} = \\frac{X}{n}\\] Where \\(X\\) are the observed number of defectives and \\(n\\) the sample size, hence: X &lt;- 19 n &lt;- 318 p_hat &lt;- X/n sigma_p_hat &lt;- sqrt((p_hat*(1-p_hat))/(n)) \\[\\hat{p} = \\frac{19}{318} = 0.0597\\] For this value to be useful we compute its uncertainty using: \\[\\sigma_{\\hat{p}} = \\sqrt{\\frac{p(1-p)}{n}}\\] Since \\(p\\) is unknown, we substitute \\(p\\) for \\(\\hat{p}\\) and we find that: \\[\\sigma_{\\hat{p}} = 0.0133\\] We will use this value as a reference for determining AQL and LQL values. Now, we can create a table with the required information for implementing Cameron’s Method for designing each sampling plan. #Data for plan A planA_AQL &lt;- 6 planA_LQL &lt;- 10 planA_alpha &lt;- 0.05 planA_beta &lt;- 0.1 #Data for plan B planB_AQL &lt;- 4 planB_LQL &lt;- 10 planB_alpha &lt;- 0.05 planB_beta &lt;- 0.01 #Data for plan C planC_AQL &lt;- 2.5 planC_LQL &lt;- 10 planC_alpha &lt;- 0.01 planC_beta &lt;- 0.05 variable &lt;- c(&quot;$AQL (\\\\%)$&quot;, &quot;$LQL (\\\\%)$&quot;, &quot;$\\\\alpha$&quot;, &quot;$\\\\beta$&quot;) plan_a &lt;- c(planA_AQL, planA_LQL, planA_alpha, planA_beta) plan_b &lt;- c(planB_AQL, planB_LQL, planB_alpha, planB_beta) plan_c &lt;- c(planC_AQL, planC_LQL, planC_alpha, planC_beta) tabla_AQL_LQL_values &lt;- data.frame(variable, plan_a, plan_b, plan_c) colnames(tabla_AQL_LQL_values) &lt;- c(&quot;$\\\\textbf{Variable}$&quot;, &quot;$\\\\textbf{Plan A}$&quot;, &quot;$\\\\textbf{Plan B}$&quot;, &quot;$\\\\textbf{Plan C}$&quot;) knitr::kable(tabla_AQL_LQL_values, align = &quot;c&quot;, caption = &quot;AQL and LQL values&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 3.2: AQL and LQL values \\(\\textbf{Variable}\\) \\(\\textbf{Plan A}\\) \\(\\textbf{Plan B}\\) \\(\\textbf{Plan C}\\) \\(AQL (\\%)\\) 6.00 4.00 2.50 \\(LQL (\\%)\\) 10.00 10.00 10.00 \\(\\alpha\\) 0.05 0.05 0.01 \\(\\beta\\) 0.10 0.01 0.05 Next, the following steps should be performed for each plan: 1. We convert the percentages into proportions using the following expressions: \\[ \\begin{align*} &amp;p_1 = \\frac{AQL}{100}&amp;&amp; p_2 = \\frac{LQL}{100} \\end{align*} \\] Then, we compute the following ratio: \\[R_c = \\frac{p_1}{p_2}\\] With the Cameron’s Tables, using the established values of \\(\\alpha\\) and \\(\\beta\\), and the obtained value for \\(R_c\\), one can determine a value \\(R\\), which is the closest possible value of \\(R_c\\) available in the Cameron’s Table. Then, the acceptance number \\(c\\) and the value \\(np_1\\) can be determined; the latter quantity can be used to find the sample size \\((n=\\frac{np_1}{p_1})\\). knitr::include_graphics(&quot;images/cameron_table.png&quot;) Figure 3.5: Cameron’s table used to obtain \\(R\\), \\(c\\), and \\(np_1\\) Using the Cameron’s Tables 3.5 available in Gutierrez Pulido and Vara Salazar (2013), the following information is obtained: #Results for plan A planA_p1 &lt;- planA_AQL/100 planA_p2 &lt;- planA_LQL/100 planA_Rc &lt;- planA_p2/planA_p1 planA_R &lt;- 1.79 planA_c &lt;- 25 planA_np &lt;- 18.21 planA_n &lt;- planA_np/planA_p1 #Results for plan B planB_p1 &lt;- planB_AQL/100 planB_p2 &lt;- planB_LQL/100 planB_Rc &lt;- planB_p2/planB_p1 planB_R &lt;- 2.45 planB_c &lt;- 18 planB_np &lt;- 12.44 planB_n &lt;- planB_np/planB_p1 #Results for plan C planC_p1 &lt;- planC_AQL/100 planC_p2 &lt;- planC_LQL/100 planC_Rc &lt;- planC_p2/planC_p1 planC_R &lt;- 3.8 planC_c &lt;- 9 planC_np &lt;- 4.13 planC_n &lt;- planC_np/planC_p1 variable &lt;- c(&quot;$p_1$&quot;, &quot;$p_2$&quot;, &quot;$R_c$&quot;, &quot;$R$&quot;, &quot;$c$&quot;, &quot;$np_1$&quot;, &quot;$n$&quot;) plan_a &lt;- c(specify_decimal(planA_p1, 4), specify_decimal(planA_p2, 4), specify_decimal(planA_Rc, 4), specify_decimal(planA_R, 4), specify_decimal(planA_c, 4), specify_decimal(planA_np, 4), specify_decimal(planA_n, 4)) plan_b &lt;- c(specify_decimal(planB_p1, 4), specify_decimal(planB_p2, 4), specify_decimal(planB_Rc, 4), specify_decimal(planB_R, 4), specify_decimal(planB_c, 4), specify_decimal(planB_np, 4), specify_decimal(planB_n, 4)) plan_c &lt;- c(specify_decimal(planC_p1, 4), specify_decimal(planC_p2, 4), specify_decimal(planC_Rc, 4), specify_decimal(planC_R, 4), specify_decimal(planC_c, 4), specify_decimal(planC_np, 4), specify_decimal(planC_n, 4)) cameron_table_plans &lt;- data.frame(variable, plan_a, plan_b, plan_c) colnames(cameron_table_plans) &lt;- c(&quot;$\\\\textbf{Variable}$&quot;, &quot;$\\\\textbf{Plan A}$&quot;, &quot;$\\\\textbf{Plan B}$&quot;, &quot;$\\\\textbf{Plan C}$&quot;) knitr::kable(cameron_table_plans, align = &quot;c&quot;, caption = &quot;Information extracted from the Cameron&#39;s Table for each sampling plan design&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 3.3: Information extracted from the Cameron’s Table for each sampling plan design \\(\\textbf{Variable}\\) \\(\\textbf{Plan A}\\) \\(\\textbf{Plan B}\\) \\(\\textbf{Plan C}\\) \\(p_1\\) 0.0600 0.0400 0.0250 \\(p_2\\) 0.1000 0.1000 0.1000 \\(R_c\\) 1.6667 2.5000 4.0000 \\(R\\) 1.7900 2.4500 3.8000 \\(c\\) 25.0000 18.0000 9.0000 \\(np_1\\) 18.2100 12.4400 4.1300 \\(n\\) 303.5000 311.0000 165.2000 Therefore, the three sampling plans can be summarized as follows: plan &lt;- c(&quot;$\\\\textbf{A}$&quot;, &quot;$\\\\textbf{B}$&quot;, &quot;$\\\\textbf{C}$&quot;) acceptance_number &lt;- c(planA_c, planB_c, planC_c) sample_size &lt;- c(ceiling(planA_n), ceiling(planB_n), ceiling(planC_n)) tabla_sampling_plans_summary &lt;- data.frame(plan, acceptance_number, sample_size) colnames(tabla_sampling_plans_summary) &lt;- c(&quot;$\\\\textbf{Plan}$&quot;, &quot;$\\\\textbf{Acceptance number (c)}$&quot;, &quot;$\\\\textbf{Sample size (n)}$&quot;) knitr::kable(tabla_sampling_plans_summary, align = &quot;c&quot;, caption = &quot;Sampling plans designed using the Cameron&#39;s Method&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 3.4: Sampling plans designed using the Cameron’s Method \\(\\textbf{Plan}\\) \\(\\textbf{Acceptance number (c)}\\) \\(\\textbf{Sample size (n)}\\) \\(\\textbf{A}\\) 25 304 \\(\\textbf{B}\\) 18 311 \\(\\textbf{C}\\) 9 166 So, for example, plan A requires that a sample of size 304 is drawn from the lot and if less than or equal to 25 defectives are found the lot is accepted, otherwise the lot is rejected. The next step should be to analyze these designs and to determine which one of them complies with the established values. As it was previously stated, the appropriate tool for this task is the OC curve. 3.4 Sampling procedure, producer and consumer risk, relation to type 1 error and power of a test Before constructing the OC curve, we must determine what type of curve fits with our data and what will be the appropriate probability distribution to estimate the acceptance probability. As our sample was drawn from a large batch, we will construct a type B curve. Furthermore, as our sampling plan is by attributes, then, according to Table 3.1, the Binomial distribution should be used. The first step for plotting the OC curve is to establish arbitrary values of the proportion of defectives \\(p\\). Then, for each value of \\(p\\), the probability of acceptance is estimated using the binomial distribution. The following table is obtained: p &lt;- seq(0.0, 0.150, by = 0.002) n &lt;- length(p) p_a &lt;- vector(&quot;numeric&quot;, n) p_b &lt;- vector(&quot;numeric&quot;, n) p_c &lt;- vector(&quot;numeric&quot;, n) for (i in 1:n) { p_a[i] = pbinom(planA_c, ceiling(planA_n), p[i]) p_b[i] = pbinom(planB_c, ceiling(planB_n), p[i]) p_c[i] = pbinom(planC_c, ceiling(planC_n), p[i]) } acceptance_probability_table &lt;- data.frame(p, specify_decimal(p_a, 4), specify_decimal(p_b, 4), specify_decimal(p_c, 4)) colnames(acceptance_probability_table) &lt;- c(&quot;$\\\\boldsymbol{p}$&quot;, &quot;$\\\\boldsymbol{P_A}$&quot;, &quot;$\\\\boldsymbol{P_B}$&quot;, &quot;$\\\\boldsymbol{P_C}$&quot;) knitr::kable(acceptance_probability_table, align = &quot;c&quot;, caption = &quot;Probability of acceptance for several proportions of defective for each sampling plan&quot;)%&gt;% kable_styling(position = &quot;center&quot;, full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;800px&quot;, fixed_thead = T, extra_css = &quot;margin-left: auto; margin-right: auto; margin-bottom: 25px;&quot;) Table 3.5: Probability of acceptance for several proportions of defective for each sampling plan \\(\\boldsymbol{p}\\) \\(\\boldsymbol{P_A}\\) \\(\\boldsymbol{P_B}\\) \\(\\boldsymbol{P_C}\\) 0.000 1.0000 1.0000 1.0000 0.002 1.0000 1.0000 1.0000 0.004 1.0000 1.0000 1.0000 0.006 1.0000 1.0000 1.0000 0.008 1.0000 1.0000 1.0000 0.010 1.0000 1.0000 1.0000 0.012 1.0000 1.0000 1.0000 0.014 1.0000 1.0000 0.9999 0.016 1.0000 1.0000 0.9996 0.018 1.0000 1.0000 0.9991 0.020 1.0000 1.0000 0.9980 0.022 1.0000 0.9999 0.9960 0.024 1.0000 0.9998 0.9928 0.026 1.0000 0.9994 0.9879 0.028 1.0000 0.9986 0.9808 0.030 1.0000 0.9969 0.9710 0.032 1.0000 0.9940 0.9581 0.034 1.0000 0.9891 0.9417 0.036 0.9999 0.9813 0.9215 0.038 0.9999 0.9698 0.8974 0.040 0.9997 0.9536 0.8694 0.042 0.9994 0.9320 0.8377 0.044 0.9989 0.9043 0.8026 0.046 0.9980 0.8702 0.7645 0.048 0.9965 0.8298 0.7238 0.050 0.9941 0.7835 0.6811 0.052 0.9905 0.7321 0.6371 0.054 0.9852 0.6766 0.5923 0.056 0.9778 0.6183 0.5474 0.058 0.9679 0.5586 0.5028 0.060 0.9548 0.4988 0.4592 0.062 0.9381 0.4403 0.4169 0.064 0.9175 0.3842 0.3764 0.066 0.8926 0.3314 0.3380 0.068 0.8633 0.2826 0.3018 0.070 0.8297 0.2383 0.2681 0.072 0.7920 0.1988 0.2369 0.074 0.7504 0.1641 0.2082 0.076 0.7057 0.1340 0.1822 0.078 0.6583 0.1084 0.1586 0.080 0.6092 0.0867 0.1375 0.082 0.5589 0.0688 0.1186 0.084 0.5085 0.0540 0.1018 0.086 0.4587 0.0420 0.0871 0.088 0.4102 0.0324 0.0741 0.090 0.3636 0.0248 0.0629 0.092 0.3196 0.0188 0.0531 0.094 0.2785 0.0141 0.0447 0.096 0.2406 0.0105 0.0374 0.098 0.2061 0.0078 0.0313 0.100 0.1751 0.0057 0.0260 0.102 0.1475 0.0042 0.0216 0.104 0.1233 0.0030 0.0178 0.106 0.1022 0.0022 0.0147 0.108 0.0840 0.0015 0.0120 0.110 0.0686 0.0011 0.0098 0.112 0.0555 0.0008 0.0080 0.114 0.0446 0.0005 0.0065 0.116 0.0356 0.0004 0.0053 0.118 0.0282 0.0003 0.0043 0.120 0.0222 0.0002 0.0034 0.122 0.0173 0.0001 0.0028 0.124 0.0134 0.0001 0.0022 0.126 0.0103 0.0001 0.0018 0.128 0.0079 0.0000 0.0014 0.130 0.0060 0.0000 0.0011 0.132 0.0045 0.0000 0.0009 0.134 0.0034 0.0000 0.0007 0.136 0.0025 0.0000 0.0006 0.138 0.0019 0.0000 0.0004 0.140 0.0014 0.0000 0.0003 0.142 0.0010 0.0000 0.0003 0.144 0.0007 0.0000 0.0002 0.146 0.0005 0.0000 0.0002 0.148 0.0004 0.0000 0.0001 0.150 0.0003 0.0000 0.0001 Next, the OC curve is built using data in Table 3.5. plot(p, p_a, type = &quot;l&quot;, xlab = &quot;Proportion of defectives&quot;, ylab = &quot;Probability of acceptance&quot;, main = &quot;OC Curve&quot;, col = &quot;red&quot;, lwd = 5) lines(p, p_b, col = &quot;green&quot;, lwd = 5) lines(p, p_c, col = &quot;blue&quot;, lwd = 5) #To add a legend legend(&quot;topright&quot;, legend=c(paste(&quot;Plan A: n = &quot;, ceiling(planA_n), &quot;; c = &quot;, planA_c, collapse = &quot;&quot;), paste(&quot;Plan B: n = &quot;, ceiling(planB_n), &quot;; c = &quot;, planB_c, collapse = &quot;&quot;), paste(&quot;Plan C: n = &quot;, ceiling(planC_n), &quot;; c = &quot;, planC_c, collapse = &quot;&quot;)), col=c(&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;), lty=1, lwd = 5, cex=0.8, text.font = 4, bg = &#39;lightblue&#39;) Figure 3.6: OC curve for the three designed plans Then we calculate the producer’s and consumer’s risk, and respectively, utilizing the binomial distribution: \\[X_A\\sim Bin(304, p)\\] \\[X_B\\sim Bin(311, p)\\] \\[X_C\\sim Bin(166, p)\\] The probability \\(p\\) in the previous expressions is the one corresponding to the respective value of AQL (for \\(1 - \\alpha\\)) and LQL (for \\(\\beta\\)). The results are summarized in the next table: #Plan A planA_1_alpha &lt;- pbinom(planA_c, ceiling(planA_n), planA_p1) planA_alpha &lt;- 1 - planA_1_alpha planA_beta &lt;- pbinom(planA_c, ceiling(planA_n), planA_p2) #Plan B planB_1_alpha &lt;- pbinom(planB_c, ceiling(planB_n), planB_p1) planB_alpha &lt;- 1 - planB_1_alpha planB_beta &lt;- pbinom(planB_c, ceiling(planB_n), planB_p2) #Plan C planC_1_alpha &lt;- pbinom(planC_c, ceiling(planC_n), planC_p1) planC_alpha &lt;- 1 - planC_1_alpha planC_beta &lt;- pbinom(planC_c, ceiling(planC_n), planC_p2) risk &lt;- c(&quot;$1-\\\\alpha$&quot;, &quot;$\\\\alpha$&quot;, &quot;$\\\\beta$&quot;) planA &lt;- c(specify_decimal(planA_1_alpha, 4), specify_decimal(planA_alpha, 4), specify_decimal(planA_beta, 4)) planB &lt;- c(specify_decimal(planB_1_alpha, 4), specify_decimal(planB_alpha, 4), specify_decimal(planB_beta, 4)) planC &lt;- c(specify_decimal(planC_1_alpha, 4), specify_decimal(planC_alpha, 4), specify_decimal(planC_beta, 4)) producer_consumer_risk_table &lt;- data.frame(risk, planA, planB, planC) colnames(producer_consumer_risk_table) &lt;- c(&quot;$\\\\textbf{Risk}$&quot;, &quot;$\\\\textbf{Plan A}$&quot;, &quot;$\\\\textbf{Plan B}$&quot;, &quot;$\\\\textbf{Plan C}$&quot;) knitr::kable(producer_consumer_risk_table, align = &quot;c&quot;, caption = &quot;Producer&#39;s and consumer&#39;s risk&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 3.6: Producer’s and consumer’s risk \\(\\textbf{Risk}\\) \\(\\textbf{Plan A}\\) \\(\\textbf{Plan B}\\) \\(\\textbf{Plan C}\\) \\(1-\\alpha\\) 0.9548 0.9536 0.9906 \\(\\alpha\\) 0.0452 0.0464 0.0094 \\(\\beta\\) 0.1751 0.0057 0.0260 It is observed that for plan A the producer’s risk is below the limit; however, the consumer’s risk is greater than what was established in the plan design. For plans B and C, both the producer’s and consumer’s risk are within the defined limits. The next figures show the AQL and LQL with their respective probability of acceptance, \\(1 - \\alpha\\) and \\(\\beta\\), respectively for each sampling plan based on the OC curve model shown in Figure 3.1. library(latex2exp) plot(p, p_a, type = &quot;l&quot;, xlab = &quot;Proportion of defectives&quot;, ylab = &quot;Probability of acceptance&quot;, main = &quot;Plan A&quot;, col = &quot;red&quot;, lwd = 5) #AQL # X0, X1 #Y0, Y1 #Vertical lines(c(planA_p1, planA_p1), c(0, planA_1_alpha), col = &quot;green&quot;, lwd = 5) #Horizontal lines(c(0, planA_p1), c(planA_1_alpha, planA_1_alpha), col = &quot;green&quot;, lwd = 5) #LQL #Vertical lines(c(planA_p2, planA_p2), c(0, planA_beta), col = &quot;blue&quot;, lwd = 5) #Horizontal lines(c(0, planA_p2), c(planA_beta, planA_beta), col = &quot;blue&quot;, lwd = 5) #To add a legend legend(&quot;topright&quot;, legend=c(paste(&quot;Plan A: n = &quot;, ceiling(planA_n), &quot;; c = &quot;, planA_c, collapse = &quot;&quot;), TeX(sprintf(r&#39;($AQL (p_1) = %s ; 1 - \\alpha = %s$)&#39;, specify_decimal(planA_p1, 4), specify_decimal(planA_1_alpha, 4))), TeX(sprintf(r&#39;($LQL (p_2) = %s ; \\beta = %s$)&#39;, specify_decimal(planA_p2, 4), specify_decimal(planA_beta, 4)))), col=c(&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;), lty=1, lwd = 5, cex=0.8, text.font = 4, bg = &#39;lightblue&#39;) Figure 3.7: OC curve for Plan A with the values of AQL and LQL and their corresponding probability of acceptance plot(p, p_b, type = &quot;l&quot;, xlab = &quot;Proportion of defectives&quot;, ylab = &quot;Probability of acceptance&quot;, main = &quot;Plan B&quot;, col = &quot;red&quot;, lwd = 5) #AQL # X0, X1 #Y0, Y1 #Vertical lines(c(planB_p1, planB_p1), c(0, planB_1_alpha), col = &quot;green&quot;, lwd = 5) #Horizontal lines(c(0, planB_p1), c(planB_1_alpha, planB_1_alpha), col = &quot;green&quot;, lwd = 5) #LQL #Vertical lines(c(planB_p2, planB_p2), c(0, planB_beta), col = &quot;blue&quot;, lwd = 5) #Horizontal lines(c(0, planB_p2), c(planB_beta, planB_beta), col = &quot;blue&quot;, lwd = 5) #To add a legend legend(&quot;topright&quot;, legend=c(paste(&quot;Plan B: n = &quot;, ceiling(planB_n), &quot;; c = &quot;, planB_c, collapse = &quot;&quot;), TeX(sprintf(r&#39;($AQL (p_1) = %s ; 1 - \\alpha = %s$)&#39;, specify_decimal(planB_p1, 4), specify_decimal(planB_1_alpha, 4))), TeX(sprintf(r&#39;($LQL (p_2) = %s ; \\beta = %s$)&#39;, specify_decimal(planB_p2, 4), specify_decimal(planB_beta, 4)))), col=c(&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;), lty=1, lwd = 5, cex=0.8, text.font = 4, bg = &#39;lightblue&#39;) Figure 3.8: OC curve for Plan B with the values of AQL and LQL and their corresponding probability of acceptance plot(p, p_c, type = &quot;l&quot;, xlab = &quot;Proportion of defectives&quot;, ylab = &quot;Probability of acceptance&quot;, main = &quot;Plan C&quot;, col = &quot;red&quot;, lwd = 5) #AQL # X0, X1 #Y0, Y1 #Vertical lines(c(planC_p1, planC_p1), c(0, planC_1_alpha), col = &quot;green&quot;, lwd = 5) #Horizontal lines(c(0, planC_p1), c(planC_1_alpha, planC_1_alpha), col = &quot;green&quot;, lwd = 5) #LQL #Vertical lines(c(planC_p2, planC_p2), c(0, planC_beta), col = &quot;blue&quot;, lwd = 5) #Horizontal lines(c(0, planC_p2), c(planC_beta, planC_beta), col = &quot;blue&quot;, lwd = 5) #To add a legend legend(&quot;topright&quot;, legend=c(paste(&quot;Plan C: n = &quot;, ceiling(planC_n), &quot;; c = &quot;, planC_c, collapse = &quot;&quot;), TeX(sprintf(r&#39;($AQL (p_1) = %s ; 1 - \\alpha = %s$)&#39;, specify_decimal(planC_p1, 4), specify_decimal(planC_1_alpha, 4))), TeX(sprintf(r&#39;($LQL (p_2) = %s ; \\beta = %s$)&#39;, specify_decimal(planC_p2, 4), specify_decimal(planC_beta, 4)))), col=c(&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;), lty=1, lwd = 5, cex=0.8, text.font = 4, bg = &#39;lightblue&#39;) Figure 3.9: OC curve for Plan C with the values of AQL and LQL and their corresponding probability of acceptance As it was mentioned before, a sampling plan provides a high probability of accepting a “good” lot plus a small probability of accepting a lot considered as “bad”. Notwithstanding, as shown in Table 3.6, there is a chance for accepting a bad lot and rejecting a good lot. We can relate these concepts to type I error and the power of a test. It is known that a type I error occurs when a null hypothesis is rejected when it is true (Navidi 2019). In acceptance sampling, a type I error can occur when a satisfactory quality lot is rejected. The probability of a type I error to be manifested is equal to the producer’s risk, \\(\\alpha\\). The power of a test can be defined as the event when a null hypothesis is rejected when it is false (Navidi 2019). Therefore, in accordance with the previous paragraph, the power of test in acceptance sampling can be related to the event in which a lot is rejected when it is in fact non-acceptable quality. In this sense, the probability of this event is given by \\(1 - \\beta\\). This statement is consistent with the definition of type II error. The probability of type II error is \\(1 - Power\\); this means that the probability of not rejecting a lot with unsatisfactory quality is equal to \\(\\beta\\). 3.5 Present a numerical example After analyzing the three designed plans with the OC curve and their corresponding producer’s and consumer’s risk, it is concluded that Plan C is the most suitable. Plan A does not meet the consumer’s risk limit and Plan B, although shows a good performance, requires a larger sample size. Therefore, for plan C: It guarantees that batches with a percentage of defective units less than or equal to \\(2.5\\%\\) (AQL) will be easily accepted (\\(1 - \\alpha = 99.06\\%\\)). As this percentage increases, it will be less and less likely that the corresponding batches will be accepted. In particular, if a lot has a percentage of \\(10\\%\\) defectives, then it will only have a \\(2.60\\%\\) (\\(\\beta\\)) chance of being accepted. References "],["myth-busters-1.html", "4 Myth busters 1 4.1 Problem description and variables to measure 4.2 Objective 4.3 Data collection procedure that involves a randomization process 4.4 Measurement system implemented 4.5 Noise factors 4.6 Statistical methods used 4.7 Assumptions 4.8 Experimental restrictions 4.9 Data collection 4.10 Descriptive analysis 4.11 Individual sample estimation of parameters and confidence intervals 4.12 Assumptions validation 4.13 Analysis of the experiment 4.14 Statistical conclusion 4.15 Practical conclusion", " 4 Myth busters 1 Myth busters 1, where measurements are qualitative (e.g., pass/fail). Select a myth you would like to check where two groups are involved. For instance, one group can be a control group, and the other can be a treatment group. Describe the problem and variables to measure. Objective. Determine a data collection procedure that involves a randomization process. Describe the measurement system implemented. Determine possible noise factors. Statistical methods used. Assumptions. Experimental restrictions. Data collection. Descriptive analysis. Individual sample estimation of parameters and confidence intervals. Assumptions validation. Analysis of the experiment (two sample comparisons). Hypothesis used. Significance level. Calculations. Statistical conclusion. Practical conclusion. 4.1 Problem description and variables to measure The article “¿Cuántos libros se leen en México al año?” of the digital newspaper “El Economista” is stated that: “Every Mexican reads an average of one book every three months. In Mexico, 3.8 books are read annually per person. Women are the ones who read the most books in Mexico, 5 out of 10 women read at least one book annually, while 4 out of 10 men read at least one book a year.” (García 2018) Based on the previous information, the following question arises: in Mexico, do women read more than men annually? The results published by “El Economista”, indicate that, indeed, Mexican women have the tendency to read more than Mexican men. Notwithstanding, a hypothesis test might be useful for determining, with greater certainty, if this statement is true. For performing the hypothesis test, we will measure the number of books read by an individual during a year, considering the gender; then we will determine a specific criterion to designate under what conditions someone is considered as a reader; finally, by carrying out a test of the difference between two proportions a conclusion might be reached. 4.2 Objective The objective of this “experiment” is to perform a hypothesis test for determining if Mexican Women read more than Mexican men considering that a reader in Mexico reads an average of 4 books a year. 4.3 Data collection procedure that involves a randomization process Data will be collected by performing surveys. As a concrete sampling frame is not available, to randomize the data collection procedure, the survey was applied throughout different means: social media, e-mail and approaching people face-to-face. The diversity of recruiting methods was devised for reaching different types of people. Furthermore, as there were many people involved in the data collection process a greater variety of people was reached since the population to which each member of the team has access varies considerably. 4.4 Measurement system implemented The tool to collect data was surveys, these surveys were applied randomly to people of different: age, academical status and gender. The questions of the survey are shown below: Gender Male Female Maximum educational level Basic level Medium level Medium superior level Superior level How many books do you read per year? None 1 2 3 4 5 or more How many books have you read in this year 2022? None 1 2 3 4 5 or more What is the literary genre you read most often? Poetry Theater Narrative Assay Paper This survey was used as the measurement system. Of course, the most important questions are 1 and 3, which are the information we are looking for. However, questions like number 2 help to evaluate the variety of people surveyed. Besides, questions 4 and 5 help to confirm if people’s answers in questions 1 and 3 are true. A “reader” was determined by applying the following criterion: people that read 4 or more books in one year is considered as a reader. In terms of the binomial distribution, people who read 4 or more books has the attribute of “1” (a reader), and others have the attribute of “0” (not a reader). In this sense, the proportion of “reading people” can be obtained for each genre. 4.5 Noise factors The most plausible noise factor is people lying when answering the questions. Although some questions in the survey were introduced for helping to detect people lying (by identifying inconsistencies in the answers) the veracity of the answers depends entirely on the respondents. Another possible noise factor is that the surveyed people does not represents the Mexican population entirely. This noise factor was detected because the respondents were also classified according to their level of studies. Table 4.1 and Figure 4.1 shows what was obtained: total_responses &lt;- 75 edlev_res &lt;- c(58, 15, 2, 0) educational_level &lt;- c(&quot;Superior level&quot;, &quot;Mid superior level&quot;, &quot;Medium level&quot;, &quot;Basic level&quot;) edlev_responses &lt;- edlev_res edlev_percentages &lt;- specify_decimal((edlev_res/total_responses)*100, 2) tabla_max_educational_levels &lt;- data.frame(educational_level, edlev_responses, edlev_percentages) colnames(tabla_max_educational_levels) &lt;- c(&quot;Educational level&quot;, &quot;Number of respondents&quot;, &quot;Percentage (%)&quot;) knitr::kable(tabla_max_educational_levels, align = &quot;c&quot;, caption = &quot;Maximum educational level of the respondents&quot;)%&gt;% kable_styling(full_width = F)%&gt;% column_spec(1, bold = T)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 4.1: Maximum educational level of the respondents Educational level Number of respondents Percentage (%) Superior level 58 77.33 Mid superior level 15 20.00 Medium level 2 2.67 Basic level 0 0.00 barplot_eduLevels &lt;- barplot(tabla_max_educational_levels[,2], names.arg = tabla_max_educational_levels[,1], main = &quot;Highest educational level of the respondents&quot;, xlab = &quot;Educational level&quot;, ylab = &quot;Number of people&quot;, col = &quot;green&quot;, ylim = c(min(tabla_max_educational_levels[,2]) - 2, max(tabla_max_educational_levels[,2]) + 2)) grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = &quot;gray&quot;) barplot(tabla_max_educational_levels[,2], names.arg = tabla_max_educational_levels[,1], main = &quot;Highest educational level of the respondents&quot;, xlab = &quot;Educational level&quot;, ylab = &quot;Number of people&quot;, col = &quot;green&quot;, ylim = c(min(tabla_max_educational_levels[,2]) - 2, max(tabla_max_educational_levels[,2]) + 2), add = T) text(barplot_eduLevels, c(tabla_max_educational_levels[1,2] - 1.5, tabla_max_educational_levels[2,2] - 1.5, tabla_max_educational_levels[3,2] + 1.5, tabla_max_educational_levels[4,2] + 1.5), labels = tabla_max_educational_levels[,2]) Figure 4.1: Maximum educational level of the respondents The above information shows that most people surveyed has superior education. This allows to infer that this sample does not represent entirely the Mexican population because INEGI reports that currently the average educational level of Mexico is between medium and medium superior level (INEGI 2020), which is not reflected in the sample. 4.6 Statistical methods used It was pointed out that the number of people considered as a reader has a binomial distribution for both men and women, where the \\(n\\) parameter denotes the number of surveyed people for each group and the parameter \\(p\\) represents the probability of finding someone (in each group) that is considered as a reader. For the estimation of the parameter \\(p\\) for each group and its respective confidence interval, rather than the traditional method, the Agresti-Coull interval was computed thanks to the recommendations that W. Navidi suggested in his book (Navidi 2019). On the other hand, for performing the hypothesis test for the difference between two proportions, a \\(z-test\\) was carried out as it was expected to find at least 10 successes and 10 failures in each of the samples. Therefore, for finding the \\(P-value\\) of the test, the area under the normal curve was utilized. 4.7 Assumptions First, we will assume that the surveyed people represent a simple random sample of the Mexican population. Plus, we will consider that the obtained answers are true. Since we will perform a hypothesis test for the difference between two proportions, we will assume that the random variables measured for both samples (men and women) are independent. Besides, we will assume that there are at least 10 successes and 10 failures in each sample to perform the test. 4.8 Experimental restrictions The population that was analyzed is the population that the team members had access to. As shown above, this sample of the Mexican population is restricted to, for the most part, people with superior educational level; therefore, the experiment is restricted to this portion of the population. Another experimental restriction is related to the program that was used to apply the survey. It only allowed us to survey up to 100 people and the answers were obtained directly from the software. 4.9 Data collection The results of the surveys were collected and were summarized in Table 4.2, show below. annual_books_read &lt;- c(0, 1, 2, 3, 4, &quot;&gt;=5&quot;, &quot;TOTAL&quot;) male &lt;- c(5, 6, 8, 6, 5, 6) male_w_total &lt;- append(male, sum(male)) female &lt;- c(2, 7, 10, 9, 5, 6) female_w_total &lt;- append(female, sum(female)) total &lt;- male_w_total + female_w_total tabla_survey_results &lt;- data.frame(annual_books_read, male_w_total, female_w_total, total) colnames(tabla_survey_results) &lt;- c(&quot;Annual books read&quot;, &quot;Male&quot;, &quot;Female&quot;, &quot;TOTAL&quot;) knitr::kable(tabla_survey_results, align = &quot;c&quot;, caption = &quot;Sample containing 75 surveyed people&quot;)%&gt;% kable_styling(full_width = F)%&gt;% column_spec(1, bold = T)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 4.2: Sample containing 75 surveyed people Annual books read Male Female TOTAL 0 5 2 7 1 6 7 13 2 8 10 18 3 6 9 15 4 5 5 10 &gt;=5 6 6 12 TOTAL 36 39 75 As we can see 75 surveys were collected for this project. Data was divided into two categories: Male and Female. Also, another two categories were made: Readers and Non-readers. Considering the purpose of this work, only the category Readers was used to make the descriptive analysis. 4.10 Descriptive analysis For performing the descriptive analysis, let the gender male be denoted by \\(X\\), and the gender female by the variable \\(Y\\). If we consider a success to find a person that is a “Reader”, both \\(X\\) and \\(Y\\) follow the Binomial distribution: \\[ \\begin{align*} X \\sim Bin(n_X, p_X) \\\\ Y \\sim Bin(n_Y, p_Y) \\end{align*} \\] The success probability \\(p\\) is estimated by the sample proportion, computed by dividing the number of successful events (in this case is the number of “Readers”) by the total number of events \\(n\\) (which for each gender is the total number of men and women). px &lt;- sum(tail(male, 2)) py &lt;- sum(tail(female, 2)) nx &lt;- tail(male_w_total, 1) ny &lt;- tail(female_w_total, 1) px_hat &lt;- px/nx py_hat &lt;- py/ny \\[ \\begin{align*} \\hat{p}_X = \\frac{11}{36} = 0.3056\\\\ \\hat{p}_Y = \\frac{11}{39} = 0.2821 \\end{align*} \\] To ensure that the proportion of readers people on each gender is correct we compute de proportion of non-readers and if we add the proportion of readers and non-readers, we must obtain the value of 1. px_not &lt;- sum(head(male, 4)) py_not &lt;- sum(head(female, 4)) px_hat_not &lt;- px_not/nx py_hat_not &lt;- py_not/ny \\[ \\begin{align*} 1 - \\hat{p}_X = \\frac{25}{36} = 0.6944\\\\ 1 - \\hat{p}_Y = \\frac{28}{39} = 0.7179 \\end{align*} \\] px_total &lt;- px_hat + px_hat_not py_total &lt;- py_hat + py_hat_not For \\(X\\): \\[0.3056 + 0.6944 = 1\\] For \\(Y\\): \\[0.2821 + 0.7179 = 1\\] We now compute some important quantities for each binomial random variable, all of them estimated using the sample proportion. Sample mean \\[ \\begin{gather*} \\mu_X = n_X \\hat{p}_X = (36)(0.3056) = 11\\\\ \\mu_Y = n_Y \\hat{p}_Y = (39)(0.2821) = 11\\\\ \\mu_X = 11\\mu_Y = \\mu_Y \\end{gather*} \\] Sample variance sample_variance_x &lt;- nx*px_hat*(1 - px_hat) sample_variance_y &lt;- ny*py_hat*(1 - py_hat) \\[ \\begin{gather*} \\sigma_X^2 = n_X \\hat{p}_X(1-\\hat{p}_X) = (36)(0.3056)(1 - 0.3056) \\\\ \\sigma_Y^2 = n_Y \\hat{p}_Y(1-\\hat{p}_Y) = (39)(0.2821)(1 - 0.2821) \\\\ \\sigma_X^2 = 7.6389 \\\\ \\sigma_Y^2 = 7.8974 \\end{gather*} \\] Sample standard deviation. Which is the square root of the sample variance. sample_stdDev_x &lt;- sqrt(sample_variance_x) sample_stdDev_y &lt;- sqrt(sample_variance_y) \\[ \\begin{gather*} \\sigma_X = \\sqrt{7.6389} \\\\ \\sigma_Y = \\sqrt{7.8974} \\\\ \\sigma_X = 2.7639 \\\\ \\sigma_Y = 2.8102 \\end{gather*} \\] 4.10.1 Graphical summaries We obtained a frequency graphic to know the number of men and women who read 4 or more books in one year, denominated as “Readers”, and the number of men and women who read three or less books in a year, denominated as “Non-Readers”. categories &lt;- c(&quot;Non-readers&quot;, &quot;Readers&quot;) male_frquencies &lt;- c(px_not, px) female_frequencies &lt;- c(py_not, py) tabla_reader_frequencies &lt;- data.frame(categories, male_frquencies, female_frequencies) colnames(tabla_reader_frequencies) &lt;- c(&quot;&quot;, &quot;Male&quot;, &quot;Female&quot;) knitr::kable(tabla_reader_frequencies, align = &quot;c&quot;, caption = &quot;Frequencies of readers and non-readers for each gender category&quot;)%&gt;% kable_styling(full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;100%&quot;, fixed_thead = T) Table 4.3: Frequencies of readers and non-readers for each gender category Male Female Non-readers 25 28 Readers 11 11 The information in Table 4.3 is represented in a bar graph in Figure 4.2. #Using ggplot2 library constructed grouped barplot #Create data set #Have 3 columns, one for x, one for y, and one for the legend (fill) read_clasifications_x &lt;- c(&quot;Non-readers&quot;, &quot;Non-readers&quot;, &quot;Readers&quot;, &quot;Readers&quot;) genders_l &lt;- c(&quot;Male&quot;, &quot;Female&quot;, &quot;Male&quot;, &quot;Female&quot;) num_readers_y &lt;- c(px_not, py_not, px, py) data_readers &lt;- data.frame(read_clasifications_x, genders_l, num_readers_y) #Plot the graph ggplot(data_readers, aes(fill=genders_l, y=num_readers_y, x=read_clasifications_x)) + geom_bar(position=&quot;dodge&quot;, stat=&quot;identity&quot;) + ggtitle(&quot;Frequencies of books read per group&quot;) + xlab(&quot;Clasifications&quot;) + ylab(&quot;Number of books read&quot;) + scale_fill_manual(&quot;&quot;, values = c(&quot;Male&quot; = &quot;green&quot;, &quot;Female&quot; = &quot;purple&quot;)) + theme(plot.title = element_text(hjust = 0.5)) Figure 4.2: Frequency of Readers and Non-readers for each gender 4.11 Individual sample estimation of parameters and confidence intervals As it was previously stated, the data follows a Binomial distribution. \\[ \\begin{align*} X \\sim Bin(n_X, p_X) \\\\ Y \\sim Bin(n_Y, p_Y) \\end{align*} \\] Since we already known the values of \\(n_X\\) and \\(n_Y\\), the parameters that must be estimated are the success probabilities \\(p_X\\) and \\(p_Y\\). For the estimation of these parameters, we will use the method suggested by W. Navidi (Navidi 2019) for finding confidence intervals for proportions: the Agresti-Coull interval. This method for constructing the confidence interval is appropriate for the Binomial distribution and it has no special requirements; furthermore, it applies for any sample size. We begin by defining the next quantities: \\[ \\begin{gather*} \\tilde{n} = n + 4 \\\\ \\tilde{p} = \\frac{X+2}{\\tilde{n}} \\end{gather*} \\] Therefore, for X and Y: nx_tilde &lt;- nx + 4 px_tilde &lt;- (px + 2)/nx_tilde ny_tilde &lt;- ny + 4 py_tilde &lt;- (py + 2)/ny_tilde \\[ \\begin{gather*} \\tilde{n} = 36 + 4 = 40\\\\ \\tilde{p} = \\frac{11+2}{40} = 0.3250 \\\\ \\tilde{n} = 39 + 4 = 43\\\\ \\tilde{p} = \\frac{11+2}{43} = 0.3023 \\end{gather*} \\] We will compute a confidence interval of the form: \\[\\tilde{p} + z_{\\alpha/2}\\sqrt{\\frac{\\tilde{p}(1-\\tilde{p})}{\\tilde{n}}}\\] alpha_ci &lt;- 0.05 alpha_2 &lt;- alpha_ci/2 z_alpha_2 &lt;- abs(qnorm(alpha_2)) Since we want a \\(95\\%\\) confidence interval, then \\(\\alpha=0.05\\) and \\(\\alpha/2=0.025\\). It can be found that the z-values that cut off the lower and upper tail of the normal distribution are \\(\\pm1.96\\). std_dev_x &lt;- sqrt((px_tilde*(1 - px_tilde))/(nx_tilde)) std_dev_y &lt;- sqrt((py_tilde*(1 - py_tilde))/(ny_tilde)) lower_CI_x &lt;- px_tilde - z_alpha_2*std_dev_x upper_CI_x &lt;- px_tilde + z_alpha_2*std_dev_x lower_CI_y &lt;- py_tilde - z_alpha_2*std_dev_y upper_CI_y &lt;- py_tilde + z_alpha_2*std_dev_y For \\(\\tilde{p}_X\\): \\[(0.1799,0.4701)\\] For \\(\\tilde{p}_Y\\): \\[(0.1651,0.4396)\\] 4.12 Assumptions validation After carrying out the surveys it was found that there are 11 “readers” for each genre (refer to Tables 4.2 and 4.3). Additionally, the number of readers is 25 for male and 28 for female. Hence, it is stated that the number of successes and failures is greater than 10 in each sample. In symbols: nxpx &lt;- nx*px_hat nx_1_px &lt;- nx*(1 - px_hat) nypy &lt;- ny*py_hat ny_1_py &lt;- ny*(1 - py_hat) \\[ \\begin{gather*} n_X p_X = (36)(0.3056) = 11 \\\\ n_X (1 - p_X) = (36)(1 - 0.3056) = 25 \\\\ \\\\ n_Y p_Y = (39)(0.2821) = 11 \\\\ n_Y (1 - p_Y) = (39)(1 - 0.2821) = 28 \\end{gather*} \\] 4.13 Analysis of the experiment We will perform a test for the difference between two proportions. We want to demonstrate that the proportion of readers for women is greater than the proportion of readers for men. 4.13.1 Hypothesis used \\[ \\begin{gather*} H_0: p_X - p_Y \\ge 0 \\\\ H1: p_X - p_Y &lt; 0 \\end{gather*} \\] We establish the alternate hypothesis based on the statement we want to demonstrate. 4.13.2 Significance level We determine to use the most common value of Alpha. \\[\\alpha = 0.05\\] 4.13.3 Calculations To perform the hypothesis test we must estimate \\(p_X\\) and \\(p_Y\\), we have already computed these values previously, so we have: \\[ \\begin{gather*} \\hat{p}_X = 0.3056 \\\\ \\hat{p}_Y = 0.2821 \\end{gather*} \\] Then we need to compute \\(\\hat{p}\\): p_hat = (px + py)/(nx + ny) \\[ \\begin{gather*} \\hat{p} = \\frac{X + Y}{n_X + n_Y} \\\\ \\hat{p} = \\frac{11 + 11}{36 + 39} = 0.2933\\\\ \\end{gather*} \\] Now we are ready to compute the test static, it is obtained by: up_frac &lt;- px_hat - py_hat p_1_p &lt;- p_hat*(1 - p_hat) rec_nx &lt;- 1/nx rec_ny &lt;- 1/ny low_frac &lt;- sqrt(p_1_p*(rec_nx + rec_ny)) z_score &lt;- up_frac/low_frac \\[z = \\frac{\\hat{p}_X - \\hat{p}_Y}{\\sqrt{\\hat{p} (1 - \\hat{p})(\\frac{1}{n_X}+\\frac{1}{n_Y})}}\\] It turns outs that \\(z = 0.2234\\). With the value of \\(z\\) we obtain the \\(P-value\\), knowing that the alternate hypothesis is of the form \\(H_1: p_X - p_Y &lt; 0\\), the \\(P-value\\) will be the area under the normal curve to the left of \\(z\\). p_value &lt;- pnorm(z_score) \\[P = 0.5884\\] The above can be verified using R built-in formulas as shown beneath. prop.test(x = c(px, py), n = c(nx, ny), alternative = &quot;less&quot;, conf.level = 1 - alpha_ci, correct = F) ## ## 2-sample test for equality of proportions without continuity correction ## ## data: c(px, py) out of c(nx, ny) ## X-squared = 0.049891, df = 1, p-value = 0.5884 ## alternative hypothesis: less ## 95 percent confidence interval: ## -1.0000000 0.1966947 ## sample estimates: ## prop 1 prop 2 ## 0.3055556 0.2820513 4.14 Statistical conclusion If \\(p \\le 0.05\\) we reject the null hypothesis \\(H_0\\), so there is not enough evidence to reject \\(H_0\\). 4.15 Practical conclusion Since \\(H_0\\) is not rejected; it cannot be concluded that the proportion of female readers is greater than the proportion of male readers. Instead, it can be concluded that it is plausible that the proportion of male readers is greater than the proportion of female readers. References "],["myth-busters-2.html", "5 Myth busters 2 5.1 Problem description and variables to measure 5.2 Objective 5.3 Data collection procedure that involves a randomization process 5.4 Measurement system implemented 5.5 Noise factors 5.6 Statistical methods used 5.7 Assumptions 5.8 Experimental restrictions 5.9 Data collection 5.10 Descriptive analysis 5.11 Individual sample estimation of parameters and confidence intervals 5.12 Assumptions validation 5.13 Analysis of the experiment (two sample comparisons) 5.14 Statistical conclusion 5.15 Practical conclusion", " 5 Myth busters 2 Myth busters 2, where measurements are quantitative (e.g., temperature, volume, etc.). Select a myth you would like to check where two groups are involved. For instance, one group can be a control group, and the other can be a treatment group. Describe the problem and variables to measure. Objective. Determine a data collection procedure that involves a randomization process. Describe the measurement system implemented. Determine possible noise factors. Statistical methods used. Assumptions. Experimental restrictions. Data collection. Descriptive analysis. Individual sample estimation of parameters and confidence intervals. Assumptions validation. Analysis of the experiment (two sample comparisons). Hypothesis used. Significance level. Calculations. Statistical conclusion. Practical conclusion. 5.1 Problem description and variables to measure The Tecnológico de Monterrey´s library is a popular spot for the students to get together to study and work on projects. However, a common problem found inside is that there is a lot of noise, usually generated by the students themselves. The 4th and 2th floor have the bigger areas to work in, and it is common knowledge that the 4th floor is less noisy than the 2nd, which raises the question Is the 2nd floor noisier than the 4th? To answer this question, a Hypothesis Test will be conducted, where the decibels in each floor will be measured, an average will be calculated, and then a statistical analysis will be developed to formulate a conclusion. 5.2 Objective To determine whether the 2nd floor of the library is noisier than the 4th floor. 5.3 Data collection procedure that involves a randomization process The data collection procedure consisted in taking measurements of the noise level in the library on the 2nd and 4th floor during random conditions. Neither the people in the floors nor the conditions of the library were previously defined, as these had to be random to avoid any bias in the sample data. 5.4 Measurement system implemented Both floors have a similar layout, and to take the measurements, 5 strategic parts were elected. In Figure 5.1, the layout for both floors can be seen, as well as the measurement points in each floor, marked as green “x”. The numbers in each one of them represent the order in which the measurements were taken. The red zones are the areas where most people conglomerate, as it can be seen, it is practically identical for both floors. The measurements were taken during 5 days, from Monday to Friday, during the same time frame, from 11:30 am to 12:00 pm. knitr::include_graphics(&quot;images/library_2nd_floor.png&quot;) knitr::include_graphics(&quot;images/library_4th_floor.png&quot;) Figure 5.1: 2nd floor (left) and 4th floor (right) of the library and measurement points Pictures from both the 2nd and 4th floor are shown in Figure 5.2. knitr::include_graphics(&quot;images/library_2nd_floor_picture.png&quot;) knitr::include_graphics(&quot;images/library_4th_floor_picture.png&quot;) Figure 5.2: Biggest work area in the 2nd floor (left) and 4th floor (right) To measure the noise level, an app called “Sound Meter” was used. It was chosen because it is one of the best rated apps from this type within the app store. The app takes continuous measurements in decibels, showing the maximum, average, and minimum values given an amount of time defined by the user, in this case, one minute. This can be seen in Figure 5.3. knitr::include_graphics(&quot;images/sound_meter.png&quot;) Figure 5.3: Example of measurements taken by the “Sound Meter” app 5.5 Noise factors To reduce the risk of bias in the process, the following considerations were taken. The measurements were taken: From the same smartphone In each point during one minute In the same points during the five week days In the same time range, from 11:30 am to 12 pm At least 2 meters away from the the closest person It was avoided to generate any type of vibrations that could affect the measurements, for example, smartphone notifications, table vibrations, etc. When it was suspected that there was interference, the measurement was taken again. 5.6 Statistical methods used Given that we are comparing the differences between two groups of data, the statistical method used is a Test with Paired Data, which means that we treat the differences between the two groups as just one sample. 5.7 Assumptions We are assuming that both populations follow normal distributions. 5.8 Experimental restrictions Because only one smartphone had to be used to take the measurements to avoid any bias between the microphones, the measurements were not taken at the same time, rather, they had a couple minutes of difference between each other. 5.9 Data collection The data collected is presented in Tables 5.1 and 5.2, where each individual measurement is shown. For each table, the data shows the decibels measured in each position in each day, divided in three sections, the minimum, maximum, and average values. floor_2_days &lt;- c(rep(&quot;Day 1 (23/05/2022)&quot;, 3), rep(&quot;Day 2 (24/05/2022)&quot;, 3), rep(&quot;Day 3 (25/05/2022)&quot;, 3), rep(&quot;Day 4 (26/05/2022)&quot;, 3), rep(&quot;Day 5 (27/05/2022)&quot;, 3)) floor_2_indices &lt;- rep(c(&quot;Min&quot;, &quot;Max&quot;, &quot;$\\\\textbf{Average}$&quot;), 5) floor_2_pos_1 &lt;- c(50, 64, 56, 45, 74, 55, 44, 62, 51, 53, 70, 53, 47, 71, 55) floor_2_pos_2 &lt;- c(52, 63, 56, 55, 66, 59, 53, 64, 57, 53, 64, 56, 52, 61, 55) floor_2_pos_3 &lt;- c(50, 71, 59, 50, 67, 58, 45, 67, 53, 49, 70, 59, 50, 64, 56) floor_2_pos_4 &lt;- c(54, 68, 62, 49, 73, 60, 49, 76, 57, 50, 78, 58, 50, 69, 60) floor_2_pos_5 &lt;- c(53, 68, 59, 49, 66, 55, 51, 68, 59, 48, 64, 55, 49, 61, 54) floor_2 &lt;- data.frame(floor_2_days, floor_2_indices, floor_2_pos_1, floor_2_pos_2, floor_2_pos_3, floor_2_pos_4, floor_2_pos_5) colnames(floor_2) = c(&quot;&quot;, &quot;&quot;, &quot;pos_1&quot;, &quot;pos_2&quot;, &quot;pos_3&quot;, &quot;pos_4&quot;, &quot;pos_5&quot;) floor_2_means &lt;- rowMeans(floor_2[3:7]) floor_2$Mean &lt;- floor_2_means floor_2%&gt;% kbl(align = &quot;c&quot;, caption = &quot;Data collected from the 2nd floor&quot;)%&gt;% kable_material(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot;), full_width = F)%&gt;% add_header_above(c(&quot;Days&quot;, &quot;Measurements (dB)&quot; = 7), background = &quot;#2E75B5&quot;, color = &quot;#FFFFFF&quot;)%&gt;% add_header_above(c(&quot;2nd floor&quot; = 8), background = &quot;#1E4379&quot;, color = &quot;#FFFFFF&quot;)%&gt;% row_spec(0, background = &quot;#9CC2E5&quot;)%&gt;% row_spec(seq(3, 15, by = 3), bold = T, background = &quot;#DEEAF6&quot;)%&gt;% column_spec(1, bold = T, background = &quot;#9CC2E5&quot;)%&gt;% column_spec(2, background = &quot;#DEEAF6&quot;)%&gt;% column_spec(8, background = &quot;#DEEAF6&quot;)%&gt;% collapse_rows()%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;800px&quot;, fixed_thead = T) Table 5.1: Data collected from the 2nd floor 2nd floor Days Measurements (dB) pos_1 pos_2 pos_3 pos_4 pos_5 Mean Day 1 (23/05/2022) Min 50 52 50 54 53 51.8 Max 64 63 71 68 68 66.8 \\(\\textbf{Average}\\) 56 56 59 62 59 58.4 Day 2 (24/05/2022) Min 45 55 50 49 49 49.6 Max 74 66 67 73 66 69.2 \\(\\textbf{Average}\\) 55 59 58 60 55 57.4 Day 3 (25/05/2022) Min 44 53 45 49 51 48.4 Max 62 64 67 76 68 67.4 \\(\\textbf{Average}\\) 51 57 53 57 59 55.4 Day 4 (26/05/2022) Min 53 53 49 50 48 50.6 Max 70 64 70 78 64 69.2 \\(\\textbf{Average}\\) 53 56 59 58 55 56.2 Day 5 (27/05/2022) Min 47 52 50 50 49 49.6 Max 71 61 64 69 61 65.2 \\(\\textbf{Average}\\) 55 55 56 60 54 56.0 floor_4_days &lt;- c(rep(&quot;Day 1 (23/05/2022)&quot;, 3), rep(&quot;Day 2 (24/05/2022)&quot;, 3), rep(&quot;Day 3 (25/05/2022)&quot;, 3), rep(&quot;Day 4 (26/05/2022)&quot;, 3), rep(&quot;Day 5 (27/05/2022)&quot;, 3)) floor_4_indices &lt;- rep(c(&quot;Min&quot;, &quot;Max&quot;, &quot;$\\\\textbf{Average}$&quot;), 5) floor_4_pos_1 &lt;- c(51, 73, 59, 57, 72, 64, 51, 64, 57, 51, 74, 59, 55, 80, 60) floor_4_pos_2 &lt;- c(57, 71, 63, 56, 73, 62, 53, 70, 61, 52, 72, 61, 55, 73, 62) floor_4_pos_3 &lt;- c(49, 65, 55, 47, 66, 53, 49, 64, 55, 53, 79, 59, 48, 64, 55) floor_4_pos_4 &lt;- c(41, 62, 49, 41, 64, 51, 40, 76, 48, 38, 62, 46, 42, 66, 50) floor_4_pos_5 &lt;- c(50, 66, 55, 45, 67, 50, 48, 63, 51, 46, 64, 50, 48, 63, 53) floor_4 &lt;- data.frame(floor_4_days, floor_4_indices, floor_4_pos_1, floor_4_pos_2, floor_4_pos_3, floor_4_pos_4, floor_4_pos_5) colnames(floor_4) = c(&quot;&quot;, &quot;&quot;, &quot;pos_1&quot;, &quot;pos_2&quot;, &quot;pos_3&quot;, &quot;pos_4&quot;, &quot;pos_5&quot;) floor_4_means &lt;- rowMeans(floor_4[3:7]) floor_4$Mean &lt;- floor_4_means floor_4%&gt;% kbl(align = &quot;c&quot;, caption = &quot;Data collected from the 4th floor&quot;)%&gt;% kable_material(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot;), full_width = F)%&gt;% add_header_above(c(&quot;Days&quot;, &quot;Measurements (dB)&quot; = 7), background = &quot;#C55A11&quot;, color = &quot;#FFFFFF&quot;)%&gt;% add_header_above(c(&quot;4th floor&quot; = 8), background = &quot;#833C0B&quot;, color = &quot;#FFFFFF&quot;)%&gt;% row_spec(0, background = &quot;#F4B083&quot;)%&gt;% row_spec(seq(3, 15, by = 3), bold = T, background = &quot;#FBE4D5&quot;)%&gt;% column_spec(1, bold = T, background = &quot;#F4B083&quot;)%&gt;% column_spec(2, background = &quot;#FBE4D5&quot;)%&gt;% column_spec(8, background = &quot;#FBE4D5&quot;)%&gt;% collapse_rows()%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;800px&quot;, fixed_thead = T) Table 5.2: Data collected from the 4th floor 4th floor Days Measurements (dB) pos_1 pos_2 pos_3 pos_4 pos_5 Mean Day 1 (23/05/2022) Min 51 57 49 41 50 49.6 Max 73 71 65 62 66 67.4 \\(\\textbf{Average}\\) 59 63 55 49 55 56.2 Day 2 (24/05/2022) Min 57 56 47 41 45 49.2 Max 72 73 66 64 67 68.4 \\(\\textbf{Average}\\) 64 62 53 51 50 56.0 Day 3 (25/05/2022) Min 51 53 49 40 48 48.2 Max 64 70 64 76 63 67.4 \\(\\textbf{Average}\\) 57 61 55 48 51 54.4 Day 4 (26/05/2022) Min 51 52 53 38 46 48.0 Max 74 72 79 62 64 70.2 \\(\\textbf{Average}\\) 59 61 59 46 50 55.0 Day 5 (27/05/2022) Min 55 55 48 42 48 49.6 Max 80 73 64 66 63 69.2 \\(\\textbf{Average}\\) 60 62 55 50 53 56.0 On the other hand, Table 5.3 shows only the average values of each day and each floor, followed by the difference between the two. The third column is the data that is going to be used in the Hypothesis Testing. #Mean mean_floor_2 &lt;- floor_2$Mean[seq(3, 15, by = 3)] mean_floor_4 &lt;- floor_4$Mean[seq(3, 15, by = 3)] mean_diff_floors &lt;- mean_floor_2 - mean_floor_4 mean_floors &lt;- data.frame(1:5, mean_floor_2, mean_floor_4, mean_diff_floors) colnames(mean_floors) = c(&quot;#&quot;, &quot;2nd floor&quot;, &quot;4th floor&quot;, &quot;Difference&quot;) mean_floors%&gt;% kbl(align = &quot;c&quot;, caption = &quot;Difference between the data measured&quot;)%&gt;% kable_material(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot;), full_width = F)%&gt;% add_header_above(c(&quot;Measurements&quot; = 4), background = &quot;#548135&quot;, color = &quot;#FFFFFF&quot;)%&gt;% scroll_box(width = &quot;100%&quot;) Table 5.3: Difference between the data measured Measurements # 2nd floor 4th floor Difference 1 58.4 56.2 2.2 2 57.4 56.0 1.4 3 55.4 54.4 1.0 4 56.2 55.0 1.2 5 56.0 56.0 0.0 5.10 Descriptive analysis At first glance, the data seems to indicate that the 2nd floor is slightly louder than the 4th. The highest difference is \\(2.2 dB\\) louder for the 2nd floor than the 4th, while the lowest is \\(0 dB\\). It is important to note that this difference is the average of the measurements, as the individual comparisons between each measurement point vary. Because the sample size is only 5, and the difference is not significant, a Hypothesis Testing must take place in order to formulate a conclusion. 5.11 Individual sample estimation of parameters and confidence intervals mean_mean_diff_floors &lt;- mean(mean_diff_floors) std_dev_mean_diff &lt;- sd(mean_diff_floors) n_days &lt;- length(mean_floor_2) doF &lt;- n_days - 1 alpha_diff &lt;- 0.05 alpha_diff_2 &lt;- alpha_diff/2 t_statistic &lt;- abs(qt(alpha_diff_2, doF)) \\[ \\begin{gather*} \\bar{D} = 1.1600 \\\\ s_D = 0.7925 \\\\ n = 5 \\\\ v = 5 - 1 = 4 \\\\ \\alpha = 0.05 \\\\ t_{n-1, \\alpha/2} = t_{4, 0.025} = 2.7764 \\end{gather*} \\] lower_CI_D &lt;- mean_mean_diff_floors - t_statistic*(std_dev_mean_diff/sqrt(n_days)) upper_CI_D &lt;- mean_mean_diff_floors + t_statistic*(std_dev_mean_diff/sqrt(n_days)) 5.11.1 Confidence Interval (\\(95\\%\\)) \\[ \\begin{gather*} \\bar{D} \\pm t_{n-1, \\alpha/2} \\frac{s_D}{\\sqrt{n}} \\\\ 1.1600 \\pm 2.7764 \\frac{0.7925}{\\sqrt{5}} \\\\ (0.1760, 2.1440) \\end{gather*} \\] 5.12 Assumptions validation To validate the assumption that the population is normally distributed, a bootstrap simulation was done by choosing 5 random values from the sample gathered and repeating the experiment 1000 times. Then, the mean of each simulated sample was graphed and the result is shown in Figure 5.4. As it can be seen, it shows that the data follows mostly a normal distribution, which validates the initial assumption. #Since we don&#39;t know the data distribution we will do bootstrapping (with replacement) #Boot library makes it easy to work with bootstrapping library(boot) #First we must create a function that will calculate the desired statistic from the bootstrapped data #In our case, we need the mean #The two required parameters for the function are the data (vector with the mean differences), and i is a randomly generated integer that goes from 1 to the size of the data vector samples_means &lt;- function(data, i) { #This will be repeated n times, where n is the size of the data vector #So val will be an n size vector that has randomly selected elements from data vector (sampling with repetition) val &lt;- data[i] #Calculate the mean sample_x_bar &lt;- mean(val) return(c(val, sample_x_bar)) } #boot handles all the re sampling with repetition using the above declared function #It recieves the data from which the items will be resampled, the function, and the number of times we want to repeat the process bootstrap_data &lt;- boot(mean_diff_floors,samples_means,R=1000) elements_numbers &lt;- 1:1000 simulated_data_1 &lt;- bootstrap_data$t[,1] simulated_data_2 &lt;- bootstrap_data$t[,2] simulated_data_3 &lt;- bootstrap_data$t[,3] simulated_data_4 &lt;- bootstrap_data$t[,4] simulated_data_5 &lt;- bootstrap_data$t[,5] simulated_mean &lt;- bootstrap_data$t[,6] table_titles &lt;- c(&quot;i&quot;, &quot;$D_1^*$&quot;, &quot;$D_2^*$&quot;, &quot;$D_3^*$&quot;, &quot;$D_4^*$&quot;, &quot;$D_5^*$&quot;, &quot;$\\\\bar{D}^*$&quot;) simulated_data_table &lt;- data.frame(elements_numbers, simulated_data_1, simulated_data_2, simulated_data_3, simulated_data_4, simulated_data_5, simulated_mean) colnames(simulated_data_table) &lt;- table_titles knitr::kable(simulated_data_table, align = &quot;c&quot;, caption = &quot;Simulated data table&quot;)%&gt;% kable_styling(position = &quot;center&quot;, full_width = F)%&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;800px&quot;, fixed_thead = T, extra_css = &quot;margin-left: auto; margin-right: auto;&quot;) Table 5.4: Simulated data table i \\(D_1^*\\) \\(D_2^*\\) \\(D_3^*\\) \\(D_4^*\\) \\(D_5^*\\) \\(\\bar{D}^*\\) 1 2.2 2.2 2.2 2.2 1.4 2.04 2 2.2 1.0 1.0 1.4 0.0 1.12 3 2.2 1.4 1.4 2.2 1.0 1.64 4 1.0 2.2 1.4 1.2 0.0 1.16 5 1.4 1.4 0.0 1.4 1.0 1.04 6 2.2 2.2 1.0 1.2 1.4 1.60 7 1.4 2.2 1.2 1.0 2.2 1.60 8 2.2 2.2 2.2 1.2 0.0 1.56 9 1.2 1.2 0.0 1.0 0.0 0.68 10 1.2 0.0 2.2 0.0 1.2 0.92 11 0.0 1.2 1.0 0.0 1.2 0.68 12 1.4 0.0 2.2 2.2 1.0 1.36 13 1.4 0.0 1.4 0.0 0.0 0.56 14 1.2 1.2 0.0 1.2 1.0 0.92 15 0.0 2.2 1.2 0.0 0.0 0.68 16 2.2 2.2 1.0 1.4 0.0 1.36 17 2.2 0.0 2.2 1.4 1.4 1.44 18 1.0 1.0 1.2 0.0 2.2 1.08 19 0.0 2.2 2.2 1.4 1.2 1.40 20 1.4 0.0 1.0 1.2 1.0 0.92 21 2.2 1.2 1.2 2.2 0.0 1.36 22 2.2 1.4 0.0 0.0 2.2 1.16 23 1.4 1.0 2.2 1.2 2.2 1.60 24 2.2 1.4 1.0 1.0 1.0 1.32 25 1.0 2.2 1.4 0.0 1.2 1.16 26 2.2 1.0 2.2 1.4 1.2 1.60 27 2.2 2.2 1.2 1.0 1.2 1.56 28 1.2 0.0 1.0 1.0 1.0 0.84 29 1.4 1.4 1.2 1.0 2.2 1.44 30 1.4 1.2 1.2 1.0 1.4 1.24 31 0.0 0.0 1.0 1.4 1.4 0.76 32 1.2 1.4 1.4 1.4 2.2 1.52 33 1.0 1.4 1.2 2.2 1.4 1.44 34 1.4 0.0 2.2 2.2 1.4 1.44 35 1.4 1.2 1.0 1.4 1.0 1.20 36 1.0 1.0 1.0 1.2 2.2 1.28 37 0.0 1.2 1.0 0.0 1.0 0.64 38 1.2 1.0 0.0 1.2 2.2 1.12 39 1.0 1.2 2.2 1.0 1.0 1.28 40 0.0 1.0 1.0 1.4 1.0 0.88 41 2.2 0.0 1.0 1.0 1.4 1.12 42 1.2 1.4 1.4 1.0 1.4 1.28 43 2.2 1.2 2.2 1.2 2.2 1.80 44 0.0 2.2 1.2 0.0 0.0 0.68 45 2.2 1.4 2.2 1.4 0.0 1.44 46 1.4 2.2 1.0 1.2 1.0 1.36 47 1.2 0.0 1.2 2.2 1.2 1.16 48 2.2 1.0 1.2 2.2 2.2 1.76 49 1.4 1.2 0.0 1.4 1.4 1.08 50 1.4 1.0 0.0 1.2 2.2 1.16 51 1.0 1.4 1.2 1.0 1.0 1.12 52 0.0 1.4 1.4 2.2 0.0 1.00 53 1.2 1.0 0.0 1.0 1.0 0.84 54 1.4 1.4 1.4 1.0 1.2 1.28 55 2.2 1.4 1.2 2.2 0.0 1.40 56 2.2 1.4 1.4 0.0 1.0 1.20 57 1.2 1.2 1.0 0.0 1.0 0.88 58 1.2 0.0 2.2 1.2 0.0 0.92 59 0.0 2.2 2.2 0.0 2.2 1.32 60 1.2 2.2 2.2 1.0 0.0 1.32 61 0.0 2.2 1.4 1.0 0.0 0.92 62 1.2 1.0 1.4 1.4 0.0 1.00 63 1.0 0.0 1.4 0.0 1.2 0.72 64 1.2 2.2 1.4 0.0 1.0 1.16 65 1.2 0.0 1.2 2.2 0.0 0.92 66 0.0 0.0 2.2 0.0 1.4 0.72 67 1.2 1.4 1.4 1.2 1.4 1.32 68 1.0 1.2 1.2 2.2 0.0 1.12 69 1.0 1.2 0.0 1.4 0.0 0.72 70 1.0 1.2 1.2 1.2 2.2 1.36 71 1.0 1.4 1.4 1.4 1.0 1.24 72 0.0 1.2 0.0 1.4 1.2 0.76 73 1.2 0.0 0.0 1.2 1.0 0.68 74 1.0 1.4 0.0 0.0 1.0 0.68 75 1.2 2.2 1.0 2.2 1.4 1.60 76 2.2 1.0 0.0 1.0 1.4 1.12 77 1.2 1.4 0.0 1.2 2.2 1.20 78 0.0 0.0 0.0 1.0 2.2 0.64 79 0.0 0.0 1.2 2.2 1.4 0.96 80 1.0 1.4 1.4 2.2 1.2 1.44 81 2.2 1.0 1.2 2.2 1.2 1.56 82 1.0 1.0 1.2 2.2 1.0 1.28 83 1.4 1.2 1.0 0.0 0.0 0.72 84 0.0 1.4 1.2 2.2 1.0 1.16 85 2.2 2.2 1.0 2.2 0.0 1.52 86 2.2 1.2 1.2 1.4 1.0 1.40 87 1.4 1.2 1.0 1.0 1.4 1.20 88 1.4 1.2 1.0 1.2 1.0 1.16 89 0.0 2.2 0.0 1.0 2.2 1.08 90 1.0 1.4 1.2 1.0 0.0 0.92 91 1.4 1.2 2.2 2.2 2.2 1.84 92 1.4 1.2 1.4 0.0 0.0 0.80 93 0.0 1.4 2.2 1.2 2.2 1.40 94 0.0 1.4 1.4 1.0 0.0 0.76 95 1.0 1.2 0.0 0.0 0.0 0.44 96 0.0 1.2 1.2 1.2 2.2 1.16 97 1.0 2.2 1.2 0.0 1.0 1.08 98 1.4 0.0 1.4 2.2 0.0 1.00 99 2.2 2.2 1.4 0.0 1.0 1.36 100 1.2 1.2 1.4 0.0 1.0 0.96 101 0.0 1.0 2.2 0.0 0.0 0.64 102 1.2 1.2 1.2 1.0 1.2 1.16 103 1.2 1.0 1.0 1.0 2.2 1.28 104 1.2 1.0 1.4 1.2 1.0 1.16 105 1.2 1.4 1.4 0.0 1.2 1.04 106 1.4 1.2 1.4 1.2 1.4 1.32 107 1.0 1.2 0.0 1.4 2.2 1.16 108 2.2 0.0 1.2 1.4 1.2 1.20 109 2.2 2.2 2.2 2.2 1.4 2.04 110 2.2 1.4 1.0 1.4 1.2 1.44 111 1.0 1.2 2.2 2.2 1.2 1.56 112 2.2 1.0 2.2 0.0 1.0 1.28 113 1.2 1.0 1.0 1.2 1.4 1.16 114 2.2 0.0 1.0 1.2 1.2 1.12 115 2.2 1.4 1.4 1.0 1.2 1.44 116 1.2 2.2 1.4 2.2 1.0 1.60 117 1.4 0.0 1.0 2.2 1.4 1.20 118 1.4 2.2 0.0 1.2 1.0 1.16 119 1.2 0.0 0.0 2.2 1.2 0.92 120 1.4 1.4 1.2 2.2 1.0 1.44 121 1.0 0.0 1.0 2.2 2.2 1.28 122 1.4 1.0 2.2 1.2 1.0 1.36 123 1.2 1.4 1.0 1.0 0.0 0.92 124 2.2 1.4 1.0 1.2 0.0 1.16 125 1.0 0.0 0.0 1.4 1.4 0.76 126 1.4 1.2 1.0 0.0 1.0 0.92 127 1.4 0.0 1.4 1.2 1.2 1.04 128 1.2 2.2 1.2 2.2 0.0 1.36 129 0.0 1.4 1.2 1.4 2.2 1.24 130 1.0 1.4 2.2 0.0 1.2 1.16 131 1.4 1.0 0.0 2.2 1.2 1.16 132 1.0 1.0 0.0 1.0 1.4 0.88 133 1.4 1.0 1.2 1.4 0.0 1.00 134 1.0 2.2 0.0 1.0 1.0 1.04 135 1.2 0.0 1.2 1.0 1.2 0.92 136 0.0 2.2 1.4 1.2 1.0 1.16 137 1.2 2.2 1.2 1.0 0.0 1.12 138 2.2 1.0 2.2 1.2 1.4 1.60 139 0.0 0.0 1.4 2.2 1.4 1.00 140 1.2 0.0 1.0 1.2 0.0 0.68 141 2.2 1.0 1.4 0.0 1.0 1.12 142 2.2 2.2 1.4 2.2 1.2 1.84 143 1.2 1.0 1.2 2.2 1.2 1.36 144 1.0 2.2 1.4 1.2 1.0 1.36 145 1.0 1.0 1.4 0.0 1.0 0.88 146 2.2 1.0 0.0 0.0 0.0 0.64 147 1.4 2.2 1.4 0.0 1.0 1.20 148 1.0 1.4 0.0 1.0 1.4 0.96 149 2.2 1.2 1.4 0.0 1.4 1.24 150 1.4 1.2 1.4 2.2 1.0 1.44 151 1.4 1.4 2.2 2.2 1.2 1.68 152 1.0 1.2 0.0 2.2 1.2 1.12 153 0.0 1.0 1.0 1.2 0.0 0.64 154 1.2 1.2 2.2 2.2 2.2 1.80 155 1.4 0.0 0.0 0.0 2.2 0.72 156 2.2 1.4 2.2 1.0 1.2 1.60 157 0.0 0.0 0.0 2.2 1.2 0.68 158 1.4 1.0 1.4 2.2 1.4 1.48 159 1.2 1.4 2.2 1.4 2.2 1.68 160 1.0 0.0 2.2 1.0 1.0 1.04 161 0.0 0.0 0.0 1.0 1.4 0.48 162 1.2 1.0 1.0 0.0 1.0 0.84 163 1.4 1.0 1.0 0.0 1.0 0.88 164 0.0 2.2 1.0 1.0 1.2 1.08 165 2.2 1.4 0.0 1.2 2.2 1.40 166 2.2 1.0 2.2 1.4 0.0 1.36 167 0.0 1.0 0.0 1.0 0.0 0.40 168 0.0 1.4 0.0 0.0 1.0 0.48 169 1.0 2.2 1.0 1.4 1.0 1.32 170 1.2 1.4 0.0 1.2 2.2 1.20 171 0.0 1.0 2.2 0.0 1.0 0.84 172 1.0 1.4 1.4 1.0 1.4 1.24 173 0.0 1.2 1.0 2.2 1.4 1.16 174 2.2 1.4 1.4 1.4 1.2 1.52 175 1.4 1.2 0.0 2.2 1.4 1.24 176 1.4 1.2 1.4 0.0 1.4 1.08 177 1.2 0.0 1.0 1.4 1.0 0.92 178 1.4 1.4 2.2 2.2 1.4 1.72 179 2.2 1.2 1.2 1.2 2.2 1.60 180 0.0 2.2 1.4 2.2 1.0 1.36 181 1.2 1.4 0.0 0.0 1.2 0.76 182 0.0 2.2 1.0 1.0 1.4 1.12 183 1.2 1.0 1.0 1.4 1.2 1.16 184 2.2 1.4 1.4 1.4 1.0 1.48 185 2.2 1.4 1.2 1.0 1.0 1.36 186 1.0 0.0 2.2 1.4 2.2 1.36 187 1.2 1.0 0.0 1.0 0.0 0.64 188 2.2 1.4 2.2 1.0 1.0 1.56 189 0.0 1.4 1.4 1.2 2.2 1.24 190 1.4 1.2 0.0 0.0 1.4 0.80 191 1.0 1.2 1.0 2.2 1.0 1.28 192 1.4 2.2 1.4 1.4 1.0 1.48 193 1.4 1.0 1.2 1.2 1.2 1.20 194 1.4 1.4 1.4 1.0 0.0 1.04 195 1.4 0.0 1.0 1.4 1.2 1.00 196 1.4 0.0 2.2 1.0 1.2 1.16 197 2.2 1.0 1.4 1.0 1.4 1.40 198 1.2 0.0 0.0 1.2 1.4 0.76 199 2.2 0.0 1.0 1.4 1.0 1.12 200 0.0 1.4 1.4 2.2 1.0 1.20 201 1.0 0.0 1.4 1.0 1.0 0.88 202 1.4 1.4 1.0 0.0 1.0 0.96 203 1.0 1.4 2.2 1.0 1.0 1.32 204 2.2 1.2 2.2 0.0 1.0 1.32 205 0.0 1.2 1.2 1.4 0.0 0.76 206 1.0 1.4 2.2 1.2 1.0 1.36 207 1.4 1.0 1.4 0.0 1.2 1.00 208 1.0 1.0 1.2 1.2 0.0 0.88 209 1.2 1.0 0.0 1.4 0.0 0.72 210 0.0 0.0 2.2 1.4 1.4 1.00 211 0.0 1.2 1.4 1.0 2.2 1.16 212 2.2 1.4 1.0 1.0 1.0 1.32 213 1.0 1.2 1.0 0.0 0.0 0.64 214 2.2 1.0 1.2 0.0 1.2 1.12 215 1.0 1.0 1.0 0.0 0.0 0.60 216 1.4 1.0 1.4 1.4 2.2 1.48 217 1.2 1.0 1.4 1.2 2.2 1.40 218 1.0 2.2 1.0 1.2 0.0 1.08 219 1.0 1.4 1.0 1.2 1.2 1.16 220 1.2 0.0 1.4 1.2 0.0 0.76 221 1.4 1.4 0.0 2.2 0.0 1.00 222 2.2 2.2 1.4 2.2 1.0 1.80 223 1.4 2.2 0.0 1.0 1.4 1.20 224 0.0 2.2 2.2 0.0 1.2 1.12 225 2.2 1.0 0.0 2.2 1.4 1.36 226 0.0 2.2 2.2 1.0 2.2 1.52 227 1.2 1.2 1.4 1.2 1.0 1.20 228 1.4 1.0 1.4 0.0 0.0 0.76 229 1.2 1.0 1.2 1.4 1.4 1.24 230 1.4 0.0 2.2 1.4 1.0 1.20 231 1.2 1.2 1.0 0.0 2.2 1.12 232 2.2 1.2 1.0 0.0 1.0 1.08 233 2.2 1.4 2.2 1.0 1.0 1.56 234 2.2 1.2 2.2 1.4 1.2 1.64 235 1.4 1.2 2.2 1.2 1.4 1.48 236 0.0 1.0 1.2 0.0 2.2 0.88 237 1.4 0.0 1.4 1.4 1.2 1.08 238 0.0 2.2 1.0 2.2 1.0 1.28 239 0.0 2.2 1.2 1.0 1.2 1.12 240 0.0 1.0 1.4 2.2 0.0 0.92 241 2.2 0.0 1.0 0.0 0.0 0.64 242 2.2 1.4 0.0 1.4 1.4 1.28 243 1.2 1.2 1.0 1.4 0.0 0.96 244 2.2 1.2 1.4 2.2 1.4 1.68 245 1.2 2.2 1.4 2.2 1.4 1.68 246 2.2 1.0 2.2 1.4 0.0 1.36 247 1.4 1.0 1.2 1.4 1.0 1.20 248 0.0 1.0 0.0 1.0 1.2 0.64 249 1.4 1.4 2.2 2.2 1.4 1.72 250 1.4 1.0 1.2 1.2 2.2 1.40 251 1.0 1.2 0.0 1.0 1.2 0.88 252 0.0 0.0 1.0 2.2 1.4 0.92 253 1.2 2.2 0.0 0.0 1.2 0.92 254 1.0 2.2 1.4 1.2 1.2 1.40 255 1.0 2.2 1.2 0.0 0.0 0.88 256 1.4 1.4 0.0 2.2 1.0 1.20 257 1.2 1.2 1.4 0.0 2.2 1.20 258 1.4 1.2 2.2 1.4 1.0 1.44 259 0.0 2.2 2.2 1.0 0.0 1.08 260 0.0 0.0 1.2 2.2 1.2 0.92 261 1.0 0.0 2.2 2.2 0.0 1.08 262 0.0 2.2 1.2 1.2 1.2 1.16 263 1.4 1.2 1.0 1.2 1.4 1.24 264 1.4 1.4 2.2 1.0 0.0 1.20 265 2.2 1.0 1.0 1.0 0.0 1.04 266 0.0 2.2 1.4 2.2 2.2 1.60 267 1.0 1.4 1.4 1.4 1.4 1.32 268 0.0 1.4 1.0 2.2 1.4 1.20 269 2.2 1.4 2.2 0.0 1.4 1.44 270 1.0 1.4 1.0 1.0 1.4 1.16 271 1.4 1.2 0.0 0.0 2.2 0.96 272 1.0 1.4 1.0 1.0 0.0 0.88 273 0.0 2.2 2.2 1.0 1.2 1.32 274 1.0 2.2 2.2 2.2 1.2 1.76 275 1.4 1.2 1.4 1.2 2.2 1.48 276 1.0 1.4 0.0 1.2 1.0 0.92 277 1.2 1.2 1.4 1.0 1.0 1.16 278 2.2 1.0 0.0 1.4 1.2 1.16 279 1.4 0.0 1.4 0.0 1.4 0.84 280 1.4 0.0 1.2 1.4 0.0 0.80 281 1.0 0.0 1.2 1.0 1.4 0.92 282 1.2 0.0 2.2 1.2 1.4 1.20 283 1.4 1.4 1.4 2.2 2.2 1.72 284 1.4 1.2 0.0 1.2 1.0 0.96 285 0.0 1.0 2.2 0.0 1.0 0.84 286 1.0 1.4 0.0 1.2 2.2 1.16 287 1.4 1.4 1.2 1.2 2.2 1.48 288 1.2 2.2 1.2 1.4 1.2 1.44 289 1.4 2.2 1.4 1.2 1.4 1.52 290 1.4 2.2 1.0 0.0 1.2 1.16 291 1.2 1.2 1.0 2.2 1.2 1.36 292 2.2 1.4 1.4 1.4 1.0 1.48 293 1.0 0.0 0.0 2.2 0.0 0.64 294 1.0 1.2 1.2 0.0 1.0 0.88 295 1.2 2.2 2.2 1.0 1.2 1.56 296 1.0 1.4 1.4 1.0 1.0 1.16 297 1.4 1.4 1.2 1.2 2.2 1.48 298 1.2 1.0 1.0 1.0 1.2 1.08 299 0.0 1.4 1.4 1.2 2.2 1.24 300 1.0 1.0 0.0 2.2 1.2 1.08 301 1.2 0.0 1.4 0.0 2.2 0.96 302 1.2 1.4 0.0 1.4 1.0 1.00 303 1.2 1.4 0.0 1.2 2.2 1.20 304 1.4 2.2 1.2 1.0 1.4 1.44 305 1.0 1.0 1.0 0.0 1.2 0.84 306 2.2 1.4 1.4 2.2 1.4 1.72 307 1.4 0.0 1.0 0.0 2.2 0.92 308 2.2 0.0 2.2 0.0 0.0 0.88 309 0.0 2.2 1.4 1.2 1.0 1.16 310 1.2 1.2 1.4 1.2 2.2 1.44 311 1.2 1.4 1.0 1.0 1.4 1.20 312 2.2 0.0 0.0 0.0 1.2 0.68 313 0.0 0.0 1.2 1.0 1.4 0.72 314 2.2 1.0 1.4 1.0 2.2 1.56 315 1.2 1.4 0.0 0.0 2.2 0.96 316 1.4 1.2 0.0 1.0 2.2 1.16 317 1.4 0.0 1.2 0.0 1.2 0.76 318 1.4 1.0 0.0 1.0 0.0 0.68 319 0.0 1.4 1.2 2.2 1.4 1.24 320 1.0 0.0 1.0 1.4 1.2 0.92 321 1.4 1.2 1.2 1.2 1.2 1.24 322 1.2 1.0 1.4 2.2 2.2 1.60 323 1.4 1.0 1.0 1.4 1.2 1.20 324 1.4 0.0 2.2 2.2 1.0 1.36 325 0.0 1.4 1.2 0.0 0.0 0.52 326 1.0 2.2 0.0 2.2 0.0 1.08 327 2.2 1.2 2.2 2.2 1.2 1.80 328 2.2 1.2 2.2 1.4 1.4 1.68 329 1.2 0.0 1.4 2.2 0.0 0.96 330 2.2 1.2 0.0 0.0 1.4 0.96 331 1.2 0.0 1.2 2.2 0.0 0.92 332 2.2 2.2 2.2 2.2 1.2 2.00 333 1.2 0.0 1.2 0.0 1.4 0.76 334 1.4 2.2 0.0 0.0 1.0 0.92 335 2.2 1.2 0.0 0.0 2.2 1.12 336 1.2 1.4 1.2 1.4 0.0 1.04 337 2.2 1.4 1.0 1.2 1.0 1.36 338 2.2 2.2 1.2 0.0 1.4 1.40 339 2.2 1.0 0.0 0.0 1.0 0.84 340 1.2 0.0 1.0 0.0 1.2 0.68 341 1.0 1.2 2.2 2.2 0.0 1.32 342 1.2 2.2 1.4 1.4 2.2 1.68 343 2.2 1.4 1.0 2.2 1.0 1.56 344 1.2 0.0 1.0 1.2 0.0 0.68 345 0.0 1.0 1.2 2.2 0.0 0.88 346 2.2 1.0 1.2 1.2 1.0 1.32 347 1.0 1.2 1.2 1.4 0.0 0.96 348 1.2 1.2 1.0 1.0 1.4 1.16 349 0.0 1.4 1.2 0.0 2.2 0.96 350 1.0 1.4 1.0 1.4 1.0 1.16 351 1.4 1.4 1.2 0.0 0.0 0.80 352 1.2 1.4 1.0 1.0 1.2 1.16 353 2.2 0.0 1.0 1.4 1.2 1.16 354 1.4 1.2 0.0 0.0 0.0 0.52 355 1.4 2.2 1.2 1.4 1.2 1.48 356 0.0 1.4 1.2 1.2 1.2 1.00 357 1.2 1.2 1.0 1.4 0.0 0.96 358 2.2 1.2 2.2 2.2 2.2 2.00 359 1.4 1.2 0.0 0.0 1.4 0.80 360 1.4 0.0 1.2 1.0 1.0 0.92 361 1.0 1.2 2.2 2.2 0.0 1.32 362 2.2 1.4 1.2 1.4 0.0 1.24 363 1.2 1.2 1.0 1.0 0.0 0.88 364 0.0 1.0 1.2 0.0 1.4 0.72 365 1.4 1.4 1.4 2.2 2.2 1.72 366 1.2 1.2 0.0 1.2 0.0 0.72 367 1.4 0.0 2.2 0.0 1.4 1.00 368 1.2 1.0 1.0 2.2 0.0 1.08 369 1.4 1.4 0.0 0.0 1.2 0.80 370 1.0 1.4 1.0 1.0 0.0 0.88 371 0.0 0.0 2.2 1.0 1.2 0.88 372 0.0 2.2 1.2 1.4 1.2 1.20 373 1.4 2.2 1.0 1.2 1.0 1.36 374 0.0 1.4 1.0 1.2 1.4 1.00 375 2.2 0.0 2.2 0.0 1.4 1.16 376 1.2 1.0 2.2 1.4 1.4 1.44 377 1.0 2.2 2.2 1.0 2.2 1.72 378 2.2 0.0 0.0 1.2 1.0 0.88 379 1.0 1.2 1.0 0.0 1.4 0.92 380 1.4 2.2 1.0 1.0 0.0 1.12 381 0.0 0.0 1.2 1.2 2.2 0.92 382 1.4 0.0 2.2 1.0 0.0 0.92 383 1.2 1.0 2.2 1.2 0.0 1.12 384 1.2 0.0 1.0 1.4 2.2 1.16 385 1.0 1.4 0.0 2.2 1.2 1.16 386 2.2 1.4 1.2 1.4 2.2 1.68 387 2.2 2.2 1.4 2.2 0.0 1.60 388 2.2 1.0 2.2 1.4 1.0 1.56 389 0.0 2.2 1.2 1.0 1.2 1.12 390 1.0 1.2 1.0 2.2 1.4 1.36 391 1.4 0.0 0.0 1.4 1.4 0.84 392 1.2 2.2 1.2 0.0 1.4 1.20 393 2.2 0.0 2.2 2.2 1.4 1.60 394 2.2 0.0 1.4 1.0 1.2 1.16 395 1.4 0.0 2.2 2.2 1.4 1.44 396 0.0 0.0 2.2 1.2 1.0 0.88 397 1.0 1.0 1.4 2.2 1.2 1.36 398 0.0 0.0 2.2 2.2 1.2 1.12 399 1.0 0.0 2.2 1.2 1.4 1.16 400 1.4 1.4 2.2 1.0 2.2 1.64 401 2.2 1.0 1.0 1.0 1.4 1.32 402 1.4 0.0 1.4 2.2 1.0 1.20 403 1.4 0.0 1.0 0.0 1.2 0.72 404 1.0 1.2 1.2 1.4 2.2 1.40 405 1.2 1.2 1.2 1.4 1.0 1.20 406 2.2 1.4 1.2 1.2 0.0 1.20 407 1.2 1.2 1.0 1.4 0.0 0.96 408 0.0 0.0 0.0 1.2 1.2 0.48 409 2.2 0.0 1.0 1.4 1.4 1.20 410 2.2 1.0 0.0 2.2 0.0 1.08 411 1.0 1.4 2.2 0.0 1.2 1.16 412 1.0 1.2 1.0 2.2 1.0 1.28 413 0.0 2.2 1.0 0.0 2.2 1.08 414 1.4 2.2 1.4 1.0 0.0 1.20 415 0.0 1.4 1.2 2.2 2.2 1.40 416 1.4 1.4 1.2 0.0 1.2 1.04 417 0.0 0.0 0.0 0.0 1.0 0.20 418 2.2 1.4 1.0 2.2 0.0 1.36 419 1.2 0.0 0.0 1.4 1.0 0.72 420 1.2 0.0 0.0 1.0 1.4 0.72 421 1.4 1.2 1.4 0.0 0.0 0.80 422 1.2 0.0 2.2 1.4 0.0 0.96 423 1.4 1.0 1.0 1.0 1.0 1.08 424 1.0 0.0 0.0 0.0 1.0 0.40 425 1.0 1.4 2.2 0.0 1.4 1.20 426 1.4 1.0 2.2 1.2 1.0 1.36 427 0.0 1.2 1.4 2.2 2.2 1.40 428 1.2 2.2 1.0 2.2 1.0 1.52 429 0.0 0.0 1.4 0.0 0.0 0.28 430 2.2 1.2 0.0 2.2 2.2 1.56 431 1.0 1.2 1.4 0.0 1.4 1.00 432 1.0 2.2 1.0 0.0 1.4 1.12 433 2.2 1.0 2.2 0.0 1.0 1.28 434 2.2 1.4 1.0 1.0 1.0 1.32 435 0.0 0.0 0.0 0.0 1.4 0.28 436 1.0 1.2 1.0 1.2 1.2 1.12 437 1.0 2.2 1.2 2.2 1.2 1.56 438 0.0 0.0 1.0 0.0 1.0 0.40 439 1.4 1.0 1.2 1.0 1.4 1.20 440 1.4 1.0 1.0 1.4 2.2 1.40 441 2.2 1.0 2.2 1.2 1.0 1.52 442 1.0 0.0 1.4 1.4 1.2 1.00 443 1.0 1.4 0.0 0.0 2.2 0.92 444 2.2 1.2 1.0 1.4 1.4 1.44 445 1.4 1.2 0.0 1.2 1.2 1.00 446 1.4 1.0 0.0 2.2 1.2 1.16 447 2.2 1.4 2.2 1.4 1.0 1.64 448 1.4 0.0 2.2 1.2 1.0 1.16 449 2.2 1.2 1.0 1.0 1.4 1.36 450 0.0 0.0 1.4 1.2 0.0 0.52 451 1.0 2.2 0.0 1.2 1.4 1.16 452 2.2 1.0 2.2 1.2 0.0 1.32 453 0.0 1.0 0.0 1.0 1.4 0.68 454 0.0 1.2 1.4 1.0 1.2 0.96 455 2.2 1.4 1.4 0.0 2.2 1.44 456 0.0 1.4 1.0 0.0 0.0 0.48 457 1.0 1.4 0.0 0.0 2.2 0.92 458 0.0 2.2 0.0 1.4 2.2 1.16 459 1.2 1.2 1.0 1.2 2.2 1.36 460 2.2 1.0 2.2 1.4 2.2 1.80 461 0.0 0.0 1.4 1.2 1.4 0.80 462 1.4 0.0 1.0 0.0 1.2 0.72 463 1.2 1.2 1.2 1.4 0.0 1.00 464 1.4 1.4 1.2 1.2 1.0 1.24 465 1.2 1.2 1.2 1.0 2.2 1.36 466 1.4 1.4 2.2 1.0 1.4 1.48 467 0.0 2.2 1.4 1.0 1.4 1.20 468 1.0 2.2 1.0 2.2 1.0 1.48 469 0.0 1.2 1.0 1.2 1.4 0.96 470 1.4 1.2 2.2 2.2 1.0 1.60 471 2.2 1.4 1.4 1.2 1.2 1.48 472 1.2 1.4 1.2 1.2 2.2 1.44 473 1.4 1.2 1.4 1.0 1.0 1.20 474 1.0 1.0 1.2 1.4 0.0 0.92 475 0.0 1.2 1.4 1.2 1.4 1.04 476 1.4 1.4 1.4 2.2 1.0 1.48 477 1.4 1.4 1.2 0.0 1.2 1.04 478 0.0 1.4 0.0 1.0 1.2 0.72 479 2.2 1.0 1.2 1.0 1.4 1.36 480 0.0 0.0 1.4 0.0 1.0 0.48 481 1.4 1.0 1.2 2.2 1.2 1.40 482 1.4 1.2 2.2 1.4 1.0 1.44 483 2.2 0.0 2.2 1.0 1.0 1.28 484 1.4 0.0 1.4 1.0 1.0 0.96 485 1.2 1.0 1.0 0.0 1.2 0.88 486 1.0 2.2 1.0 1.0 1.0 1.24 487 1.4 1.2 1.0 1.2 1.2 1.20 488 1.0 0.0 2.2 1.4 1.0 1.12 489 1.4 1.0 2.2 2.2 1.2 1.60 490 1.2 0.0 1.0 0.0 2.2 0.88 491 0.0 2.2 1.0 2.2 1.2 1.32 492 2.2 1.2 0.0 1.4 0.0 0.96 493 0.0 2.2 1.4 0.0 1.0 0.92 494 1.0 1.4 2.2 0.0 0.0 0.92 495 1.4 1.0 1.4 1.2 1.2 1.24 496 1.2 1.0 1.0 0.0 2.2 1.08 497 0.0 1.0 1.2 1.4 2.2 1.16 498 1.0 2.2 0.0 1.4 1.0 1.12 499 1.4 2.2 1.4 0.0 0.0 1.00 500 2.2 1.0 2.2 1.2 0.0 1.32 501 1.2 1.2 1.0 1.2 2.2 1.36 502 1.0 1.4 1.4 1.2 2.2 1.44 503 1.0 1.0 1.0 1.2 1.0 1.04 504 1.0 2.2 1.4 1.4 1.0 1.40 505 2.2 1.2 1.2 2.2 1.4 1.64 506 1.2 1.4 0.0 1.4 2.2 1.24 507 1.0 2.2 1.0 1.2 0.0 1.08 508 1.2 2.2 1.0 1.2 1.2 1.36 509 1.4 1.4 1.4 1.2 0.0 1.08 510 1.0 1.4 2.2 1.4 1.2 1.44 511 1.0 1.4 1.0 1.4 2.2 1.40 512 1.4 1.2 1.4 1.4 2.2 1.52 513 1.2 1.2 1.2 2.2 2.2 1.60 514 1.4 2.2 1.2 1.0 1.4 1.44 515 1.2 0.0 2.2 1.2 1.0 1.12 516 2.2 1.4 0.0 2.2 0.0 1.16 517 1.0 0.0 2.2 2.2 1.0 1.28 518 2.2 0.0 1.4 2.2 0.0 1.16 519 0.0 2.2 2.2 1.2 2.2 1.56 520 1.4 1.0 1.2 2.2 1.2 1.40 521 1.0 2.2 1.2 0.0 0.0 0.88 522 1.2 1.2 1.0 1.0 1.0 1.08 523 1.2 2.2 1.0 1.2 1.4 1.40 524 1.0 0.0 2.2 1.4 1.4 1.20 525 2.2 0.0 1.0 2.2 1.2 1.32 526 0.0 0.0 1.0 1.4 1.0 0.68 527 1.2 0.0 1.2 1.2 2.2 1.16 528 1.4 1.4 0.0 0.0 1.2 0.80 529 1.2 1.2 1.0 1.0 1.2 1.12 530 0.0 1.2 1.0 0.0 1.2 0.68 531 2.2 1.4 1.4 1.2 2.2 1.68 532 1.2 2.2 1.2 1.4 1.2 1.44 533 1.0 1.0 1.2 1.4 1.4 1.20 534 0.0 1.2 1.0 2.2 1.4 1.16 535 1.0 1.2 1.0 2.2 2.2 1.52 536 2.2 1.2 2.2 2.2 1.2 1.80 537 0.0 0.0 0.0 1.4 0.0 0.28 538 2.2 1.0 0.0 1.2 1.0 1.08 539 0.0 1.0 1.2 0.0 0.0 0.44 540 1.4 1.2 2.2 0.0 1.0 1.16 541 2.2 1.0 1.4 0.0 0.0 0.92 542 0.0 0.0 1.4 2.2 2.2 1.16 543 1.2 0.0 1.2 1.4 2.2 1.20 544 1.4 2.2 1.0 0.0 1.2 1.16 545 1.2 1.4 0.0 1.0 2.2 1.16 546 1.2 1.2 1.4 2.2 2.2 1.64 547 2.2 0.0 1.0 0.0 2.2 1.08 548 1.4 0.0 1.0 2.2 0.0 0.92 549 1.2 1.0 0.0 1.2 2.2 1.12 550 2.2 0.0 0.0 0.0 1.4 0.72 551 2.2 0.0 1.0 1.4 1.4 1.20 552 1.2 1.0 2.2 1.0 1.4 1.36 553 1.4 1.2 1.2 1.2 2.2 1.44 554 1.2 0.0 1.2 1.2 1.4 1.00 555 2.2 1.0 2.2 2.2 2.2 1.96 556 1.2 0.0 2.2 1.2 2.2 1.36 557 2.2 2.2 1.2 1.0 2.2 1.76 558 0.0 0.0 2.2 1.4 1.4 1.00 559 0.0 0.0 1.2 2.2 0.0 0.68 560 2.2 1.2 2.2 1.2 2.2 1.80 561 0.0 1.0 2.2 1.4 1.0 1.12 562 2.2 0.0 2.2 0.0 2.2 1.32 563 1.0 1.2 1.4 1.2 1.2 1.20 564 1.0 1.2 2.2 2.2 0.0 1.32 565 0.0 1.4 2.2 0.0 0.0 0.72 566 2.2 2.2 1.2 1.2 0.0 1.36 567 0.0 1.2 1.0 1.2 1.4 0.96 568 2.2 1.0 1.4 0.0 1.0 1.12 569 2.2 1.0 1.0 1.2 1.2 1.32 570 0.0 0.0 1.4 1.4 2.2 1.00 571 1.4 1.2 0.0 1.0 2.2 1.16 572 1.2 0.0 2.2 1.2 1.2 1.16 573 1.4 2.2 1.4 1.0 1.4 1.48 574 1.4 0.0 1.0 0.0 1.2 0.72 575 2.2 1.0 1.0 1.4 1.4 1.40 576 0.0 1.2 1.4 2.2 0.0 0.96 577 1.4 1.0 1.0 1.0 1.4 1.16 578 0.0 1.4 2.2 1.4 1.0 1.20 579 1.0 1.0 1.2 0.0 1.2 0.88 580 1.2 1.0 0.0 2.2 1.4 1.16 581 1.0 1.4 0.0 2.2 2.2 1.36 582 1.4 1.4 0.0 1.2 2.2 1.24 583 1.0 2.2 1.0 0.0 0.0 0.84 584 0.0 2.2 0.0 1.0 1.4 0.92 585 1.2 2.2 1.4 1.4 0.0 1.24 586 1.4 0.0 0.0 1.2 0.0 0.52 587 1.0 1.0 1.2 1.4 1.2 1.16 588 0.0 1.4 1.0 1.2 0.0 0.72 589 1.4 1.4 2.2 1.4 2.2 1.72 590 1.2 1.2 1.0 0.0 0.0 0.68 591 1.2 1.2 1.4 1.4 1.4 1.32 592 0.0 1.2 1.4 1.2 1.2 1.00 593 1.2 1.4 1.2 1.0 1.4 1.24 594 1.0 0.0 1.2 1.2 2.2 1.12 595 2.2 1.0 1.0 0.0 0.0 0.84 596 1.4 0.0 1.2 1.4 1.4 1.08 597 1.2 1.4 1.0 0.0 0.0 0.72 598 1.2 1.2 1.2 1.4 2.2 1.44 599 1.0 1.2 1.4 1.2 1.0 1.16 600 1.2 1.2 2.2 1.4 1.2 1.44 601 1.0 1.4 2.2 1.2 2.2 1.60 602 2.2 2.2 1.0 0.0 1.2 1.32 603 2.2 1.0 1.0 1.4 1.4 1.40 604 2.2 0.0 0.0 2.2 1.4 1.16 605 1.4 0.0 1.2 2.2 1.0 1.16 606 1.2 1.4 2.2 0.0 0.0 0.96 607 0.0 1.2 1.0 1.0 1.2 0.88 608 1.0 2.2 1.4 2.2 1.2 1.60 609 1.2 1.2 1.4 2.2 0.0 1.20 610 1.0 1.0 2.2 0.0 2.2 1.28 611 0.0 1.2 0.0 1.4 1.4 0.80 612 1.4 0.0 2.2 1.0 2.2 1.36 613 1.0 2.2 0.0 1.2 0.0 0.88 614 0.0 2.2 1.4 1.2 1.2 1.20 615 0.0 1.4 2.2 2.2 2.2 1.60 616 1.4 1.2 1.2 0.0 2.2 1.20 617 1.2 1.4 1.4 1.2 0.0 1.04 618 0.0 0.0 1.0 0.0 0.0 0.20 619 1.2 1.0 2.2 1.2 0.0 1.12 620 1.4 1.4 0.0 1.4 1.4 1.12 621 1.2 1.0 1.4 1.0 1.4 1.20 622 1.0 1.4 1.0 0.0 2.2 1.12 623 2.2 2.2 2.2 2.2 1.2 2.00 624 0.0 1.4 2.2 1.0 1.0 1.12 625 1.2 1.0 1.2 1.0 1.0 1.08 626 0.0 1.2 0.0 1.4 1.2 0.76 627 1.2 1.2 1.2 1.0 1.0 1.12 628 1.4 2.2 1.4 0.0 1.0 1.20 629 1.2 1.4 1.4 0.0 1.2 1.04 630 1.4 1.2 1.2 1.0 1.4 1.24 631 0.0 0.0 1.4 1.4 0.0 0.56 632 2.2 1.0 0.0 1.2 1.4 1.16 633 0.0 0.0 1.0 1.4 1.0 0.68 634 2.2 2.2 1.0 1.2 1.4 1.60 635 0.0 0.0 1.2 1.2 1.2 0.72 636 1.4 2.2 0.0 1.0 0.0 0.92 637 2.2 1.4 1.0 2.2 1.0 1.56 638 1.2 1.0 2.2 1.0 1.4 1.36 639 1.4 1.2 0.0 1.2 0.0 0.76 640 1.0 1.0 1.2 1.4 1.4 1.20 641 1.4 2.2 1.2 1.4 2.2 1.68 642 1.2 2.2 1.0 0.0 2.2 1.32 643 0.0 1.4 1.4 1.2 2.2 1.24 644 1.4 0.0 1.0 0.0 1.0 0.68 645 1.4 0.0 1.4 1.0 1.4 1.04 646 1.0 1.4 0.0 1.4 1.4 1.04 647 1.2 1.0 0.0 2.2 2.2 1.32 648 0.0 2.2 1.0 1.4 1.4 1.20 649 1.4 1.4 0.0 2.2 2.2 1.44 650 1.0 1.4 0.0 1.0 2.2 1.12 651 2.2 0.0 2.2 1.0 2.2 1.52 652 1.2 2.2 1.4 1.0 1.0 1.36 653 0.0 1.2 1.2 1.2 1.0 0.92 654 1.4 0.0 2.2 1.2 1.2 1.20 655 1.4 1.4 1.0 0.0 1.2 1.00 656 2.2 1.0 2.2 0.0 1.0 1.28 657 1.4 2.2 1.0 1.2 0.0 1.16 658 1.4 1.4 1.4 1.4 1.4 1.40 659 2.2 1.4 1.2 1.0 2.2 1.60 660 2.2 0.0 0.0 1.4 1.0 0.92 661 2.2 1.0 0.0 1.0 2.2 1.28 662 0.0 1.4 2.2 1.0 1.0 1.12 663 2.2 2.2 0.0 2.2 1.0 1.52 664 0.0 2.2 0.0 0.0 1.4 0.72 665 2.2 1.2 1.0 1.4 0.0 1.16 666 1.4 1.0 1.0 0.0 2.2 1.12 667 1.0 0.0 2.2 0.0 1.4 0.92 668 1.2 2.2 2.2 0.0 0.0 1.12 669 0.0 1.2 2.2 1.2 1.4 1.20 670 1.0 2.2 1.4 1.2 1.4 1.44 671 0.0 0.0 1.2 1.4 1.2 0.76 672 1.4 0.0 1.0 1.4 1.2 1.00 673 2.2 1.4 0.0 1.2 1.4 1.24 674 2.2 0.0 1.4 1.4 1.4 1.28 675 1.4 2.2 0.0 2.2 0.0 1.16 676 0.0 1.0 2.2 0.0 1.4 0.92 677 2.2 2.2 2.2 0.0 1.0 1.52 678 1.0 1.0 2.2 0.0 1.4 1.12 679 1.4 1.4 1.0 1.4 0.0 1.04 680 0.0 1.4 0.0 1.0 1.0 0.68 681 1.4 1.0 0.0 2.2 1.0 1.12 682 2.2 0.0 2.2 0.0 1.0 1.08 683 0.0 1.0 1.4 0.0 1.4 0.76 684 1.4 1.0 1.4 2.2 1.0 1.40 685 1.4 1.0 1.4 2.2 1.0 1.40 686 2.2 0.0 1.0 0.0 1.4 0.92 687 0.0 2.2 1.0 1.2 1.4 1.16 688 2.2 0.0 0.0 0.0 1.0 0.64 689 2.2 1.0 1.0 0.0 0.0 0.84 690 1.0 0.0 2.2 0.0 0.0 0.64 691 1.0 2.2 0.0 1.2 2.2 1.32 692 1.2 1.2 1.4 0.0 1.2 1.00 693 1.2 1.2 0.0 1.2 1.2 0.96 694 0.0 0.0 1.0 1.4 2.2 0.92 695 1.4 0.0 2.2 1.4 1.2 1.24 696 1.2 0.0 1.0 0.0 1.2 0.68 697 1.2 1.2 1.2 2.2 1.4 1.44 698 0.0 0.0 2.2 1.2 0.0 0.68 699 1.4 1.0 1.2 0.0 2.2 1.16 700 1.2 0.0 1.4 1.2 1.0 0.96 701 1.4 1.2 1.0 2.2 1.2 1.40 702 0.0 0.0 2.2 0.0 1.2 0.68 703 1.4 1.4 1.0 2.2 1.4 1.48 704 1.4 1.2 1.0 1.0 1.0 1.12 705 0.0 0.0 1.4 1.2 1.4 0.80 706 2.2 1.2 1.4 1.2 2.2 1.64 707 1.4 1.0 1.2 1.0 1.0 1.12 708 2.2 0.0 1.4 1.4 1.2 1.24 709 1.0 1.0 1.4 1.4 1.0 1.16 710 1.4 1.2 0.0 0.0 1.0 0.72 711 1.2 1.2 1.2 1.2 2.2 1.40 712 1.2 1.0 2.2 1.4 1.4 1.44 713 1.4 2.2 1.2 1.4 1.4 1.52 714 0.0 1.0 1.2 2.2 2.2 1.32 715 1.2 1.4 1.2 1.0 0.0 0.96 716 1.0 1.0 1.4 0.0 2.2 1.12 717 1.4 1.2 0.0 1.2 1.0 0.96 718 0.0 1.0 1.0 1.4 1.2 0.92 719 1.4 0.0 0.0 1.4 1.2 0.80 720 1.4 1.4 2.2 1.0 1.2 1.44 721 1.2 1.4 1.4 1.4 2.2 1.52 722 1.0 0.0 2.2 1.2 0.0 0.88 723 0.0 2.2 2.2 1.2 1.4 1.40 724 0.0 2.2 0.0 2.2 0.0 0.88 725 1.2 2.2 1.4 2.2 1.4 1.68 726 2.2 1.4 1.0 2.2 1.2 1.60 727 1.2 1.4 0.0 2.2 0.0 0.96 728 1.0 2.2 1.0 1.0 2.2 1.48 729 1.0 1.4 0.0 1.4 1.0 0.96 730 2.2 0.0 2.2 0.0 1.4 1.16 731 1.4 2.2 1.4 0.0 2.2 1.44 732 1.0 1.4 2.2 0.0 0.0 0.92 733 1.0 2.2 1.2 1.4 1.0 1.36 734 0.0 2.2 0.0 1.0 0.0 0.64 735 1.4 1.2 1.0 2.2 0.0 1.16 736 1.2 1.4 1.0 1.4 1.2 1.24 737 1.4 1.0 1.4 1.2 1.2 1.24 738 1.4 2.2 1.4 1.0 1.0 1.40 739 1.0 1.4 1.2 1.0 1.4 1.20 740 1.0 0.0 1.2 1.0 1.4 0.92 741 0.0 0.0 0.0 1.2 1.2 0.48 742 1.2 2.2 1.0 0.0 1.0 1.08 743 0.0 1.0 1.4 0.0 2.2 0.92 744 0.0 1.2 2.2 2.2 1.0 1.32 745 0.0 1.2 1.2 1.0 1.0 0.88 746 0.0 0.0 2.2 1.2 2.2 1.12 747 1.0 2.2 0.0 1.2 1.2 1.12 748 1.0 0.0 1.2 0.0 0.0 0.44 749 1.2 0.0 0.0 1.0 1.4 0.72 750 1.4 0.0 1.4 0.0 1.2 0.80 751 2.2 1.4 1.4 1.0 2.2 1.64 752 2.2 0.0 1.4 1.0 2.2 1.36 753 0.0 1.0 1.0 1.0 1.4 0.88 754 2.2 2.2 1.0 2.2 0.0 1.52 755 1.0 2.2 0.0 1.4 0.0 0.92 756 0.0 1.2 1.2 1.0 0.0 0.68 757 1.0 1.2 1.0 2.2 1.2 1.32 758 0.0 1.2 0.0 1.4 1.2 0.76 759 1.4 1.4 0.0 2.2 1.2 1.24 760 2.2 1.2 2.2 1.2 0.0 1.36 761 1.4 2.2 1.0 1.2 1.4 1.44 762 2.2 2.2 2.2 1.0 0.0 1.52 763 1.4 1.4 1.2 2.2 0.0 1.24 764 1.2 2.2 2.2 2.2 2.2 2.00 765 0.0 1.2 1.2 2.2 2.2 1.36 766 2.2 1.2 0.0 1.4 2.2 1.40 767 0.0 1.4 1.2 2.2 1.0 1.16 768 1.2 0.0 0.0 1.2 1.0 0.68 769 1.4 0.0 1.0 1.2 0.0 0.72 770 1.4 1.0 2.2 1.0 1.0 1.32 771 1.0 1.4 1.2 1.4 2.2 1.44 772 1.2 1.4 1.4 1.0 1.2 1.24 773 1.2 1.4 1.4 1.4 1.0 1.28 774 1.2 1.2 2.2 2.2 1.4 1.64 775 1.0 0.0 1.0 1.4 2.2 1.12 776 0.0 1.2 0.0 0.0 1.0 0.44 777 1.2 1.0 1.2 1.4 1.4 1.24 778 1.4 1.0 1.0 2.2 2.2 1.56 779 1.0 0.0 1.2 1.4 1.2 0.96 780 0.0 1.4 1.0 2.2 2.2 1.36 781 1.2 0.0 2.2 1.0 1.0 1.08 782 2.2 0.0 1.0 1.4 1.4 1.20 783 0.0 1.0 1.2 2.2 1.0 1.08 784 1.0 1.2 1.0 1.4 0.0 0.92 785 0.0 1.4 1.4 1.2 0.0 0.80 786 1.0 2.2 2.2 2.2 0.0 1.52 787 1.4 0.0 1.4 2.2 1.4 1.28 788 1.4 0.0 2.2 1.0 1.2 1.16 789 1.4 1.4 1.0 1.0 1.2 1.20 790 2.2 1.0 1.0 2.2 1.0 1.48 791 0.0 1.4 1.0 1.2 0.0 0.72 792 1.4 1.0 1.2 0.0 0.0 0.72 793 2.2 1.0 2.2 0.0 1.4 1.36 794 1.4 0.0 0.0 0.0 1.4 0.56 795 1.0 1.4 0.0 1.4 0.0 0.76 796 0.0 1.2 1.4 2.2 1.2 1.20 797 2.2 0.0 1.2 2.2 0.0 1.12 798 1.0 1.2 1.4 1.4 1.2 1.24 799 1.4 1.0 1.2 1.4 1.0 1.20 800 1.4 0.0 2.2 2.2 0.0 1.16 801 1.4 0.0 1.2 1.2 1.0 0.96 802 1.2 1.4 2.2 0.0 1.2 1.20 803 1.0 1.2 2.2 1.2 1.0 1.32 804 1.4 1.2 1.0 1.2 1.2 1.20 805 0.0 2.2 0.0 1.4 0.0 0.72 806 2.2 0.0 1.0 2.2 0.0 1.08 807 1.4 0.0 1.2 2.2 2.2 1.40 808 1.2 1.4 2.2 0.0 0.0 0.96 809 1.2 1.2 1.0 1.2 2.2 1.36 810 1.0 1.0 1.0 1.4 0.0 0.88 811 1.2 1.0 1.0 1.0 0.0 0.84 812 1.2 1.4 2.2 1.4 1.4 1.52 813 1.2 2.2 1.2 1.0 1.0 1.32 814 1.4 1.2 1.2 2.2 1.0 1.40 815 0.0 1.0 1.2 0.0 1.4 0.72 816 1.2 2.2 1.0 0.0 0.0 0.88 817 2.2 1.0 0.0 2.2 2.2 1.52 818 1.2 1.4 0.0 1.4 1.4 1.08 819 2.2 1.0 0.0 1.0 1.0 1.04 820 2.2 1.2 1.4 1.0 1.4 1.44 821 1.4 0.0 1.0 1.0 0.0 0.68 822 1.2 0.0 1.2 1.4 1.0 0.96 823 1.2 0.0 1.2 0.0 1.4 0.76 824 1.0 2.2 1.4 0.0 1.0 1.12 825 0.0 1.2 1.0 1.2 2.2 1.12 826 1.4 1.4 1.0 0.0 1.0 0.96 827 2.2 1.0 0.0 1.4 1.0 1.12 828 1.0 2.2 1.4 2.2 1.4 1.64 829 2.2 1.2 0.0 0.0 0.0 0.68 830 1.4 1.2 1.0 0.0 2.2 1.16 831 1.0 0.0 1.2 1.0 2.2 1.08 832 1.4 2.2 1.2 1.4 0.0 1.24 833 2.2 1.2 1.0 1.4 2.2 1.60 834 1.4 0.0 1.2 1.2 1.2 1.00 835 0.0 1.0 1.0 1.2 1.4 0.92 836 1.0 1.0 2.2 1.0 1.4 1.32 837 2.2 2.2 2.2 1.2 0.0 1.56 838 0.0 1.4 2.2 1.0 1.4 1.20 839 1.2 1.0 2.2 1.2 1.0 1.32 840 2.2 1.0 1.2 0.0 1.0 1.08 841 1.4 1.4 1.0 1.2 1.0 1.20 842 2.2 1.0 0.0 1.2 1.0 1.08 843 1.4 1.2 2.2 0.0 1.4 1.24 844 2.2 0.0 1.4 0.0 1.0 0.92 845 1.0 1.0 1.0 0.0 1.2 0.84 846 1.4 0.0 1.0 1.0 1.2 0.92 847 2.2 2.2 1.0 1.0 1.2 1.52 848 1.2 1.4 1.2 0.0 0.0 0.76 849 0.0 1.4 1.2 1.0 1.4 1.00 850 0.0 0.0 1.0 2.2 2.2 1.08 851 1.4 1.0 1.0 0.0 1.0 0.88 852 0.0 0.0 1.4 2.2 2.2 1.16 853 0.0 2.2 1.4 2.2 1.0 1.36 854 1.4 2.2 2.2 1.2 0.0 1.40 855 1.0 0.0 2.2 1.4 0.0 0.92 856 1.2 0.0 1.4 1.0 1.4 1.00 857 1.0 0.0 1.0 2.2 1.2 1.08 858 0.0 1.2 1.4 1.2 1.4 1.04 859 1.4 1.0 1.2 1.2 0.0 0.96 860 2.2 0.0 1.4 2.2 2.2 1.60 861 0.0 1.0 0.0 1.2 1.2 0.68 862 2.2 1.2 1.0 1.2 1.4 1.40 863 1.4 2.2 1.4 1.2 1.4 1.52 864 1.0 0.0 1.2 1.2 0.0 0.68 865 1.4 0.0 2.2 2.2 0.0 1.16 866 1.4 1.4 0.0 1.4 1.4 1.12 867 1.4 1.0 2.2 1.0 2.2 1.56 868 2.2 1.0 1.2 2.2 0.0 1.32 869 0.0 1.2 1.4 1.2 0.0 0.76 870 1.0 0.0 1.4 0.0 2.2 0.92 871 2.2 2.2 2.2 1.0 1.2 1.76 872 1.0 0.0 1.2 1.0 1.2 0.88 873 0.0 1.2 2.2 1.4 1.2 1.20 874 2.2 0.0 1.0 2.2 1.2 1.32 875 0.0 1.0 1.4 0.0 0.0 0.48 876 1.4 1.2 1.2 1.2 1.0 1.20 877 1.4 1.2 1.0 1.2 1.4 1.24 878 0.0 0.0 1.0 0.0 0.0 0.20 879 1.2 1.0 1.4 2.2 1.4 1.44 880 0.0 0.0 1.4 1.2 1.4 0.80 881 1.4 1.2 0.0 1.0 1.2 0.96 882 1.0 0.0 1.0 1.0 1.2 0.84 883 2.2 2.2 0.0 1.2 2.2 1.56 884 1.4 0.0 2.2 1.0 1.2 1.16 885 1.2 1.2 2.2 1.0 1.0 1.32 886 1.4 1.0 1.2 1.0 1.4 1.20 887 2.2 2.2 2.2 1.0 0.0 1.52 888 1.4 1.0 0.0 0.0 1.2 0.72 889 0.0 1.4 2.2 1.0 1.0 1.12 890 1.4 0.0 0.0 2.2 0.0 0.72 891 0.0 1.2 0.0 2.2 2.2 1.12 892 2.2 2.2 0.0 1.2 1.0 1.32 893 1.2 0.0 0.0 1.4 1.0 0.72 894 2.2 1.4 1.2 0.0 2.2 1.40 895 1.0 1.2 0.0 1.4 1.4 1.00 896 1.0 0.0 1.0 1.4 1.0 0.88 897 2.2 1.2 0.0 1.0 0.0 0.88 898 2.2 2.2 1.0 2.2 2.2 1.96 899 1.2 1.4 1.4 0.0 0.0 0.80 900 1.4 1.4 0.0 1.0 1.0 0.96 901 1.0 0.0 1.2 1.4 1.2 0.96 902 1.2 0.0 0.0 1.2 2.2 0.92 903 1.2 1.0 2.2 1.0 0.0 1.08 904 1.2 1.2 2.2 2.2 2.2 1.80 905 1.2 1.4 1.4 2.2 2.2 1.68 906 0.0 0.0 1.0 2.2 1.4 0.92 907 2.2 1.4 0.0 2.2 2.2 1.60 908 1.2 0.0 1.2 1.4 0.0 0.76 909 1.2 1.2 2.2 2.2 2.2 1.80 910 1.2 2.2 1.2 2.2 0.0 1.36 911 1.0 1.4 0.0 0.0 0.0 0.48 912 0.0 1.4 1.0 0.0 2.2 0.92 913 1.2 1.4 1.4 1.2 0.0 1.04 914 1.2 1.4 1.2 1.4 0.0 1.04 915 0.0 2.2 1.4 0.0 2.2 1.16 916 2.2 1.4 1.2 1.2 1.2 1.44 917 1.0 1.2 0.0 1.2 1.4 0.96 918 0.0 1.2 1.0 1.4 1.0 0.92 919 1.4 1.2 1.4 1.0 1.0 1.20 920 2.2 0.0 1.2 1.2 1.4 1.20 921 1.0 1.4 1.4 1.2 2.2 1.44 922 1.2 1.4 1.2 1.2 1.0 1.20 923 0.0 1.4 0.0 1.4 1.4 0.84 924 2.2 2.2 1.2 1.2 1.0 1.56 925 1.2 0.0 1.2 0.0 1.2 0.72 926 2.2 1.2 2.2 0.0 2.2 1.56 927 2.2 2.2 0.0 2.2 2.2 1.76 928 1.4 1.0 2.2 0.0 2.2 1.36 929 1.2 1.0 1.4 1.4 1.4 1.28 930 2.2 1.0 1.2 0.0 2.2 1.32 931 1.0 1.0 0.0 2.2 0.0 0.84 932 0.0 0.0 1.2 1.2 1.4 0.76 933 0.0 0.0 1.2 0.0 1.4 0.52 934 1.4 1.0 2.2 2.2 1.4 1.64 935 2.2 1.2 1.4 1.0 2.2 1.60 936 0.0 1.0 1.0 0.0 0.0 0.40 937 1.4 1.2 1.2 0.0 1.0 0.96 938 2.2 1.0 2.2 2.2 1.4 1.80 939 1.0 1.2 1.4 1.0 2.2 1.36 940 0.0 2.2 1.0 1.4 2.2 1.36 941 2.2 0.0 1.4 0.0 1.2 0.96 942 2.2 1.2 1.2 1.2 1.2 1.40 943 1.4 1.0 1.4 2.2 1.4 1.48 944 1.4 2.2 1.2 1.4 0.0 1.24 945 1.2 1.0 2.2 1.2 1.2 1.36 946 2.2 1.0 0.0 0.0 1.4 0.92 947 1.2 1.4 1.2 1.4 1.0 1.24 948 1.4 1.2 2.2 2.2 1.0 1.60 949 0.0 1.0 0.0 2.2 1.2 0.88 950 0.0 1.4 2.2 2.2 0.0 1.16 951 2.2 1.4 1.4 0.0 1.0 1.20 952 2.2 1.4 1.4 1.2 1.0 1.44 953 1.4 0.0 1.2 1.4 1.4 1.08 954 1.2 2.2 2.2 1.0 1.4 1.60 955 1.4 1.4 0.0 1.2 1.0 1.00 956 1.4 1.2 1.2 1.2 1.2 1.24 957 0.0 2.2 1.0 2.2 0.0 1.08 958 2.2 0.0 2.2 1.4 2.2 1.60 959 1.2 1.0 2.2 1.4 1.4 1.44 960 1.2 1.4 1.2 2.2 0.0 1.20 961 0.0 1.0 1.2 2.2 0.0 0.88 962 0.0 0.0 1.0 2.2 1.0 0.84 963 1.0 1.4 1.4 0.0 2.2 1.20 964 1.4 2.2 0.0 0.0 1.2 0.96 965 1.2 2.2 0.0 1.2 1.4 1.20 966 2.2 1.2 1.4 2.2 1.2 1.64 967 1.4 1.0 1.0 1.0 0.0 0.88 968 0.0 1.4 0.0 1.4 1.2 0.80 969 1.2 2.2 0.0 1.0 1.0 1.08 970 0.0 2.2 1.4 2.2 2.2 1.60 971 1.0 1.2 1.4 2.2 1.4 1.44 972 1.4 1.4 0.0 1.0 1.4 1.04 973 1.4 1.4 1.4 1.2 1.4 1.36 974 1.2 0.0 0.0 1.0 0.0 0.44 975 1.4 0.0 0.0 1.0 1.0 0.68 976 1.2 0.0 1.2 1.2 1.4 1.00 977 1.0 0.0 0.0 1.2 1.2 0.68 978 0.0 1.0 1.4 1.4 1.0 0.96 979 1.0 2.2 1.0 1.2 1.4 1.36 980 1.4 0.0 2.2 0.0 1.2 0.96 981 2.2 1.2 1.2 1.4 2.2 1.64 982 1.2 2.2 1.4 1.2 1.4 1.48 983 1.2 1.4 2.2 1.0 1.4 1.44 984 1.4 1.0 1.0 1.2 1.4 1.20 985 1.4 2.2 2.2 2.2 0.0 1.60 986 2.2 1.2 1.0 0.0 2.2 1.32 987 0.0 1.0 2.2 0.0 1.0 0.84 988 1.0 0.0 2.2 1.4 1.2 1.16 989 1.4 1.0 1.4 1.0 1.2 1.20 990 1.4 1.2 2.2 2.2 0.0 1.40 991 1.4 2.2 2.2 1.0 1.2 1.60 992 1.4 2.2 2.2 2.2 1.0 1.80 993 0.0 0.0 0.0 2.2 1.2 0.68 994 1.4 1.2 1.2 1.4 1.0 1.24 995 0.0 1.4 0.0 1.0 1.2 0.72 996 0.0 2.2 1.4 1.4 1.0 1.20 997 1.0 1.4 0.0 0.0 1.4 0.76 998 1.0 1.0 1.4 0.0 1.4 0.96 999 1.0 0.0 1.2 1.4 2.2 1.16 1000 2.2 2.2 0.0 1.2 1.0 1.32 #After the data has been shown in a table, remove it from bootstrap_data in order to be able to plot it bootstrap_data$t = subset(bootstrap_data$t, select = -c(1, 2, 3, 4, 5)) #To put both plots in the same line par(mfrow = c(1, 2)) #Plot histogram h &lt;- hist(bootstrap_data$t, main = &quot;Bootstrap simulation \\n distribution&quot;, xlab = &quot;Simulated mean difference between \\n floors point averages&quot;, ylab = &quot;Frequency&quot;, col = &quot;green&quot;) #Plot normal curve on top of histogram xfit &lt;- seq(min(bootstrap_data$t), max(bootstrap_data$t), length = 40) yfit &lt;- dnorm(xfit, mean = mean(bootstrap_data$t), sd = sd(bootstrap_data$t)) yfit &lt;- yfit * diff(h$mids[1:2]) * 1000 lines(xfit, yfit, col = &quot;red&quot;, lwd = 2) #Plot QQ plot qqnorm(bootstrap_data$t, main = &quot;Probability plot for simulated \\n mean difference between floors&quot;, col = &quot;green&quot;, pch = 19) #To create straight line for QQ plot qqline(bootstrap_data$t, col = &quot;red&quot;, lwd = 3, qtype = 6, distribution = qnorm) Figure 5.4: Histogram and probability plot for simulated mean difference between floor sound levels averages 5.13 Analysis of the experiment (two sample comparisons) 5.13.1 Hypothesis used \\[ \\begin{gather*} H_0: \\mu_D \\le 0 \\\\ H_1: \\mu_D \\gt 0 \\\\ \\end{gather*} \\] 5.13.2 Significance level \\[\\alpha = 0.05\\] 5.13.3 Calculations Data presented in section Individual sample estimation of parameters and confidence intervals will be reused here. u0 &lt;- 0 t_test &lt;- (mean_mean_diff_floors - u0)/(std_dev_mean_diff/sqrt(n_days)) p_value_D &lt;- pt(t_test, doF, lower.tail = F) \\[ \\begin{gather*} t = \\frac{\\bar{D}-\\mu_0}{s_D/\\sqrt{n}} = t = \\frac{1.1600-0}{0.7925/\\sqrt{5}} = 3.2731 \\\\ P = 0.0153 \\end{gather*} \\] The above can be verified using R built-in formulas as shown beneath. t.test(mean_floor_2, mean_floor_4, paired = T, alternative = &quot;greater&quot;, conf.level = 0.95) ## ## Paired t-test ## ## data: mean_floor_2 and mean_floor_4 ## t = 3.2731, df = 4, p-value = 0.01535 ## alternative hypothesis: true mean difference is greater than 0 ## 95 percent confidence interval: ## 0.4044716 Inf ## sample estimates: ## mean difference ## 1.16 5.14 Statistical conclusion \\[P-value &lt; \\alpha\\] 5.15 Practical conclusion \\(H_0\\) is rejected, therefore, there is sufficient evidence to conclude that the noise level in the 2nd floor is higher than the 4th floor. "],["references.html", "6 References", " 6 References "]]
